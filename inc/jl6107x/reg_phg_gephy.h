//reg_phg_gephy.h
/*
* Automatically generated by gen_c_api.py, don't edit it
*/
#ifndef __JL_REG_PHG_GEPHY_H__
#define __JL_REG_PHG_GEPHY_H__

#include <jl_types.h>

#define PHG_GEPHY4_BASE                                                                        ((jl_uint32)0x00254000U)
#define PHG_GEPHY4_BLOCK_SIZE                                                                  ((jl_uint32)0x00004000U)
#define PHG_GEPHY3_BASE                                                                        ((jl_uint32)0x00250000U)
#define PHG_GEPHY3_BLOCK_SIZE                                                                  ((jl_uint32)0x00004000U)
#define PHG_GEPHY2_BASE                                                                        ((jl_uint32)0x0024C000U)
#define PHG_GEPHY2_BLOCK_SIZE                                                                  ((jl_uint32)0x00004000U)
#define PHG_GEPHY1_BASE                                                                        ((jl_uint32)0x00248000U)
#define PHG_GEPHY1_BLOCK_SIZE                                                                  ((jl_uint32)0x00004000U)
#define PHG_GEPHY0_BASE                                                                        ((jl_uint32)0x00244000U)
#define PHG_GEPHY0_BLOCK_SIZE                                                                  ((jl_uint32)0x00004000U)

#define PHG_GEPHY_IEEE_BMCR                                                                    ((jl_uint32)0x00244000U)
#define PHG_GEPHY_IEEE_BMCR_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_IEEE_BMCR_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_RSVD_0                                                                      (0)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_RSVD_0_WIDTH                                                                (6)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_SPEED_SEL_MSB                                                               (6)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_SPEED_SEL_MSB_WIDTH                                                         (1)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_COLLISION_TEST_STATUS                                                       (7)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_COLLISION_TEST_STATUS_WIDTH                                                 (1)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_DUPLEX_MODE                                                                 (8)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_DUPLEX_MODE_WIDTH                                                           (1)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_RESTART_AN                                                                  (9)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_RESTART_AN_WIDTH                                                            (1)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_ISOLATE_EN                                                                 (10)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_ISOLATE_EN_WIDTH                                                            (1)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_POWER_DOWN                                                                 (11)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_POWER_DOWN_WIDTH                                                            (1)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_AN_EN                                                                      (12)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_AN_EN_WIDTH                                                                 (1)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_SPEED_SEL_LSB                                                              (13)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_SPEED_SEL_LSB_WIDTH                                                         (1)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_LPBK_EN                                                                    (14)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_LPBK_EN_WIDTH                                                               (1)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_SOFTWARE_RESET                                                             (15)
#define PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_SOFTWARE_RESET_WIDTH                                                        (1)
typedef union PHG_GEPHY_IEEE_BMCR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_rsvd_0:PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_RSVD_0_WIDTH;                                               //[ 5: 0]
        jl_uint32 ieee_speed_sel_msb:PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_SPEED_SEL_MSB_WIDTH;                                 //[ 6: 6]
        jl_uint32 ieee_collision_test_status:PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_COLLISION_TEST_STATUS_WIDTH;                 //[ 7: 7]
        jl_uint32 ieee_duplex_mode:PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_DUPLEX_MODE_WIDTH;                                     //[ 8: 8]
        jl_uint32 ieee_restart_an:PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_RESTART_AN_WIDTH;                                       //[ 9: 9]
        jl_uint32 ieee_isolate_en:PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_ISOLATE_EN_WIDTH;                                       //[10:10]
        jl_uint32 ieee_power_down:PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_POWER_DOWN_WIDTH;                                       //[11:11]
        jl_uint32 ieee_an_en:PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_AN_EN_WIDTH;                                                 //[12:12]
        jl_uint32 ieee_speed_sel_lsb:PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_SPEED_SEL_LSB_WIDTH;                                 //[13:13]
        jl_uint32 ieee_lpbk_en:PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_LPBK_EN_WIDTH;                                             //[14:14]
        jl_uint32 ieee_software_reset:PHG_GEPHY_IEEE_BMCR_OFFSET_IEEE_SOFTWARE_RESET_WIDTH;                               //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_IEEE_BMCR_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_IEEE_BMCR_ENTRY_SIZE];
} PHG_GEPHY_IEEE_BMCR_t;

#define PHG_GEPHY_IEEE_BMSR                                                                    ((jl_uint32)0x00244004U)
#define PHG_GEPHY_IEEE_BMSR_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_IEEE_BMSR_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_EXTENDED_CAPABILITY                                                         (0)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_EXTENDED_CAPABILITY_WIDTH                                                   (1)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_JABBER_DET                                                                  (1)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_JABBER_DET_WIDTH                                                            (1)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_LINK_STATUS                                                                 (2)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_LINK_STATUS_WIDTH                                                           (1)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_AN_ABILITY                                                                  (3)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_AN_ABILITY_WIDTH                                                            (1)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_REM_FAULT                                                                   (4)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_REM_FAULT_WIDTH                                                             (1)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_AN_COMPLETE                                                                 (5)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_AN_COMPLETE_WIDTH                                                           (1)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_MF_PREAMBLE_SUPP                                                            (6)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_MF_PREAMBLE_SUPP_WIDTH                                                      (1)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_RSVD_BMSR                                                                   (7)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_RSVD_BMSR_WIDTH                                                             (1)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_EXTENDED_STATUS                                                             (8)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_EXTENDED_STATUS_WIDTH                                                       (1)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_100BASET2_HALF_DUPLEX                                                       (9)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_100BASET2_HALF_DUPLEX_WIDTH                                                 (1)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_100BASET2_FULL_DUPLEX                                                      (10)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_100BASET2_FULL_DUPLEX_WIDTH                                                 (1)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_10MBPS_HALF_DUPLEX                                                         (11)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_10MBPS_HALF_DUPLEX_WIDTH                                                    (1)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_10MBPS_FULL_DUPLEX                                                         (12)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_10MBPS_FULL_DUPLEX_WIDTH                                                    (1)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_100BASEX_HALF_DUPLEX                                                       (13)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_100BASEX_HALF_DUPLEX_WIDTH                                                  (1)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_100BASEX_FULL_DUPLEX                                                       (14)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_100BASEX_FULL_DUPLEX_WIDTH                                                  (1)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_100BASE_T4                                                                 (15)
#define PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_100BASE_T4_WIDTH                                                            (1)
typedef union PHG_GEPHY_IEEE_BMSR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_extended_capability:PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_EXTENDED_CAPABILITY_WIDTH;                     //[ 0: 0]
        jl_uint32 ieee_jabber_det:PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_JABBER_DET_WIDTH;                                       //[ 1: 1]
        jl_uint32 ieee_link_status:PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_LINK_STATUS_WIDTH;                                     //[ 2: 2]
        jl_uint32 ieee_an_ability:PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_AN_ABILITY_WIDTH;                                       //[ 3: 3]
        jl_uint32 ieee_rem_fault:PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_REM_FAULT_WIDTH;                                         //[ 4: 4]
        jl_uint32 ieee_an_complete:PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_AN_COMPLETE_WIDTH;                                     //[ 5: 5]
        jl_uint32 ieee_mf_preamble_supp:PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_MF_PREAMBLE_SUPP_WIDTH;                           //[ 6: 6]
        jl_uint32 ieee_rsvd_bmsr:PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_RSVD_BMSR_WIDTH;                                         //[ 7: 7]
        jl_uint32 ieee_extended_status:PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_EXTENDED_STATUS_WIDTH;                             //[ 8: 8]
        jl_uint32 ieee_100baset2_half_duplex:PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_100BASET2_HALF_DUPLEX_WIDTH;                 //[ 9: 9]
        jl_uint32 ieee_100baset2_full_duplex:PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_100BASET2_FULL_DUPLEX_WIDTH;                 //[10:10]
        jl_uint32 ieee_10mbps_half_duplex:PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_10MBPS_HALF_DUPLEX_WIDTH;                       //[11:11]
        jl_uint32 ieee_10mbps_full_duplex:PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_10MBPS_FULL_DUPLEX_WIDTH;                       //[12:12]
        jl_uint32 ieee_100basex_half_duplex:PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_100BASEX_HALF_DUPLEX_WIDTH;                   //[13:13]
        jl_uint32 ieee_100basex_full_duplex:PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_100BASEX_FULL_DUPLEX_WIDTH;                   //[14:14]
        jl_uint32 ieee_100base_t4:PHG_GEPHY_IEEE_BMSR_OFFSET_IEEE_100BASE_T4_WIDTH;                                       //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_IEEE_BMSR_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_IEEE_BMSR_ENTRY_SIZE];
} PHG_GEPHY_IEEE_BMSR_t;

#define PHG_GEPHY_IEEE_PHYID1                                                                  ((jl_uint32)0x00244008U)
#define PHG_GEPHY_IEEE_PHYID1_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_IEEE_PHYID1_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_IEEE_PHYID1_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_IEEE_PHYID1_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_IEEE_PHYID1_OFFSET_IEEE_PHY_OUI_HIGH                                                              (0)
#define PHG_GEPHY_IEEE_PHYID1_OFFSET_IEEE_PHY_OUI_HIGH_WIDTH                                                       (16)
typedef union PHG_GEPHY_IEEE_PHYID1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_phy_oui_high:PHG_GEPHY_IEEE_PHYID1_OFFSET_IEEE_PHY_OUI_HIGH_WIDTH;                                 //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_IEEE_PHYID1_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_IEEE_PHYID1_ENTRY_SIZE];
} PHG_GEPHY_IEEE_PHYID1_t;

#define PHG_GEPHY_IEEE_PHYID2                                                                  ((jl_uint32)0x0024400CU)
#define PHG_GEPHY_IEEE_PHYID2_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_IEEE_PHYID2_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_IEEE_PHYID2_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_IEEE_PHYID2_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_IEEE_PHYID2_OFFSET_IEEE_REV_NUM                                                                   (0)
#define PHG_GEPHY_IEEE_PHYID2_OFFSET_IEEE_REV_NUM_WIDTH                                                             (4)
#define PHG_GEPHY_IEEE_PHYID2_OFFSET_IEEE_MODEL_NUM                                                                 (4)
#define PHG_GEPHY_IEEE_PHYID2_OFFSET_IEEE_MODEL_NUM_WIDTH                                                           (6)
#define PHG_GEPHY_IEEE_PHYID2_OFFSET_IEEE_PHY_OUI_LOW                                                              (10)
#define PHG_GEPHY_IEEE_PHYID2_OFFSET_IEEE_PHY_OUI_LOW_WIDTH                                                         (6)
typedef union PHG_GEPHY_IEEE_PHYID2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_rev_num:PHG_GEPHY_IEEE_PHYID2_OFFSET_IEEE_REV_NUM_WIDTH;                                           //[ 3: 0]
        jl_uint32 ieee_model_num:PHG_GEPHY_IEEE_PHYID2_OFFSET_IEEE_MODEL_NUM_WIDTH;                                       //[ 9: 4]
        jl_uint32 ieee_phy_oui_low:PHG_GEPHY_IEEE_PHYID2_OFFSET_IEEE_PHY_OUI_LOW_WIDTH;                                   //[15:10]
        jl_uint32 rsvd0:PHG_GEPHY_IEEE_PHYID2_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_IEEE_PHYID2_ENTRY_SIZE];
} PHG_GEPHY_IEEE_PHYID2_t;

#define PHG_GEPHY_IEEE_ANAR                                                                    ((jl_uint32)0x00244010U)
#define PHG_GEPHY_IEEE_ANAR_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_IEEE_ANAR_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_IEEE_ANAR_OFFSET_RSVD0                                                                           (12)
#define PHG_GEPHY_IEEE_ANAR_OFFSET_RSVD0_WIDTH                                                                     (20)
#define PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_AN_SELECTOR_FIELD                                                           (0)
#define PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_AN_SELECTOR_FIELD_WIDTH                                                     (5)
#define PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_10BASET_HALF_DUPLEX                                                         (5)
#define PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_10BASET_HALF_DUPLEX_WIDTH                                                   (1)
#define PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_10BASET_FULL_DUPLEX                                                         (6)
#define PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_10BASET_FULL_DUPLEX_WIDTH                                                   (1)
#define PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_100BASETX_HALF_DUPLEX                                                       (7)
#define PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_100BASETX_HALF_DUPLEX_WIDTH                                                 (1)
#define PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_100BASETX_FULL_DUPLEX                                                       (8)
#define PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_100BASETX_FULL_DUPLEX_WIDTH                                                 (1)
#define PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_100BASET4                                                                   (9)
#define PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_100BASET4_WIDTH                                                             (1)
#define PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_PAUSE                                                                      (10)
#define PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_PAUSE_WIDTH                                                                 (1)
#define PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_ASYM_PAUSE                                                                 (11)
#define PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_ASYM_PAUSE_WIDTH                                                            (1)
typedef union PHG_GEPHY_IEEE_ANAR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_an_selector_field:PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_AN_SELECTOR_FIELD_WIDTH;                         //[ 4: 0]
        jl_uint32 ieee_an_10baset_half_duplex:PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_10BASET_HALF_DUPLEX_WIDTH;                  //[ 5: 5]
        jl_uint32 ieee_an_10baset_full_duplex:PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_10BASET_FULL_DUPLEX_WIDTH;                  //[ 6: 6]
        jl_uint32 ieee_an_100basetx_half_duplex:PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_100BASETX_HALF_DUPLEX_WIDTH;              //[ 7: 7]
        jl_uint32 ieee_an_100basetx_full_duplex:PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_100BASETX_FULL_DUPLEX_WIDTH;              //[ 8: 8]
        jl_uint32 ieee_an_100baset4:PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_100BASET4_WIDTH;                                      //[ 9: 9]
        jl_uint32 ieee_an_pause:PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_PAUSE_WIDTH;                                              //[10:10]
        jl_uint32 ieee_an_asym_pause:PHG_GEPHY_IEEE_ANAR_OFFSET_IEEE_ASYM_PAUSE_WIDTH;                                    //[11:11]
		jl_uint32 rsvd0:PHG_GEPHY_IEEE_ANAR_OFFSET_RSVD0_WIDTH;                                                           //[31:12]
    } BF;
    jl_uint32 val[PHG_GEPHY_IEEE_ANAR_ENTRY_SIZE];
} PHG_GEPHY_IEEE_ANAR_t;

#define PHG_GEPHY_IEEE_ANLPAR                                                                  ((jl_uint32)0x00244014U)
#define PHG_GEPHY_IEEE_ANLPAR_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_IEEE_ANLPAR_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_IEEE_ANLPAR_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_IEEE_ANLPAR_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_IEEE_ANLPAR_OFFSET_IEEE_AN_LP_ADV                                                                 (0)
#define PHG_GEPHY_IEEE_ANLPAR_OFFSET_IEEE_AN_LP_ADV_WIDTH                                                          (16)
typedef union PHG_GEPHY_IEEE_ANLPAR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_an_lp_adv:PHG_GEPHY_IEEE_ANLPAR_OFFSET_IEEE_AN_LP_ADV_WIDTH;                                       //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_IEEE_ANLPAR_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_IEEE_ANLPAR_ENTRY_SIZE];
} PHG_GEPHY_IEEE_ANLPAR_t;

#define PHG_GEPHY_IEEE_ANER                                                                    ((jl_uint32)0x00244018U)
#define PHG_GEPHY_IEEE_ANER_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_IEEE_ANER_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_IEEE_ANER_OFFSET_RSVD1                                                                           (16)
#define PHG_GEPHY_IEEE_ANER_OFFSET_RSVD1_WIDTH                                                                     (16)
#define PHG_GEPHY_IEEE_ANER_OFFSET_IEEE_AN_LP_AN_ABLE                                                               (0)
#define PHG_GEPHY_IEEE_ANER_OFFSET_IEEE_AN_LP_AN_ABLE_WIDTH                                                         (1)
#define PHG_GEPHY_IEEE_ANER_OFFSET_IEEE_AN_PAGE_RECEVIED                                                            (1)
#define PHG_GEPHY_IEEE_ANER_OFFSET_IEEE_AN_PAGE_RECEVIED_WIDTH                                                      (1)
#define PHG_GEPHY_IEEE_ANER_OFFSET_IEEE_AN_LOC_NEXTPAGE_ABLE                                                        (2)
#define PHG_GEPHY_IEEE_ANER_OFFSET_IEEE_AN_LOC_NEXTPAGE_ABLE_WIDTH                                                  (1)
#define PHG_GEPHY_IEEE_ANER_OFFSET_IEEE_AN_LP_NEXTPAGE_ABLE                                                         (3)
#define PHG_GEPHY_IEEE_ANER_OFFSET_IEEE_AN_LP_NEXTPAGE_ABLE_WIDTH                                                   (1)
#define PHG_GEPHY_IEEE_ANER_OFFSET_IEEE_AN_PARALLEL_DET_FAULT                                                       (4)
#define PHG_GEPHY_IEEE_ANER_OFFSET_IEEE_AN_PARALLEL_DET_FAULT_WIDTH                                                 (1)
#define PHG_GEPHY_IEEE_ANER_OFFSET_RSVD0                                                                            (5)
#define PHG_GEPHY_IEEE_ANER_OFFSET_RSVD0_WIDTH                                                                      (2)
#define PHG_GEPHY_IEEE_ANER_OFFSET_IEEE_RSVD_1                                                                      (7)
#define PHG_GEPHY_IEEE_ANER_OFFSET_IEEE_RSVD_1_WIDTH                                                                (9)
typedef union PHG_GEPHY_IEEE_ANER_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_an_lp_an_able:PHG_GEPHY_IEEE_ANER_OFFSET_IEEE_AN_LP_AN_ABLE_WIDTH;                                 //[ 0: 0]
        jl_uint32 ieee_an_page_recevied:PHG_GEPHY_IEEE_ANER_OFFSET_IEEE_AN_PAGE_RECEVIED_WIDTH;                           //[ 1: 1]
        jl_uint32 ieee_an_loc_nextpage_able:PHG_GEPHY_IEEE_ANER_OFFSET_IEEE_AN_LOC_NEXTPAGE_ABLE_WIDTH;                   //[ 2: 2]
        jl_uint32 ieee_an_lp_nextpage_able:PHG_GEPHY_IEEE_ANER_OFFSET_IEEE_AN_LP_NEXTPAGE_ABLE_WIDTH;                     //[ 3: 3]
        jl_uint32 ieee_an_parallel_det_fault:PHG_GEPHY_IEEE_ANER_OFFSET_IEEE_AN_PARALLEL_DET_FAULT_WIDTH;                 //[ 4: 4]
        jl_uint32 rsvd0:PHG_GEPHY_IEEE_ANER_OFFSET_RSVD0_WIDTH;                                                           //[ 6: 5]
        jl_uint32 ieee_rsvd_1:PHG_GEPHY_IEEE_ANER_OFFSET_IEEE_RSVD_1_WIDTH;                                               //[15: 7]
        jl_uint32 rsvd1:PHG_GEPHY_IEEE_ANER_OFFSET_RSVD1_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_IEEE_ANER_ENTRY_SIZE];
} PHG_GEPHY_IEEE_ANER_t;

#define PHG_GEPHY_IEEE_ANNPTR                                                                  ((jl_uint32)0x0024401CU)
#define PHG_GEPHY_IEEE_ANNPTR_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_IEEE_ANNPTR_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_IEEE_ANNPTR_OFFSET_RSVD1                                                                         (16)
#define PHG_GEPHY_IEEE_ANNPTR_OFFSET_RSVD1_WIDTH                                                                   (16)
#define PHG_GEPHY_IEEE_ANNPTR_OFFSET_IEEE_AN_TX_MESS_FIELD                                                          (0)
#define PHG_GEPHY_IEEE_ANNPTR_OFFSET_IEEE_AN_TX_MESS_FIELD_WIDTH                                                   (11)
#define PHG_GEPHY_IEEE_ANNPTR_OFFSET_IEEE_AN_TX_TOGGLE                                                             (11)
#define PHG_GEPHY_IEEE_ANNPTR_OFFSET_IEEE_AN_TX_TOGGLE_WIDTH                                                        (1)
#define PHG_GEPHY_IEEE_ANNPTR_OFFSET_IEEE_AN_TX_ACK2                                                               (12)
#define PHG_GEPHY_IEEE_ANNPTR_OFFSET_IEEE_AN_TX_ACK2_WIDTH                                                          (1)
#define PHG_GEPHY_IEEE_ANNPTR_OFFSET_IEEE_AN_TX_MESS_PAGE_MODE                                                     (13)
#define PHG_GEPHY_IEEE_ANNPTR_OFFSET_IEEE_AN_TX_MESS_PAGE_MODE_WIDTH                                                (1)
#define PHG_GEPHY_IEEE_ANNPTR_OFFSET_RSVD0                                                                         (14)
#define PHG_GEPHY_IEEE_ANNPTR_OFFSET_RSVD0_WIDTH                                                                    (1)
#define PHG_GEPHY_IEEE_ANNPTR_OFFSET_IEEE_AN_TX_NEXTPAGE                                                           (15)
#define PHG_GEPHY_IEEE_ANNPTR_OFFSET_IEEE_AN_TX_NEXTPAGE_WIDTH                                                      (1)
typedef union PHG_GEPHY_IEEE_ANNPTR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_an_tx_mess_field:PHG_GEPHY_IEEE_ANNPTR_OFFSET_IEEE_AN_TX_MESS_FIELD_WIDTH;                         //[10: 0]
        jl_uint32 ieee_an_tx_toggle:PHG_GEPHY_IEEE_ANNPTR_OFFSET_IEEE_AN_TX_TOGGLE_WIDTH;                                 //[11:11]
        jl_uint32 ieee_an_tx_ack2:PHG_GEPHY_IEEE_ANNPTR_OFFSET_IEEE_AN_TX_ACK2_WIDTH;                                     //[12:12]
        jl_uint32 ieee_an_tx_mess_page_mode:PHG_GEPHY_IEEE_ANNPTR_OFFSET_IEEE_AN_TX_MESS_PAGE_MODE_WIDTH;                 //[13:13]
        jl_uint32 rsvd0:PHG_GEPHY_IEEE_ANNPTR_OFFSET_RSVD0_WIDTH;                                                         //[14:14]
        jl_uint32 ieee_an_tx_nextpage:PHG_GEPHY_IEEE_ANNPTR_OFFSET_IEEE_AN_TX_NEXTPAGE_WIDTH;                             //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_IEEE_ANNPTR_OFFSET_RSVD1_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_IEEE_ANNPTR_ENTRY_SIZE];
} PHG_GEPHY_IEEE_ANNPTR_t;

#define PHG_GEPHY_IEEE_ANNPRR                                                                  ((jl_uint32)0x00244020U)
#define PHG_GEPHY_IEEE_ANNPRR_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_IEEE_ANNPRR_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_IEEE_ANNPRR_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_IEEE_ANNPRR_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_IEEE_ANNPRR_OFFSET_IEEE_AN_RX_MESSAGE_FIELD                                                       (0)
#define PHG_GEPHY_IEEE_ANNPRR_OFFSET_IEEE_AN_RX_MESSAGE_FIELD_WIDTH                                                (11)
#define PHG_GEPHY_IEEE_ANNPRR_OFFSET_IEEE_AN_RX_TOGGLE                                                             (11)
#define PHG_GEPHY_IEEE_ANNPRR_OFFSET_IEEE_AN_RX_TOGGLE_WIDTH                                                        (1)
#define PHG_GEPHY_IEEE_ANNPRR_OFFSET_IEEE_AN_RX_ACK2                                                               (12)
#define PHG_GEPHY_IEEE_ANNPRR_OFFSET_IEEE_AN_RX_ACK2_WIDTH                                                          (1)
#define PHG_GEPHY_IEEE_ANNPRR_OFFSET_IEEE_AN_RX_MESSAGE_PAGE                                                       (13)
#define PHG_GEPHY_IEEE_ANNPRR_OFFSET_IEEE_AN_RX_MESSAGE_PAGE_WIDTH                                                  (1)
#define PHG_GEPHY_IEEE_ANNPRR_OFFSET_IEEE_AN_RX_ACK                                                                (14)
#define PHG_GEPHY_IEEE_ANNPRR_OFFSET_IEEE_AN_RX_ACK_WIDTH                                                           (1)
#define PHG_GEPHY_IEEE_ANNPRR_OFFSET_IEEE_AN_RX_NEXTPAGE                                                           (15)
#define PHG_GEPHY_IEEE_ANNPRR_OFFSET_IEEE_AN_RX_NEXTPAGE_WIDTH                                                      (1)
typedef union PHG_GEPHY_IEEE_ANNPRR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_an_rx_message_field:PHG_GEPHY_IEEE_ANNPRR_OFFSET_IEEE_AN_RX_MESSAGE_FIELD_WIDTH;                   //[10: 0]
        jl_uint32 ieee_an_rx_toggle:PHG_GEPHY_IEEE_ANNPRR_OFFSET_IEEE_AN_RX_TOGGLE_WIDTH;                                 //[11:11]
        jl_uint32 ieee_an_rx_ack2:PHG_GEPHY_IEEE_ANNPRR_OFFSET_IEEE_AN_RX_ACK2_WIDTH;                                     //[12:12]
        jl_uint32 ieee_an_rx_message_page:PHG_GEPHY_IEEE_ANNPRR_OFFSET_IEEE_AN_RX_MESSAGE_PAGE_WIDTH;                     //[13:13]
        jl_uint32 ieee_an_rx_ack:PHG_GEPHY_IEEE_ANNPRR_OFFSET_IEEE_AN_RX_ACK_WIDTH;                                       //[14:14]
        jl_uint32 ieee_an_rx_nextpage:PHG_GEPHY_IEEE_ANNPRR_OFFSET_IEEE_AN_RX_NEXTPAGE_WIDTH;                             //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_IEEE_ANNPRR_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_IEEE_ANNPRR_ENTRY_SIZE];
} PHG_GEPHY_IEEE_ANNPRR_t;

#define PHG_GEPHY_IEEE_GBCR                                                                    ((jl_uint32)0x00244024U)
#define PHG_GEPHY_IEEE_GBCR_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_IEEE_GBCR_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_IEEE_GBCR_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_IEEE_GBCR_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_RSVD_2                                                                      (0)
#define PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_RSVD_2_WIDTH                                                                (8)
#define PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_BASET1000_HALF_DUPLEX_ADV                                                   (8)
#define PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_BASET1000_HALF_DUPLEX_ADV_WIDTH                                             (1)
#define PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_BASET1000_FULL_DUPLEX_ADV                                                   (9)
#define PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_BASET1000_FULL_DUPLEX_ADV_WIDTH                                             (1)
#define PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_BASET1000_PORT_TYPE                                                        (10)
#define PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_BASET1000_PORT_TYPE_WIDTH                                                   (1)
#define PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_BASET1000_MANUAL_CFG_MS                                                    (11)
#define PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_BASET1000_MANUAL_CFG_MS_WIDTH                                               (1)
#define PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_BASET1000_MS_CFG_EN                                                        (12)
#define PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_BASET1000_MS_CFG_EN_WIDTH                                                   (1)
#define PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_BASET1000_TEST_MODE                                                        (13)
#define PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_BASET1000_TEST_MODE_WIDTH                                                   (3)
typedef union PHG_GEPHY_IEEE_GBCR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_rsvd_2:PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_RSVD_2_WIDTH;                                               //[ 7: 0]
        jl_uint32 ieee_baset1000_half_duplex_adv:PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_BASET1000_HALF_DUPLEX_ADV_WIDTH;         //[ 8: 8]
        jl_uint32 ieee_baset1000_full_duplex_adv:PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_BASET1000_FULL_DUPLEX_ADV_WIDTH;         //[ 9: 9]
        jl_uint32 ieee_baset1000_port_type:PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_BASET1000_PORT_TYPE_WIDTH;                     //[10:10]
        jl_uint32 ieee_baset1000_manual_cfg_ms:PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_BASET1000_MANUAL_CFG_MS_WIDTH;             //[11:11]
        jl_uint32 ieee_baset1000_ms_cfg_en:PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_BASET1000_MS_CFG_EN_WIDTH;                     //[12:12]
        jl_uint32 ieee_baset1000_test_mode:PHG_GEPHY_IEEE_GBCR_OFFSET_IEEE_BASET1000_TEST_MODE_WIDTH;                     //[15:13]
        jl_uint32 rsvd0:PHG_GEPHY_IEEE_GBCR_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_IEEE_GBCR_ENTRY_SIZE];
} PHG_GEPHY_IEEE_GBCR_t;

#define PHG_GEPHY_IEEE_GBSR                                                                    ((jl_uint32)0x00244028U)
#define PHG_GEPHY_IEEE_GBSR_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_IEEE_GBSR_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_IEEE_GBSR_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_IEEE_GBSR_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_IDLE_ERROR_COUNT                                                            (0)
#define PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_IDLE_ERROR_COUNT_WIDTH                                                      (8)
#define PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_RSVD_3                                                                      (8)
#define PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_RSVD_3_WIDTH                                                                (2)
#define PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_BASET1000_LP_HALF_DUPLEX_CAPABILITY                                        (10)
#define PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_BASET1000_LP_HALF_DUPLEX_CAPABILITY_WIDTH                                   (1)
#define PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_BASET1000_LP_FULL_DUPLEX_CAPABILITY                                        (11)
#define PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_BASET1000_LP_FULL_DUPLEX_CAPABILITY_WIDTH                                   (1)
#define PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_BASET1000_REM_RCVR                                                         (12)
#define PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_BASET1000_REM_RCVR_WIDTH                                                    (1)
#define PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_BASET1000_LOC_RCVR                                                         (13)
#define PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_BASET1000_LOC_RCVR_WIDTH                                                    (1)
#define PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_BASET1000_MS_CFG_RESO                                                      (14)
#define PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_BASET1000_MS_CFG_RESO_WIDTH                                                 (1)
#define PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_BASET1000_MS_CFG_FAULT                                                     (15)
#define PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_BASET1000_MS_CFG_FAULT_WIDTH                                                (1)
typedef union PHG_GEPHY_IEEE_GBSR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_idle_error_count:PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_IDLE_ERROR_COUNT_WIDTH;                           //[ 7: 0]
        jl_uint32 ieee_rsvd_3:PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_RSVD_3_WIDTH;                                               //[ 9: 8]
        jl_uint32 ieee_baset1000_lp_half_duplex_capability:PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_BASET1000_LP_HALF_DUPLEX_CAPABILITY_WIDTH;  //[10:10]
        jl_uint32 ieee_baset1000_lp_full_duplex_capability:PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_BASET1000_LP_FULL_DUPLEX_CAPABILITY_WIDTH;  //[11:11]
        jl_uint32 ieee_baset1000_rem_rcvr:PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_BASET1000_REM_RCVR_WIDTH;                       //[12:12]
        jl_uint32 ieee_baset1000_loc_rcvr:PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_BASET1000_LOC_RCVR_WIDTH;                       //[13:13]
        jl_uint32 ieee_baset1000_ms_cfg_reso:PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_BASET1000_MS_CFG_RESO_WIDTH;                 //[14:14]
        jl_uint32 ieee_baset1000_ms_cfg_fault:PHG_GEPHY_IEEE_GBSR_OFFSET_IEEE_BASET1000_MS_CFG_FAULT_WIDTH;               //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_IEEE_GBSR_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_IEEE_GBSR_ENTRY_SIZE];
} PHG_GEPHY_IEEE_GBSR_t;

#define PHG_GEPHY_IEEE_GBESR                                                                   ((jl_uint32)0x0024403CU)
#define PHG_GEPHY_IEEE_GBESR_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_IEEE_GBESR_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_IEEE_GBESR_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_IEEE_GBESR_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_IEEE_GBESR_OFFSET_IEEE_RSVD_4                                                                     (0)
#define PHG_GEPHY_IEEE_GBESR_OFFSET_IEEE_RSVD_4_WIDTH                                                              (12)
#define PHG_GEPHY_IEEE_GBESR_OFFSET_IEEE_BASET1000_HALF_DUPLEX_ABLE                                                (12)
#define PHG_GEPHY_IEEE_GBESR_OFFSET_IEEE_BASET1000_HALF_DUPLEX_ABLE_WIDTH                                           (1)
#define PHG_GEPHY_IEEE_GBESR_OFFSET_IEEE_BASET1000_FULL_DUPLEX_ABLE                                                (13)
#define PHG_GEPHY_IEEE_GBESR_OFFSET_IEEE_BASET1000_FULL_DUPLEX_ABLE_WIDTH                                           (1)
#define PHG_GEPHY_IEEE_GBESR_OFFSET_IEEE_BASEX1000X_HALF_DUPLEX_ABLE                                               (14)
#define PHG_GEPHY_IEEE_GBESR_OFFSET_IEEE_BASEX1000X_HALF_DUPLEX_ABLE_WIDTH                                          (1)
#define PHG_GEPHY_IEEE_GBESR_OFFSET_IEEE_BASEX1000X_FULL_DUPLEX_ABLE                                               (15)
#define PHG_GEPHY_IEEE_GBESR_OFFSET_IEEE_BASEX1000X_FULL_DUPLEX_ABLE_WIDTH                                          (1)
typedef union PHG_GEPHY_IEEE_GBESR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_rsvd_4:PHG_GEPHY_IEEE_GBESR_OFFSET_IEEE_RSVD_4_WIDTH;                                              //[11: 0]
        jl_uint32 ieee_baset1000_half_duplex_able:PHG_GEPHY_IEEE_GBESR_OFFSET_IEEE_BASET1000_HALF_DUPLEX_ABLE_WIDTH;      //[12:12]
        jl_uint32 ieee_baset1000_full_duplex_able:PHG_GEPHY_IEEE_GBESR_OFFSET_IEEE_BASET1000_FULL_DUPLEX_ABLE_WIDTH;      //[13:13]
        jl_uint32 ieee_basex1000x_half_duplex_able:PHG_GEPHY_IEEE_GBESR_OFFSET_IEEE_BASEX1000X_HALF_DUPLEX_ABLE_WIDTH;    //[14:14]
        jl_uint32 ieee_basex1000x_full_duplex_able:PHG_GEPHY_IEEE_GBESR_OFFSET_IEEE_BASEX1000X_FULL_DUPLEX_ABLE_WIDTH;    //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_IEEE_GBESR_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_IEEE_GBESR_ENTRY_SIZE];
} PHG_GEPHY_IEEE_GBESR_t;

#define PHG_GEPHY__REG_P0_CH                                                                   ((jl_uint32)0x00244080U)
#define PHG_GEPHY__REG_P0_CH_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY__REG_P0_CH_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY__REG_P0_CH_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY__REG_P0_CH_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG0_CHANGED                                                              (0)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG0_CHANGED_WIDTH                                                        (1)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG1_CHANGED                                                              (1)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG1_CHANGED_WIDTH                                                        (1)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG2_CHANGED                                                              (2)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG2_CHANGED_WIDTH                                                        (1)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG3_CHANGED                                                              (3)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG3_CHANGED_WIDTH                                                        (1)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG4_CHANGED                                                              (4)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG4_CHANGED_WIDTH                                                        (1)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG5_CHANGED                                                              (5)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG5_CHANGED_WIDTH                                                        (1)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG6_CHANGED                                                              (6)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG6_CHANGED_WIDTH                                                        (1)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG7_CHANGED                                                              (7)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG7_CHANGED_WIDTH                                                        (1)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG8_CHANGED                                                              (8)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG8_CHANGED_WIDTH                                                        (1)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG9_CHANGED                                                              (9)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG9_CHANGED_WIDTH                                                        (1)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG10_CHANGED                                                            (10)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG10_CHANGED_WIDTH                                                       (1)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG11_CHANGED                                                            (11)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG11_CHANGED_WIDTH                                                       (1)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG12_CHANGED                                                            (12)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG12_CHANGED_WIDTH                                                       (1)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG13_CHANGED                                                            (13)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG13_CHANGED_WIDTH                                                       (1)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG14_CHANGED                                                            (14)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG14_CHANGED_WIDTH                                                       (1)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG15_CHANGED                                                            (15)
#define PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG15_CHANGED_WIDTH                                                       (1)
typedef union PHG_GEPHY__REG_P0_CH_u {
    struct __attribute__ ((packed)) {
        jl_uint32 page0_reg0_changed:PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG0_CHANGED_WIDTH;                                //[ 0: 0]
        jl_uint32 page0_reg1_changed:PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG1_CHANGED_WIDTH;                                //[ 1: 1]
        jl_uint32 page0_reg2_changed:PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG2_CHANGED_WIDTH;                                //[ 2: 2]
        jl_uint32 page0_reg3_changed:PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG3_CHANGED_WIDTH;                                //[ 3: 3]
        jl_uint32 page0_reg4_changed:PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG4_CHANGED_WIDTH;                                //[ 4: 4]
        jl_uint32 page0_reg5_changed:PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG5_CHANGED_WIDTH;                                //[ 5: 5]
        jl_uint32 page0_reg6_changed:PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG6_CHANGED_WIDTH;                                //[ 6: 6]
        jl_uint32 page0_reg7_changed:PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG7_CHANGED_WIDTH;                                //[ 7: 7]
        jl_uint32 page0_reg8_changed:PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG8_CHANGED_WIDTH;                                //[ 8: 8]
        jl_uint32 page0_reg9_changed:PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG9_CHANGED_WIDTH;                                //[ 9: 9]
        jl_uint32 page0_reg10_changed:PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG10_CHANGED_WIDTH;                              //[10:10]
        jl_uint32 page0_reg11_changed:PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG11_CHANGED_WIDTH;                              //[11:11]
        jl_uint32 page0_reg12_changed:PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG12_CHANGED_WIDTH;                              //[12:12]
        jl_uint32 page0_reg13_changed:PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG13_CHANGED_WIDTH;                              //[13:13]
        jl_uint32 page0_reg14_changed:PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG14_CHANGED_WIDTH;                              //[14:14]
        jl_uint32 page0_reg15_changed:PHG_GEPHY__REG_P0_CH_OFFSET_PAGE0_REG15_CHANGED_WIDTH;                              //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY__REG_P0_CH_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY__REG_P0_CH_ENTRY_SIZE];
} PHG_GEPHY__REG_P0_CH_t;

#define PHG_GEPHY__REG_P0_CH_CLR                                                               ((jl_uint32)0x00244084U)
#define PHG_GEPHY__REG_P0_CH_CLR_NUM                                                           ((jl_uint32)0x00000001U)
#define PHG_GEPHY__REG_P0_CH_CLR_ENTRY_SIZE                                                                         (1)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_RSVD0                                                                      (16)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_RSVD0_WIDTH                                                                (16)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG0_CHANGED_CLR                                                      (0)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG0_CHANGED_CLR_WIDTH                                                (1)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG1_CHANGED_CLR                                                      (1)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG1_CHANGED_CLR_WIDTH                                                (1)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG2_CHANGED_CLR                                                      (2)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG2_CHANGED_CLR_WIDTH                                                (1)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG3_CHANGED_CLR                                                      (3)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG3_CHANGED_CLR_WIDTH                                                (1)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG4_CHANGED_CLR                                                      (4)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG4_CHANGED_CLR_WIDTH                                                (1)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG5_CHANGED_CLR                                                      (5)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG5_CHANGED_CLR_WIDTH                                                (1)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG6_CHANGED_CLR                                                      (6)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG6_CHANGED_CLR_WIDTH                                                (1)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG7_CHANGED_CLR                                                      (7)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG7_CHANGED_CLR_WIDTH                                                (1)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG8_CHANGED_CLR                                                      (8)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG8_CHANGED_CLR_WIDTH                                                (1)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG9_CHANGED_CLR                                                      (9)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG9_CHANGED_CLR_WIDTH                                                (1)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG10_CHANGED_CLR                                                    (10)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG10_CHANGED_CLR_WIDTH                                               (1)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG11_CHANGED_CLR                                                    (11)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG11_CHANGED_CLR_WIDTH                                               (1)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG12_CHANGED_CLR                                                    (12)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG12_CHANGED_CLR_WIDTH                                               (1)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG13_CHANGED_CLR                                                    (13)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG13_CHANGED_CLR_WIDTH                                               (1)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG14_CHANGED_CLR                                                    (14)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG14_CHANGED_CLR_WIDTH                                               (1)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG15_CHANGED_CLR                                                    (15)
#define PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG15_CHANGED_CLR_WIDTH                                               (1)
typedef union PHG_GEPHY__REG_P0_CH_CLR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 page0_reg0_changed_clr:PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG0_CHANGED_CLR_WIDTH;                    //[ 0: 0]
        jl_uint32 page0_reg1_changed_clr:PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG1_CHANGED_CLR_WIDTH;                    //[ 1: 1]
        jl_uint32 page0_reg2_changed_clr:PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG2_CHANGED_CLR_WIDTH;                    //[ 2: 2]
        jl_uint32 page0_reg3_changed_clr:PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG3_CHANGED_CLR_WIDTH;                    //[ 3: 3]
        jl_uint32 page0_reg4_changed_clr:PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG4_CHANGED_CLR_WIDTH;                    //[ 4: 4]
        jl_uint32 page0_reg5_changed_clr:PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG5_CHANGED_CLR_WIDTH;                    //[ 5: 5]
        jl_uint32 page0_reg6_changed_clr:PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG6_CHANGED_CLR_WIDTH;                    //[ 6: 6]
        jl_uint32 page0_reg7_changed_clr:PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG7_CHANGED_CLR_WIDTH;                    //[ 7: 7]
        jl_uint32 page0_reg8_changed_clr:PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG8_CHANGED_CLR_WIDTH;                    //[ 8: 8]
        jl_uint32 page0_reg9_changed_clr:PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG9_CHANGED_CLR_WIDTH;                    //[ 9: 9]
        jl_uint32 page0_reg10_changed_clr:PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG10_CHANGED_CLR_WIDTH;                  //[10:10]
        jl_uint32 page0_reg11_changed_clr:PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG11_CHANGED_CLR_WIDTH;                  //[11:11]
        jl_uint32 page0_reg12_changed_clr:PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG12_CHANGED_CLR_WIDTH;                  //[12:12]
        jl_uint32 page0_reg13_changed_clr:PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG13_CHANGED_CLR_WIDTH;                  //[13:13]
        jl_uint32 page0_reg14_changed_clr:PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG14_CHANGED_CLR_WIDTH;                  //[14:14]
        jl_uint32 page0_reg15_changed_clr:PHG_GEPHY__REG_P0_CH_CLR_OFFSET_PAGE0_REG15_CHANGED_CLR_WIDTH;                  //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY__REG_P0_CH_CLR_OFFSET_RSVD0_WIDTH;                                                      //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY__REG_P0_CH_CLR_ENTRY_SIZE];
} PHG_GEPHY__REG_P0_CH_CLR_t;

#define PHG_GEPHY_CLKGEN_EN_CTL_1000T                                                          ((jl_uint32)0x002440C0U)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_NUM                                                      ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_ENTRY_SIZE                                                                    (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_RSVD0                                                                 (14)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_RSVD0_WIDTH                                                           (18)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_DBG                                                   (0)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_DBG_WIDTH                                             (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_CDR_A                                                 (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_CDR_A_WIDTH                                           (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_CDR_B                                                 (2)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_CDR_B_WIDTH                                           (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_CDR_C                                                 (3)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_CDR_C_WIDTH                                           (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_CDR_D                                                 (4)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_CDR_D_WIDTH                                           (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_PI_A                                                  (5)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_PI_A_WIDTH                                            (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_PI_B                                                  (6)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_PI_B_WIDTH                                            (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_PI_C                                                  (7)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_PI_C_WIDTH                                            (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_PI_D                                                  (8)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_PI_D_WIDTH                                            (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_REG                                                   (9)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_REG_WIDTH                                             (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_LMS                                                  (10)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_LMS_WIDTH                                             (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_TX                                                   (11)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_TX_WIDTH                                              (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_RX                                                   (12)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_RX_WIDTH                                              (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PCS                                                      (13)
#define PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PCS_WIDTH                                                 (1)
typedef union PHG_GEPHY_CLKGEN_EN_CTL_1000T_u {
    struct __attribute__ ((packed)) {
        jl_uint32 clk_en_1000t_pma_dbg:PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_DBG_WIDTH;                   //[ 0: 0]
        jl_uint32 clk_en_1000t_pma_cdr_a:PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_CDR_A_WIDTH;               //[ 1: 1]
        jl_uint32 clk_en_1000t_pma_cdr_b:PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_CDR_B_WIDTH;               //[ 2: 2]
        jl_uint32 clk_en_1000t_pma_cdr_c:PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_CDR_C_WIDTH;               //[ 3: 3]
        jl_uint32 clk_en_1000t_pma_cdr_d:PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_CDR_D_WIDTH;               //[ 4: 4]
        jl_uint32 clk_en_1000t_pma_pi_a:PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_PI_A_WIDTH;                 //[ 5: 5]
        jl_uint32 clk_en_1000t_pma_pi_b:PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_PI_B_WIDTH;                 //[ 6: 6]
        jl_uint32 clk_en_1000t_pma_pi_c:PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_PI_C_WIDTH;                 //[ 7: 7]
        jl_uint32 clk_en_1000t_pma_pi_d:PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_PI_D_WIDTH;                 //[ 8: 8]
        jl_uint32 clk_en_1000t_pma_reg:PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_REG_WIDTH;                   //[ 9: 9]
        jl_uint32 clk_en_1000t_pma_lms:PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_LMS_WIDTH;                   //[10:10]
        jl_uint32 clk_en_1000t_pma_tx:PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_TX_WIDTH;                     //[11:11]
        jl_uint32 clk_en_1000t_pma_rx:PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PMA_RX_WIDTH;                     //[12:12]
        jl_uint32 clk_en_1000t_pcs:PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_CLK_EN_1000T_PCS_WIDTH;                           //[13:13]
        jl_uint32 rsvd0:PHG_GEPHY_CLKGEN_EN_CTL_1000T_OFFSET_RSVD0_WIDTH;                                                 //[31:14]
    } BF;
    jl_uint32 val[PHG_GEPHY_CLKGEN_EN_CTL_1000T_ENTRY_SIZE];
} PHG_GEPHY_CLKGEN_EN_CTL_1000T_t;

#define PHG_GEPHY_CLKGEN_EN_CTL_100T                                                           ((jl_uint32)0x002440C4U)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_NUM                                                       ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_ENTRY_SIZE                                                                     (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_RSVD1                                                                  (16)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_RSVD1_WIDTH                                                            (16)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_RSVD0                                                                   (0)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_RSVD0_WIDTH                                                             (7)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_10T_TX_DSP                                                       (7)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_10T_TX_DSP_WIDTH                                                 (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_10T_TX_PCSPMA                                                    (8)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_10T_TX_PCSPMA_WIDTH                                              (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_10T_RX_DSP                                                       (9)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_10T_RX_DSP_WIDTH                                                 (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_10T_RX_PCSPMA                                                   (10)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_10T_RX_PCSPMA_WIDTH                                              (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_100X_DAC                                                        (11)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_100X_DAC_WIDTH                                                   (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_100X_ADC                                                        (12)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_100X_ADC_WIDTH                                                   (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_100X_TX                                                         (13)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_100X_TX_WIDTH                                                    (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_100X_RX                                                         (14)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_100X_RX_WIDTH                                                    (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_100X_PI                                                         (15)
#define PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_100X_PI_WIDTH                                                    (1)
typedef union PHG_GEPHY_CLKGEN_EN_CTL_100T_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd0:PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_RSVD0_WIDTH;                                                  //[ 6: 0]
        jl_uint32 clk_en_10t_tx_dsp:PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_10T_TX_DSP_WIDTH;                          //[ 7: 7]
        jl_uint32 clk_en_10t_tx_pcspma:PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_10T_TX_PCSPMA_WIDTH;                    //[ 8: 8]
        jl_uint32 clk_en_10t_rx_dsp:PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_10T_RX_DSP_WIDTH;                          //[ 9: 9]
        jl_uint32 clk_en_10t_rx_pcspma:PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_10T_RX_PCSPMA_WIDTH;                    //[10:10]
        jl_uint32 clk_en_100x_dac:PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_100X_DAC_WIDTH;                              //[11:11]
        jl_uint32 clk_en_100x_adc:PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_100X_ADC_WIDTH;                              //[12:12]
        jl_uint32 clk_en_100x_tx:PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_100X_TX_WIDTH;                                //[13:13]
        jl_uint32 clk_en_100x_rx:PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_100X_RX_WIDTH;                                //[14:14]
        jl_uint32 clk_en_100x_pi:PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_CLK_EN_100X_PI_WIDTH;                                //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_CLKGEN_EN_CTL_100T_OFFSET_RSVD1_WIDTH;                                                  //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CLKGEN_EN_CTL_100T_ENTRY_SIZE];
} PHG_GEPHY_CLKGEN_EN_CTL_100T_t;

#define PHG_GEPHY_CLKGEN_EN_CTL_MISC_0                                                         ((jl_uint32)0x002440C8U)
#define PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_NUM                                                     ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_ENTRY_SIZE                                                                   (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_OFFSET_RSVD1                                                                (16)
#define PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_OFFSET_RSVD1_WIDTH                                                          (16)
#define PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_OFFSET_CLK_EN_GMII_TX                                                        (0)
#define PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_OFFSET_CLK_EN_GMII_TX_WIDTH                                                  (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_OFFSET_CLK_EN_GMII_RX                                                        (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_OFFSET_CLK_EN_GMII_RX_WIDTH                                                  (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_OFFSET_RSVD0                                                                 (2)
#define PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_OFFSET_RSVD0_WIDTH                                                          (12)
#define PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_OFFSET_CLK_EN_RF                                                            (14)
#define PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_OFFSET_CLK_EN_RF_WIDTH                                                       (1)
#define PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_OFFSET_CLK_EN_MCU                                                           (15)
#define PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_OFFSET_CLK_EN_MCU_WIDTH                                                      (1)
typedef union PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 clk_en_gmii_tx:PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_OFFSET_CLK_EN_GMII_TX_WIDTH;                              //[ 0: 0]
        jl_uint32 clk_en_gmii_rx:PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_OFFSET_CLK_EN_GMII_RX_WIDTH;                              //[ 1: 1]
        jl_uint32 rsvd0:PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_OFFSET_RSVD0_WIDTH;                                                //[13: 2]
        jl_uint32 clk_en_rf:PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_OFFSET_CLK_EN_RF_WIDTH;                                        //[14:14]
        jl_uint32 clk_en_mcu:PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_OFFSET_CLK_EN_MCU_WIDTH;                                      //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_OFFSET_RSVD1_WIDTH;                                                //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_ENTRY_SIZE];
} PHG_GEPHY_CLKGEN_EN_CTL_MISC_0_t;

#define PHG_GEPHY_CLKGEN_RST_CTL_MISC_0                                                        ((jl_uint32)0x002440CCU)
#define PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_NUM                                                    ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_ENTRY_SIZE                                                                  (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_OFFSET_RSVD2                                                               (16)
#define PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_OFFSET_RSVD2_WIDTH                                                         (16)
#define PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_OFFSET_RSVD1                                                                (0)
#define PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_OFFSET_RSVD1_WIDTH                                                         (12)
#define PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_OFFSET_RSTN_CTRL_OSC                                                       (12)
#define PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_OFFSET_RSTN_CTRL_OSC_WIDTH                                                  (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_OFFSET_RSVD0                                                               (13)
#define PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_OFFSET_RSVD0_WIDTH                                                          (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_OFFSET_RSTN_CTRL_RF                                                        (14)
#define PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_OFFSET_RSTN_CTRL_RF_WIDTH                                                   (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_OFFSET_RSTN_CTRL_MCU                                                       (15)
#define PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_OFFSET_RSTN_CTRL_MCU_WIDTH                                                  (1)
typedef union PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd1:PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_OFFSET_RSVD1_WIDTH;                                               //[11: 0]
        jl_uint32 rstn_ctrl_osc:PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_OFFSET_RSTN_CTRL_OSC_WIDTH;                               //[12:12]
        jl_uint32 rsvd0:PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_OFFSET_RSVD0_WIDTH;                                               //[13:13]
        jl_uint32 rstn_ctrl_rf:PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_OFFSET_RSTN_CTRL_RF_WIDTH;                                 //[14:14]
        jl_uint32 rstn_ctrl_mcu:PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_OFFSET_RSTN_CTRL_MCU_WIDTH;                               //[15:15]
        jl_uint32 rsvd2:PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_OFFSET_RSVD2_WIDTH;                                               //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_ENTRY_SIZE];
} PHG_GEPHY_CLKGEN_RST_CTL_MISC_0_t;

#define PHG_GEPHY_CLKGEN_RST_CTL_1000T                                                         ((jl_uint32)0x002440D0U)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_NUM                                                     ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_ENTRY_SIZE                                                                   (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSVD0                                                                (16)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSVD0_WIDTH                                                          (16)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_DBG                                               (0)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_DBG_WIDTH                                         (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_CDR_A                                             (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_CDR_A_WIDTH                                       (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_CDR_B                                             (2)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_CDR_B_WIDTH                                       (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_CDR_C                                             (3)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_CDR_C_WIDTH                                       (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_CDR_D                                             (4)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_CDR_D_WIDTH                                       (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_PI_A                                              (5)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_PI_A_WIDTH                                        (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_PI_B                                              (6)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_PI_B_WIDTH                                        (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_PI_C                                              (7)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_PI_C_WIDTH                                        (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_PI_D                                              (8)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_PI_D_WIDTH                                        (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_REG                                               (9)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_REG_WIDTH                                         (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_LMS                                              (10)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_LMS_WIDTH                                         (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_TX                                               (11)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_TX_WIDTH                                          (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_RX                                               (12)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_RX_WIDTH                                          (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PCS                                                  (13)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PCS_WIDTH                                             (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_GMII_TX                                                    (14)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_GMII_TX_WIDTH                                               (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_GMII_RX                                                    (15)
#define PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_GMII_RX_WIDTH                                               (1)
typedef union PHG_GEPHY_CLKGEN_RST_CTL_1000T_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rstn_ctrl_1000t_pma_dbg:PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_DBG_WIDTH;            //[ 0: 0]
        jl_uint32 rstn_ctrl_1000t_pma_cdr_a:PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_CDR_A_WIDTH;        //[ 1: 1]
        jl_uint32 rstn_ctrl_1000t_pma_cdr_b:PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_CDR_B_WIDTH;        //[ 2: 2]
        jl_uint32 rstn_ctrl_1000t_pma_cdr_c:PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_CDR_C_WIDTH;        //[ 3: 3]
        jl_uint32 rstn_ctrl_1000t_pma_cdr_d:PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_CDR_D_WIDTH;        //[ 4: 4]
        jl_uint32 rstn_ctrl_1000t_pma_pi_a:PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_PI_A_WIDTH;          //[ 5: 5]
        jl_uint32 rstn_ctrl_1000t_pma_pi_b:PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_PI_B_WIDTH;          //[ 6: 6]
        jl_uint32 rstn_ctrl_1000t_pma_pi_c:PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_PI_C_WIDTH;          //[ 7: 7]
        jl_uint32 rstn_ctrl_1000t_pma_pi_d:PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_PI_D_WIDTH;          //[ 8: 8]
        jl_uint32 rstn_ctrl_1000t_pma_reg:PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_REG_WIDTH;            //[ 9: 9]
        jl_uint32 rstn_ctrl_1000t_pma_lms:PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_LMS_WIDTH;            //[10:10]
        jl_uint32 rstn_ctrl_1000t_pma_tx:PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_TX_WIDTH;              //[11:11]
        jl_uint32 rstn_ctrl_1000t_pma_rx:PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PMA_RX_WIDTH;              //[12:12]
        jl_uint32 rstn_ctrl_1000t_pcs:PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_1000T_PCS_WIDTH;                    //[13:13]
        jl_uint32 rstn_ctrl_gmii_tx:PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_GMII_TX_WIDTH;                        //[14:14]
        jl_uint32 rstn_ctrl_gmii_rx:PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSTN_CTRL_GMII_RX_WIDTH;                        //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_CLKGEN_RST_CTL_1000T_OFFSET_RSVD0_WIDTH;                                                //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CLKGEN_RST_CTL_1000T_ENTRY_SIZE];
} PHG_GEPHY_CLKGEN_RST_CTL_1000T_t;

#define PHG_GEPHY_CLKGEN_RST_CTL_100T                                                          ((jl_uint32)0x002440D4U)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_NUM                                                      ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_ENTRY_SIZE                                                                    (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSVD1                                                                 (16)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSVD1_WIDTH                                                           (16)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSVD0                                                                  (0)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSVD0_WIDTH                                                            (7)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_10T_TX_DSP                                                   (7)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_10T_TX_DSP_WIDTH                                             (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_10T_TX_PCSPMA                                                (8)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_10T_TX_PCSPMA_WIDTH                                          (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_10T_RX_DSP                                                   (9)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_10T_RX_DSP_WIDTH                                             (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_10T_RX_PCSPMA                                               (10)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_10T_RX_PCSPMA_WIDTH                                          (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_100X_DAC                                                    (11)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_100X_DAC_WIDTH                                               (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_100X_ADC                                                    (12)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_100X_ADC_WIDTH                                               (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_100X_TX                                                     (13)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_100X_TX_WIDTH                                                (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_100X_RX                                                     (14)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_100X_RX_WIDTH                                                (1)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_100X_PI                                                     (15)
#define PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_100X_PI_WIDTH                                                (1)
typedef union PHG_GEPHY_CLKGEN_RST_CTL_100T_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd0:PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSVD0_WIDTH;                                                 //[ 6: 0]
        jl_uint32 rstn_ctrl_10t_tx_dsp:PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_10T_TX_DSP_WIDTH;                   //[ 7: 7]
        jl_uint32 rstn_ctrl_10t_tx_pcspma:PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_10T_TX_PCSPMA_WIDTH;             //[ 8: 8]
        jl_uint32 rstn_ctrl_10t_rx_dsp:PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_10T_RX_DSP_WIDTH;                   //[ 9: 9]
        jl_uint32 rstn_ctrl_10t_rx_pcspma:PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_10T_RX_PCSPMA_WIDTH;             //[10:10]
        jl_uint32 rstn_ctrl_100x_dac:PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_100X_DAC_WIDTH;                       //[11:11]
        jl_uint32 rstn_ctrl_100x_adc:PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_100X_ADC_WIDTH;                       //[12:12]
        jl_uint32 rstn_ctrl_100x_tx:PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_100X_TX_WIDTH;                         //[13:13]
        jl_uint32 rstn_ctrl_100x_rx:PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_100X_RX_WIDTH;                         //[14:14]
        jl_uint32 rstn_ctrl_100x_pi:PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSTN_CTRL_100X_PI_WIDTH;                         //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_CLKGEN_RST_CTL_100T_OFFSET_RSVD1_WIDTH;                                                 //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CLKGEN_RST_CTL_100T_ENTRY_SIZE];
} PHG_GEPHY_CLKGEN_RST_CTL_100T_t;

#define PHG_GEPHY_CLKGEN_MUX_CTL_0                                                             ((jl_uint32)0x002440D8U)
#define PHG_GEPHY_CLKGEN_MUX_CTL_0_NUM                                                         ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CLKGEN_MUX_CTL_0_ENTRY_SIZE                                                                       (1)
#define PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_RSVD1                                                                    (10)
#define PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_RSVD1_WIDTH                                                              (22)
#define PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_PI_AB                                                             (0)
#define PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_PI_AB_WIDTH                                                       (1)
#define PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_PI_CD                                                             (1)
#define PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_PI_CD_WIDTH                                                       (1)
#define PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_PI_ABCD                                                           (2)
#define PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_PI_ABCD_WIDTH                                                     (1)
#define PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_CDR_AB                                                            (3)
#define PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_CDR_AB_WIDTH                                                      (1)
#define PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_CDR_CD                                                            (4)
#define PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_CDR_CD_WIDTH                                                      (1)
#define PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_CDR_ABCD                                                          (5)
#define PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_CDR_ABCD_WIDTH                                                    (1)
#define PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_RSVD0                                                                     (6)
#define PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_RSVD0_WIDTH                                                               (3)
#define PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_PMA                                                               (9)
#define PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_PMA_WIDTH                                                         (1)
typedef union PHG_GEPHY_CLKGEN_MUX_CTL_0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 clk_sel_pi_ab:PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_PI_AB_WIDTH;                                    //[ 0: 0]
        jl_uint32 clk_sel_pi_cd:PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_PI_CD_WIDTH;                                    //[ 1: 1]
        jl_uint32 clk_sel_pi_abcd:PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_PI_ABCD_WIDTH;                                //[ 2: 2]
        jl_uint32 clk_sel_cdr_ab:PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_CDR_AB_WIDTH;                                  //[ 3: 3]
        jl_uint32 clk_sel_cdr_cd:PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_CDR_CD_WIDTH;                                  //[ 4: 4]
        jl_uint32 clk_sel_cdr_abcd:PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_CDR_ABCD_WIDTH;                              //[ 5: 5]
        jl_uint32 rsvd0:PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_RSVD0_WIDTH;                                                    //[ 8: 6]
        jl_uint32 clk_sel_pma:PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_CLK_SEL_PMA_WIDTH;                                        //[ 9: 9]
        jl_uint32 rsvd1:PHG_GEPHY_CLKGEN_MUX_CTL_0_OFFSET_RSVD1_WIDTH;                                                    //[31:10]
    } BF;
    jl_uint32 val[PHG_GEPHY_CLKGEN_MUX_CTL_0_ENTRY_SIZE];
} PHG_GEPHY_CLKGEN_MUX_CTL_0_t;

#define PHG_GEPHY_CLKGEN_MUX_CTL_1                                                             ((jl_uint32)0x002440DCU)
#define PHG_GEPHY_CLKGEN_MUX_CTL_1_NUM                                                         ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CLKGEN_MUX_CTL_1_ENTRY_SIZE                                                                       (1)
#define PHG_GEPHY_CLKGEN_MUX_CTL_1_OFFSET_RSVD1                                                                    (16)
#define PHG_GEPHY_CLKGEN_MUX_CTL_1_OFFSET_RSVD1_WIDTH                                                              (16)
#define PHG_GEPHY_CLKGEN_MUX_CTL_1_OFFSET_RSVD0                                                                     (0)
#define PHG_GEPHY_CLKGEN_MUX_CTL_1_OFFSET_RSVD0_WIDTH                                                              (12)
#define PHG_GEPHY_CLKGEN_MUX_CTL_1_OFFSET_CLK_SEL_MII_RX                                                           (12)
#define PHG_GEPHY_CLKGEN_MUX_CTL_1_OFFSET_CLK_SEL_MII_RX_WIDTH                                                      (1)
#define PHG_GEPHY_CLKGEN_MUX_CTL_1_OFFSET_CLK_SEL_MII_TX                                                           (13)
#define PHG_GEPHY_CLKGEN_MUX_CTL_1_OFFSET_CLK_SEL_MII_TX_WIDTH                                                      (1)
#define PHG_GEPHY_CLKGEN_MUX_CTL_1_OFFSET_CLK_SEL_GMII_RX_PRE                                                      (14)
#define PHG_GEPHY_CLKGEN_MUX_CTL_1_OFFSET_CLK_SEL_GMII_RX_PRE_WIDTH                                                 (1)
#define PHG_GEPHY_CLKGEN_MUX_CTL_1_OFFSET_CLK_SEL_GMII_TX_PRE                                                      (15)
#define PHG_GEPHY_CLKGEN_MUX_CTL_1_OFFSET_CLK_SEL_GMII_TX_PRE_WIDTH                                                 (1)
typedef union PHG_GEPHY_CLKGEN_MUX_CTL_1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd0:PHG_GEPHY_CLKGEN_MUX_CTL_1_OFFSET_RSVD0_WIDTH;                                                    //[11: 0]
        jl_uint32 clk_sel_mii_rx:PHG_GEPHY_CLKGEN_MUX_CTL_1_OFFSET_CLK_SEL_MII_RX_WIDTH;                                  //[12:12]
        jl_uint32 clk_sel_mii_tx:PHG_GEPHY_CLKGEN_MUX_CTL_1_OFFSET_CLK_SEL_MII_TX_WIDTH;                                  //[13:13]
        jl_uint32 clk_sel_gmii_rx_pre:PHG_GEPHY_CLKGEN_MUX_CTL_1_OFFSET_CLK_SEL_GMII_RX_PRE_WIDTH;                        //[14:14]
        jl_uint32 clk_sel_gmii_tx_pre:PHG_GEPHY_CLKGEN_MUX_CTL_1_OFFSET_CLK_SEL_GMII_TX_PRE_WIDTH;                        //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_CLKGEN_MUX_CTL_1_OFFSET_RSVD1_WIDTH;                                                    //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CLKGEN_MUX_CTL_1_ENTRY_SIZE];
} PHG_GEPHY_CLKGEN_MUX_CTL_1_t;

#define PHG_GEPHY_DBG_REG0                                                                     ((jl_uint32)0x00244100U)
#define PHG_GEPHY_DBG_REG0_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DBG_REG0_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_DBG_REG0_OFFSET_RSVD0                                                                            (16)
#define PHG_GEPHY_DBG_REG0_OFFSET_RSVD0_WIDTH                                                                      (16)
#define PHG_GEPHY_DBG_REG0_OFFSET_DBG_REG0                                                                          (0)
#define PHG_GEPHY_DBG_REG0_OFFSET_DBG_REG0_WIDTH                                                                   (16)
typedef union PHG_GEPHY_DBG_REG0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_reg0:PHG_GEPHY_DBG_REG0_OFFSET_DBG_REG0_WIDTH;                                                      //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DBG_REG0_OFFSET_RSVD0_WIDTH;                                                            //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DBG_REG0_ENTRY_SIZE];
} PHG_GEPHY_DBG_REG0_t;

#define PHG_GEPHY_DBG_REG1                                                                     ((jl_uint32)0x00244104U)
#define PHG_GEPHY_DBG_REG1_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DBG_REG1_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_DBG_REG1_OFFSET_RSVD0                                                                            (16)
#define PHG_GEPHY_DBG_REG1_OFFSET_RSVD0_WIDTH                                                                      (16)
#define PHG_GEPHY_DBG_REG1_OFFSET_DBG_REG1                                                                          (0)
#define PHG_GEPHY_DBG_REG1_OFFSET_DBG_REG1_WIDTH                                                                   (16)
typedef union PHG_GEPHY_DBG_REG1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_reg1:PHG_GEPHY_DBG_REG1_OFFSET_DBG_REG1_WIDTH;                                                      //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DBG_REG1_OFFSET_RSVD0_WIDTH;                                                            //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DBG_REG1_ENTRY_SIZE];
} PHG_GEPHY_DBG_REG1_t;

#define PHG_GEPHY_DBG_REG2                                                                     ((jl_uint32)0x00244108U)
#define PHG_GEPHY_DBG_REG2_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DBG_REG2_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_DBG_REG2_OFFSET_RSVD0                                                                            (16)
#define PHG_GEPHY_DBG_REG2_OFFSET_RSVD0_WIDTH                                                                      (16)
#define PHG_GEPHY_DBG_REG2_OFFSET_DBG_REG2                                                                          (0)
#define PHG_GEPHY_DBG_REG2_OFFSET_DBG_REG2_WIDTH                                                                   (16)
typedef union PHG_GEPHY_DBG_REG2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_reg2:PHG_GEPHY_DBG_REG2_OFFSET_DBG_REG2_WIDTH;                                                      //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DBG_REG2_OFFSET_RSVD0_WIDTH;                                                            //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DBG_REG2_ENTRY_SIZE];
} PHG_GEPHY_DBG_REG2_t;

#define PHG_GEPHY_DBG_REG3                                                                     ((jl_uint32)0x0024410CU)
#define PHG_GEPHY_DBG_REG3_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DBG_REG3_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_DBG_REG3_OFFSET_RSVD0                                                                            (16)
#define PHG_GEPHY_DBG_REG3_OFFSET_RSVD0_WIDTH                                                                      (16)
#define PHG_GEPHY_DBG_REG3_OFFSET_DBG_REG3                                                                          (0)
#define PHG_GEPHY_DBG_REG3_OFFSET_DBG_REG3_WIDTH                                                                   (16)
typedef union PHG_GEPHY_DBG_REG3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_reg3:PHG_GEPHY_DBG_REG3_OFFSET_DBG_REG3_WIDTH;                                                      //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DBG_REG3_OFFSET_RSVD0_WIDTH;                                                            //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DBG_REG3_ENTRY_SIZE];
} PHG_GEPHY_DBG_REG3_t;

#define PHG_GEPHY_DBG_REG4                                                                     ((jl_uint32)0x00244110U)
#define PHG_GEPHY_DBG_REG4_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DBG_REG4_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_DBG_REG4_OFFSET_RSVD0                                                                            (16)
#define PHG_GEPHY_DBG_REG4_OFFSET_RSVD0_WIDTH                                                                      (16)
#define PHG_GEPHY_DBG_REG4_OFFSET_DBG_REG4                                                                          (0)
#define PHG_GEPHY_DBG_REG4_OFFSET_DBG_REG4_WIDTH                                                                   (16)
typedef union PHG_GEPHY_DBG_REG4_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_reg4:PHG_GEPHY_DBG_REG4_OFFSET_DBG_REG4_WIDTH;                                                      //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DBG_REG4_OFFSET_RSVD0_WIDTH;                                                            //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DBG_REG4_ENTRY_SIZE];
} PHG_GEPHY_DBG_REG4_t;

#define PHG_GEPHY_DBG_REG5                                                                     ((jl_uint32)0x00244114U)
#define PHG_GEPHY_DBG_REG5_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DBG_REG5_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_DBG_REG5_OFFSET_RSVD0                                                                            (16)
#define PHG_GEPHY_DBG_REG5_OFFSET_RSVD0_WIDTH                                                                      (16)
#define PHG_GEPHY_DBG_REG5_OFFSET_DBG_REG5                                                                          (0)
#define PHG_GEPHY_DBG_REG5_OFFSET_DBG_REG5_WIDTH                                                                   (16)
typedef union PHG_GEPHY_DBG_REG5_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_reg5:PHG_GEPHY_DBG_REG5_OFFSET_DBG_REG5_WIDTH;                                                      //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DBG_REG5_OFFSET_RSVD0_WIDTH;                                                            //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DBG_REG5_ENTRY_SIZE];
} PHG_GEPHY_DBG_REG5_t;

#define PHG_GEPHY_DBG_REG6                                                                     ((jl_uint32)0x00244118U)
#define PHG_GEPHY_DBG_REG6_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DBG_REG6_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_DBG_REG6_OFFSET_RSVD0                                                                            (16)
#define PHG_GEPHY_DBG_REG6_OFFSET_RSVD0_WIDTH                                                                      (16)
#define PHG_GEPHY_DBG_REG6_OFFSET_DBG_REG6                                                                          (0)
#define PHG_GEPHY_DBG_REG6_OFFSET_DBG_REG6_WIDTH                                                                   (16)
typedef union PHG_GEPHY_DBG_REG6_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_reg6:PHG_GEPHY_DBG_REG6_OFFSET_DBG_REG6_WIDTH;                                                      //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DBG_REG6_OFFSET_RSVD0_WIDTH;                                                            //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DBG_REG6_ENTRY_SIZE];
} PHG_GEPHY_DBG_REG6_t;

#define PHG_GEPHY_DBG_OUT_CTRL                                                                 ((jl_uint32)0x0024411CU)
#define PHG_GEPHY_DBG_OUT_CTRL_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DBG_OUT_CTRL_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_DBG_OUT_CTRL_OFFSET_RSVD0                                                                        (16)
#define PHG_GEPHY_DBG_OUT_CTRL_OFFSET_RSVD0_WIDTH                                                                  (16)
#define PHG_GEPHY_DBG_OUT_CTRL_OFFSET_DBG_OUT_DAT_FORCE_VAL                                                         (0)
#define PHG_GEPHY_DBG_OUT_CTRL_OFFSET_DBG_OUT_DAT_FORCE_VAL_WIDTH                                                  (10)
#define PHG_GEPHY_DBG_OUT_CTRL_OFFSET_DBG_OUT_DAT_SEL                                                              (10)
#define PHG_GEPHY_DBG_OUT_CTRL_OFFSET_DBG_OUT_DAT_SEL_WIDTH                                                         (6)
typedef union PHG_GEPHY_DBG_OUT_CTRL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_out_dat_force_val:PHG_GEPHY_DBG_OUT_CTRL_OFFSET_DBG_OUT_DAT_FORCE_VAL_WIDTH;                        //[ 9: 0]
        jl_uint32 dbg_out_dat_sel:PHG_GEPHY_DBG_OUT_CTRL_OFFSET_DBG_OUT_DAT_SEL_WIDTH;                                    //[15:10]
        jl_uint32 rsvd0:PHG_GEPHY_DBG_OUT_CTRL_OFFSET_RSVD0_WIDTH;                                                        //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DBG_OUT_CTRL_ENTRY_SIZE];
} PHG_GEPHY_DBG_OUT_CTRL_t;

#define PHG_GEPHY_DBG_IN_CTRL                                                                  ((jl_uint32)0x00244120U)
#define PHG_GEPHY_DBG_IN_CTRL_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DBG_IN_CTRL_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_DBG_IN_CTRL_OFFSET_RSVD1                                                                         (16)
#define PHG_GEPHY_DBG_IN_CTRL_OFFSET_RSVD1_WIDTH                                                                   (16)
#define PHG_GEPHY_DBG_IN_CTRL_OFFSET_DBG_OUT_CLK_SEL                                                                (0)
#define PHG_GEPHY_DBG_IN_CTRL_OFFSET_DBG_OUT_CLK_SEL_WIDTH                                                          (4)
#define PHG_GEPHY_DBG_IN_CTRL_OFFSET_DBG_IN_DAC_SEL                                                                 (4)
#define PHG_GEPHY_DBG_IN_CTRL_OFFSET_DBG_IN_DAC_SEL_WIDTH                                                           (4)
#define PHG_GEPHY_DBG_IN_CTRL_OFFSET_DBG_IN_CDR_SEL                                                                 (8)
#define PHG_GEPHY_DBG_IN_CTRL_OFFSET_DBG_IN_CDR_SEL_WIDTH                                                           (4)
#define PHG_GEPHY_DBG_IN_CTRL_OFFSET_RSVD0                                                                         (12)
#define PHG_GEPHY_DBG_IN_CTRL_OFFSET_RSVD0_WIDTH                                                                    (3)
#define PHG_GEPHY_DBG_IN_CTRL_OFFSET_DBG_IN_CLK_INV_SEL                                                            (15)
#define PHG_GEPHY_DBG_IN_CTRL_OFFSET_DBG_IN_CLK_INV_SEL_WIDTH                                                       (1)
typedef union PHG_GEPHY_DBG_IN_CTRL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_out_clk_sel:PHG_GEPHY_DBG_IN_CTRL_OFFSET_DBG_OUT_CLK_SEL_WIDTH;                                     //[ 3: 0]
        jl_uint32 dbg_in_dac_sel:PHG_GEPHY_DBG_IN_CTRL_OFFSET_DBG_IN_DAC_SEL_WIDTH;                                       //[ 7: 4]
        jl_uint32 dbg_in_cdr_sel:PHG_GEPHY_DBG_IN_CTRL_OFFSET_DBG_IN_CDR_SEL_WIDTH;                                       //[11: 8]
        jl_uint32 rsvd0:PHG_GEPHY_DBG_IN_CTRL_OFFSET_RSVD0_WIDTH;                                                         //[14:12]
        jl_uint32 dbg_in_clk_inv_sel:PHG_GEPHY_DBG_IN_CTRL_OFFSET_DBG_IN_CLK_INV_SEL_WIDTH;                               //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_DBG_IN_CTRL_OFFSET_RSVD1_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DBG_IN_CTRL_ENTRY_SIZE];
} PHG_GEPHY_DBG_IN_CTRL_t;

#define PHG_GEPHY_PHY_CTRL_0                                                                   ((jl_uint32)0x00244140U)
#define PHG_GEPHY_PHY_CTRL_0_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_CTRL_0_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_PHY_CTRL_0_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_PHY_CTRL_0_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_PHY_CTRL_0_OFFSET_PHY_CTRL_0                                                                      (0)
#define PHG_GEPHY_PHY_CTRL_0_OFFSET_PHY_CTRL_0_WIDTH                                                               (16)
typedef union PHG_GEPHY_PHY_CTRL_0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_ctrl_0:PHG_GEPHY_PHY_CTRL_0_OFFSET_PHY_CTRL_0_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_CTRL_0_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_CTRL_0_ENTRY_SIZE];
} PHG_GEPHY_PHY_CTRL_0_t;

#define PHG_GEPHY_PHY_CTRL_1                                                                   ((jl_uint32)0x00244144U)
#define PHG_GEPHY_PHY_CTRL_1_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_CTRL_1_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_PHY_CTRL_1_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_PHY_CTRL_1_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_PHY_CTRL_1_OFFSET_PHY_CTRL_1                                                                      (0)
#define PHG_GEPHY_PHY_CTRL_1_OFFSET_PHY_CTRL_1_WIDTH                                                               (16)
typedef union PHG_GEPHY_PHY_CTRL_1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_ctrl_1:PHG_GEPHY_PHY_CTRL_1_OFFSET_PHY_CTRL_1_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_CTRL_1_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_CTRL_1_ENTRY_SIZE];
} PHG_GEPHY_PHY_CTRL_1_t;

#define PHG_GEPHY_PHY_CTRL_2                                                                   ((jl_uint32)0x00244148U)
#define PHG_GEPHY_PHY_CTRL_2_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_CTRL_2_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_PHY_CTRL_2_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_PHY_CTRL_2_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_PHY_CTRL_2_OFFSET_PHY_CTRL_2                                                                      (0)
#define PHG_GEPHY_PHY_CTRL_2_OFFSET_PHY_CTRL_2_WIDTH                                                               (16)
typedef union PHG_GEPHY_PHY_CTRL_2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_ctrl_2:PHG_GEPHY_PHY_CTRL_2_OFFSET_PHY_CTRL_2_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_CTRL_2_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_CTRL_2_ENTRY_SIZE];
} PHG_GEPHY_PHY_CTRL_2_t;

#define PHG_GEPHY_PHY_CTRL_3                                                                   ((jl_uint32)0x0024414CU)
#define PHG_GEPHY_PHY_CTRL_3_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_CTRL_3_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_PHY_CTRL_3_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_PHY_CTRL_3_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_PHY_CTRL_3_OFFSET_PHY_CTRL_3                                                                      (0)
#define PHG_GEPHY_PHY_CTRL_3_OFFSET_PHY_CTRL_3_WIDTH                                                               (16)
typedef union PHG_GEPHY_PHY_CTRL_3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_ctrl_3:PHG_GEPHY_PHY_CTRL_3_OFFSET_PHY_CTRL_3_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_CTRL_3_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_CTRL_3_ENTRY_SIZE];
} PHG_GEPHY_PHY_CTRL_3_t;

#define PHG_GEPHY_PHY_CTRL_4                                                                   ((jl_uint32)0x00244150U)
#define PHG_GEPHY_PHY_CTRL_4_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_CTRL_4_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_PHY_CTRL_4_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_PHY_CTRL_4_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_PHY_CTRL_4_OFFSET_PHY_CTRL_4                                                                      (0)
#define PHG_GEPHY_PHY_CTRL_4_OFFSET_PHY_CTRL_4_WIDTH                                                               (16)
typedef union PHG_GEPHY_PHY_CTRL_4_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_ctrl_4:PHG_GEPHY_PHY_CTRL_4_OFFSET_PHY_CTRL_4_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_CTRL_4_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_CTRL_4_ENTRY_SIZE];
} PHG_GEPHY_PHY_CTRL_4_t;

#define PHG_GEPHY_PHY_CTRL_5                                                                   ((jl_uint32)0x00244154U)
#define PHG_GEPHY_PHY_CTRL_5_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_CTRL_5_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_PHY_CTRL_5_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_PHY_CTRL_5_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_PHY_CTRL_5_OFFSET_PHY_CTRL_5                                                                      (0)
#define PHG_GEPHY_PHY_CTRL_5_OFFSET_PHY_CTRL_5_WIDTH                                                               (16)
typedef union PHG_GEPHY_PHY_CTRL_5_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_ctrl_5:PHG_GEPHY_PHY_CTRL_5_OFFSET_PHY_CTRL_5_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_CTRL_5_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_CTRL_5_ENTRY_SIZE];
} PHG_GEPHY_PHY_CTRL_5_t;

#define PHG_GEPHY_PHY_CTRL_6                                                                   ((jl_uint32)0x00244158U)
#define PHG_GEPHY_PHY_CTRL_6_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_CTRL_6_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_PHY_CTRL_6_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_PHY_CTRL_6_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_PHY_CTRL_6_OFFSET_PHY_CTRL_6                                                                      (0)
#define PHG_GEPHY_PHY_CTRL_6_OFFSET_PHY_CTRL_6_WIDTH                                                               (16)
typedef union PHG_GEPHY_PHY_CTRL_6_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_ctrl_6:PHG_GEPHY_PHY_CTRL_6_OFFSET_PHY_CTRL_6_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_CTRL_6_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_CTRL_6_ENTRY_SIZE];
} PHG_GEPHY_PHY_CTRL_6_t;

#define PHG_GEPHY_PHY_CTRL_7                                                                   ((jl_uint32)0x0024415CU)
#define PHG_GEPHY_PHY_CTRL_7_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_CTRL_7_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_PHY_CTRL_7_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_PHY_CTRL_7_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_PHY_CTRL_7_OFFSET_PHY_CTRL_7                                                                      (0)
#define PHG_GEPHY_PHY_CTRL_7_OFFSET_PHY_CTRL_7_WIDTH                                                               (16)
typedef union PHG_GEPHY_PHY_CTRL_7_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_ctrl_7:PHG_GEPHY_PHY_CTRL_7_OFFSET_PHY_CTRL_7_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_CTRL_7_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_CTRL_7_ENTRY_SIZE];
} PHG_GEPHY_PHY_CTRL_7_t;

#define PHG_GEPHY_PHY_CTRL_8                                                                   ((jl_uint32)0x00244160U)
#define PHG_GEPHY_PHY_CTRL_8_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_CTRL_8_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_PHY_CTRL_8_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_PHY_CTRL_8_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_PHY_CTRL_8_OFFSET_PHY_CTRL_8                                                                      (0)
#define PHG_GEPHY_PHY_CTRL_8_OFFSET_PHY_CTRL_8_WIDTH                                                               (16)
typedef union PHG_GEPHY_PHY_CTRL_8_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_ctrl_8:PHG_GEPHY_PHY_CTRL_8_OFFSET_PHY_CTRL_8_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_CTRL_8_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_CTRL_8_ENTRY_SIZE];
} PHG_GEPHY_PHY_CTRL_8_t;

#define PHG_GEPHY_PHY_CTRL_9                                                                   ((jl_uint32)0x00244164U)
#define PHG_GEPHY_PHY_CTRL_9_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_CTRL_9_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_PHY_CTRL_9_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_PHY_CTRL_9_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_PHY_CTRL_9_OFFSET_PHY_CTRL_9                                                                      (0)
#define PHG_GEPHY_PHY_CTRL_9_OFFSET_PHY_CTRL_9_WIDTH                                                               (16)
typedef union PHG_GEPHY_PHY_CTRL_9_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_ctrl_9:PHG_GEPHY_PHY_CTRL_9_OFFSET_PHY_CTRL_9_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_CTRL_9_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_CTRL_9_ENTRY_SIZE];
} PHG_GEPHY_PHY_CTRL_9_t;

#define PHG_GEPHY_PHY_CTRL_10                                                                  ((jl_uint32)0x00244168U)
#define PHG_GEPHY_PHY_CTRL_10_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_CTRL_10_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_PHY_CTRL_10_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_PHY_CTRL_10_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_PHY_CTRL_10_OFFSET_PHY_CTRL_10                                                                    (0)
#define PHG_GEPHY_PHY_CTRL_10_OFFSET_PHY_CTRL_10_WIDTH                                                             (16)
typedef union PHG_GEPHY_PHY_CTRL_10_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_ctrl_10:PHG_GEPHY_PHY_CTRL_10_OFFSET_PHY_CTRL_10_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_CTRL_10_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_CTRL_10_ENTRY_SIZE];
} PHG_GEPHY_PHY_CTRL_10_t;

#define PHG_GEPHY_PHY_CTRL_11                                                                  ((jl_uint32)0x0024416CU)
#define PHG_GEPHY_PHY_CTRL_11_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_CTRL_11_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_PHY_CTRL_11_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_PHY_CTRL_11_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_PHY_CTRL_11_OFFSET_PHY_CTRL_11                                                                    (0)
#define PHG_GEPHY_PHY_CTRL_11_OFFSET_PHY_CTRL_11_WIDTH                                                             (16)
typedef union PHG_GEPHY_PHY_CTRL_11_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_ctrl_11:PHG_GEPHY_PHY_CTRL_11_OFFSET_PHY_CTRL_11_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_CTRL_11_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_CTRL_11_ENTRY_SIZE];
} PHG_GEPHY_PHY_CTRL_11_t;

#define PHG_GEPHY_PHY_CTRL_12                                                                  ((jl_uint32)0x00244170U)
#define PHG_GEPHY_PHY_CTRL_12_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_CTRL_12_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_PHY_CTRL_12_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_PHY_CTRL_12_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_PHY_CTRL_12_OFFSET_PHY_CTRL_12                                                                    (0)
#define PHG_GEPHY_PHY_CTRL_12_OFFSET_PHY_CTRL_12_WIDTH                                                             (16)
typedef union PHG_GEPHY_PHY_CTRL_12_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_ctrl_12:PHG_GEPHY_PHY_CTRL_12_OFFSET_PHY_CTRL_12_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_CTRL_12_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_CTRL_12_ENTRY_SIZE];
} PHG_GEPHY_PHY_CTRL_12_t;

#define PHG_GEPHY_PHY_CTRL_13                                                                  ((jl_uint32)0x00244174U)
#define PHG_GEPHY_PHY_CTRL_13_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_CTRL_13_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_PHY_CTRL_13_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_PHY_CTRL_13_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_PHY_CTRL_13_OFFSET_PHY_CTRL_13                                                                    (0)
#define PHG_GEPHY_PHY_CTRL_13_OFFSET_PHY_CTRL_13_WIDTH                                                             (16)
typedef union PHG_GEPHY_PHY_CTRL_13_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_ctrl_13:PHG_GEPHY_PHY_CTRL_13_OFFSET_PHY_CTRL_13_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_CTRL_13_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_CTRL_13_ENTRY_SIZE];
} PHG_GEPHY_PHY_CTRL_13_t;

#define PHG_GEPHY_PHY_CTRL_14                                                                  ((jl_uint32)0x00244178U)
#define PHG_GEPHY_PHY_CTRL_14_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_CTRL_14_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_PHY_CTRL_14_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_PHY_CTRL_14_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_PHY_CTRL_14_OFFSET_PHY_CTRL_14                                                                    (0)
#define PHG_GEPHY_PHY_CTRL_14_OFFSET_PHY_CTRL_14_WIDTH                                                             (16)
typedef union PHG_GEPHY_PHY_CTRL_14_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_ctrl_14:PHG_GEPHY_PHY_CTRL_14_OFFSET_PHY_CTRL_14_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_CTRL_14_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_CTRL_14_ENTRY_SIZE];
} PHG_GEPHY_PHY_CTRL_14_t;

#define PHG_GEPHY_PHY_STATUS_0                                                                 ((jl_uint32)0x0024417CU)
#define PHG_GEPHY_PHY_STATUS_0_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_STATUS_0_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_PHY_STATUS_0_OFFSET_RSVD0                                                                        (16)
#define PHG_GEPHY_PHY_STATUS_0_OFFSET_RSVD0_WIDTH                                                                  (16)
#define PHG_GEPHY_PHY_STATUS_0_OFFSET_PHY_STATUS_0                                                                  (0)
#define PHG_GEPHY_PHY_STATUS_0_OFFSET_PHY_STATUS_0_WIDTH                                                           (16)
typedef union PHG_GEPHY_PHY_STATUS_0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_status_0:PHG_GEPHY_PHY_STATUS_0_OFFSET_PHY_STATUS_0_WIDTH;                                          //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_STATUS_0_OFFSET_RSVD0_WIDTH;                                                        //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_STATUS_0_ENTRY_SIZE];
} PHG_GEPHY_PHY_STATUS_0_t;

#define PHG_GEPHY_PHY_STATUS_1                                                                 ((jl_uint32)0x00244180U)
#define PHG_GEPHY_PHY_STATUS_1_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_STATUS_1_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_PHY_STATUS_1_OFFSET_RSVD0                                                                        (16)
#define PHG_GEPHY_PHY_STATUS_1_OFFSET_RSVD0_WIDTH                                                                  (16)
#define PHG_GEPHY_PHY_STATUS_1_OFFSET_PHY_STATUS_1                                                                  (0)
#define PHG_GEPHY_PHY_STATUS_1_OFFSET_PHY_STATUS_1_WIDTH                                                           (16)
typedef union PHG_GEPHY_PHY_STATUS_1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_status_1:PHG_GEPHY_PHY_STATUS_1_OFFSET_PHY_STATUS_1_WIDTH;                                          //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_STATUS_1_OFFSET_RSVD0_WIDTH;                                                        //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_STATUS_1_ENTRY_SIZE];
} PHG_GEPHY_PHY_STATUS_1_t;

#define PHG_GEPHY_PHY_STATUS_2                                                                 ((jl_uint32)0x00244184U)
#define PHG_GEPHY_PHY_STATUS_2_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_STATUS_2_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_PHY_STATUS_2_OFFSET_RSVD0                                                                        (16)
#define PHG_GEPHY_PHY_STATUS_2_OFFSET_RSVD0_WIDTH                                                                  (16)
#define PHG_GEPHY_PHY_STATUS_2_OFFSET_PHY_STATUS_2                                                                  (0)
#define PHG_GEPHY_PHY_STATUS_2_OFFSET_PHY_STATUS_2_WIDTH                                                           (16)
typedef union PHG_GEPHY_PHY_STATUS_2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_status_2:PHG_GEPHY_PHY_STATUS_2_OFFSET_PHY_STATUS_2_WIDTH;                                          //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_STATUS_2_OFFSET_RSVD0_WIDTH;                                                        //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_STATUS_2_ENTRY_SIZE];
} PHG_GEPHY_PHY_STATUS_2_t;

#define PHG_GEPHY_PHY_STATUS_3                                                                 ((jl_uint32)0x00244188U)
#define PHG_GEPHY_PHY_STATUS_3_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_STATUS_3_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_PHY_STATUS_3_OFFSET_RSVD0                                                                        (16)
#define PHG_GEPHY_PHY_STATUS_3_OFFSET_RSVD0_WIDTH                                                                  (16)
#define PHG_GEPHY_PHY_STATUS_3_OFFSET_PHY_STATUS_3                                                                  (0)
#define PHG_GEPHY_PHY_STATUS_3_OFFSET_PHY_STATUS_3_WIDTH                                                           (16)
typedef union PHG_GEPHY_PHY_STATUS_3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_status_3:PHG_GEPHY_PHY_STATUS_3_OFFSET_PHY_STATUS_3_WIDTH;                                          //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_STATUS_3_OFFSET_RSVD0_WIDTH;                                                        //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_STATUS_3_ENTRY_SIZE];
} PHG_GEPHY_PHY_STATUS_3_t;

#define PHG_GEPHY_PHY_STATUS_4                                                                 ((jl_uint32)0x0024418CU)
#define PHG_GEPHY_PHY_STATUS_4_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_STATUS_4_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_PHY_STATUS_4_OFFSET_RSVD0                                                                        (16)
#define PHG_GEPHY_PHY_STATUS_4_OFFSET_RSVD0_WIDTH                                                                  (16)
#define PHG_GEPHY_PHY_STATUS_4_OFFSET_PHY_STATUS_4                                                                  (0)
#define PHG_GEPHY_PHY_STATUS_4_OFFSET_PHY_STATUS_4_WIDTH                                                           (15)
#define PHG_GEPHY_PHY_STATUS_4_OFFSET_SMIC_VERSION                                                                 (15)
#define PHG_GEPHY_PHY_STATUS_4_OFFSET_SMIC_VERSION_WIDTH                                                            (1)
typedef union PHG_GEPHY_PHY_STATUS_4_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_status_4:PHG_GEPHY_PHY_STATUS_4_OFFSET_PHY_STATUS_4_WIDTH;                                          //[14: 0]
        jl_uint32 smic_version:PHG_GEPHY_PHY_STATUS_4_OFFSET_SMIC_VERSION_WIDTH;                                          //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_STATUS_4_OFFSET_RSVD0_WIDTH;                                                        //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_STATUS_4_ENTRY_SIZE];
} PHG_GEPHY_PHY_STATUS_4_t;

#define PHG_GEPHY_PHY_STATUS_5                                                                 ((jl_uint32)0x00244190U)
#define PHG_GEPHY_PHY_STATUS_5_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_STATUS_5_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_PHY_STATUS_5_OFFSET_RSVD0                                                                        (16)
#define PHG_GEPHY_PHY_STATUS_5_OFFSET_RSVD0_WIDTH                                                                  (16)
#define PHG_GEPHY_PHY_STATUS_5_OFFSET_PHY_STATUS_5                                                                  (0)
#define PHG_GEPHY_PHY_STATUS_5_OFFSET_PHY_STATUS_5_WIDTH                                                           (15)
#define PHG_GEPHY_PHY_STATUS_5_OFFSET_COSTDOWN_VERSION                                                             (15)
#define PHG_GEPHY_PHY_STATUS_5_OFFSET_COSTDOWN_VERSION_WIDTH                                                        (1)
typedef union PHG_GEPHY_PHY_STATUS_5_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_status_5:PHG_GEPHY_PHY_STATUS_5_OFFSET_PHY_STATUS_5_WIDTH;                                          //[14: 0]
        jl_uint32 costdown_version:PHG_GEPHY_PHY_STATUS_5_OFFSET_COSTDOWN_VERSION_WIDTH;                                  //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_STATUS_5_OFFSET_RSVD0_WIDTH;                                                        //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_STATUS_5_ENTRY_SIZE];
} PHG_GEPHY_PHY_STATUS_5_t;

#define PHG_GEPHY_PHY_STATUS_6                                                                 ((jl_uint32)0x00244194U)
#define PHG_GEPHY_PHY_STATUS_6_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_STATUS_6_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_PHY_STATUS_6_OFFSET_RSVD1                                                                        (16)
#define PHG_GEPHY_PHY_STATUS_6_OFFSET_RSVD1_WIDTH                                                                  (16)
#define PHG_GEPHY_PHY_STATUS_6_OFFSET_PHY_STATUS_6                                                                  (0)
#define PHG_GEPHY_PHY_STATUS_6_OFFSET_PHY_STATUS_6_WIDTH                                                            (8)
#define PHG_GEPHY_PHY_STATUS_6_OFFSET_RSVD0                                                                         (8)
#define PHG_GEPHY_PHY_STATUS_6_OFFSET_RSVD0_WIDTH                                                                   (5)
#define PHG_GEPHY_PHY_STATUS_6_OFFSET_PHY_LINK_STATUS_10T                                                          (13)
#define PHG_GEPHY_PHY_STATUS_6_OFFSET_PHY_LINK_STATUS_10T_WIDTH                                                     (1)
#define PHG_GEPHY_PHY_STATUS_6_OFFSET_PHY_LINK_STATUS_100T                                                         (14)
#define PHG_GEPHY_PHY_STATUS_6_OFFSET_PHY_LINK_STATUS_100T_WIDTH                                                    (1)
#define PHG_GEPHY_PHY_STATUS_6_OFFSET_PHY_LINK_STATUS_1000T                                                        (15)
#define PHG_GEPHY_PHY_STATUS_6_OFFSET_PHY_LINK_STATUS_1000T_WIDTH                                                   (1)
typedef union PHG_GEPHY_PHY_STATUS_6_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_status_6:PHG_GEPHY_PHY_STATUS_6_OFFSET_PHY_STATUS_6_WIDTH;                                          //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_STATUS_6_OFFSET_RSVD0_WIDTH;                                                        //[12: 8]
        jl_uint32 phy_link_status_10t:PHG_GEPHY_PHY_STATUS_6_OFFSET_PHY_LINK_STATUS_10T_WIDTH;                            //[13:13]
        jl_uint32 phy_link_status_100t:PHG_GEPHY_PHY_STATUS_6_OFFSET_PHY_LINK_STATUS_100T_WIDTH;                          //[14:14]
        jl_uint32 phy_link_status_1000t:PHG_GEPHY_PHY_STATUS_6_OFFSET_PHY_LINK_STATUS_1000T_WIDTH;                        //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_PHY_STATUS_6_OFFSET_RSVD1_WIDTH;                                                        //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_STATUS_6_ENTRY_SIZE];
} PHG_GEPHY_PHY_STATUS_6_t;

#define PHG_GEPHY_PHY_RSVDR0                                                                   ((jl_uint32)0x00244198U)
#define PHG_GEPHY_PHY_RSVDR0_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_RSVDR0_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_PHY_RSVDR0_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_PHY_RSVDR0_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_PHY_RSVDR0_OFFSET_PHY_RSVD0                                                                       (0)
#define PHG_GEPHY_PHY_RSVDR0_OFFSET_PHY_RSVD0_WIDTH                                                                (16)
typedef union PHG_GEPHY_PHY_RSVDR0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_rsvd0:PHG_GEPHY_PHY_RSVDR0_OFFSET_PHY_RSVD0_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_RSVDR0_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_RSVDR0_ENTRY_SIZE];
} PHG_GEPHY_PHY_RSVDR0_t;

#define PHG_GEPHY_PHY_RSVDR1                                                                   ((jl_uint32)0x0024419CU)
#define PHG_GEPHY_PHY_RSVDR1_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_RSVDR1_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_PHY_RSVDR1_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_PHY_RSVDR1_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_PHY_RSVDR1_OFFSET_PHY_RSVD1                                                                       (0)
#define PHG_GEPHY_PHY_RSVDR1_OFFSET_PHY_RSVD1_WIDTH                                                                (16)
typedef union PHG_GEPHY_PHY_RSVDR1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_rsvd1:PHG_GEPHY_PHY_RSVDR1_OFFSET_PHY_RSVD1_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_RSVDR1_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_RSVDR1_ENTRY_SIZE];
} PHG_GEPHY_PHY_RSVDR1_t;

#define PHG_GEPHY_INER                                                                         ((jl_uint32)0x002441A0U)
#define PHG_GEPHY_INER_NUM                                                                     ((jl_uint32)0x00000001U)
#define PHG_GEPHY_INER_ENTRY_SIZE                                                                                   (1)
#define PHG_GEPHY_INER_OFFSET_RSVD0                                                                                (16)
#define PHG_GEPHY_INER_OFFSET_RSVD0_WIDTH                                                                          (16)
#define PHG_GEPHY_INER_OFFSET_COPPER_AN_ERR_INT_EN                                                                  (0)
#define PHG_GEPHY_INER_OFFSET_COPPER_AN_ERR_INT_EN_WIDTH                                                            (1)
#define PHG_GEPHY_INER_OFFSET_INER_RSVD3                                                                            (1)
#define PHG_GEPHY_INER_OFFSET_INER_RSVD3_WIDTH                                                                      (1)
#define PHG_GEPHY_INER_OFFSET_COPPER_PAGE_RECEIVED_INT_EN                                                           (2)
#define PHG_GEPHY_INER_OFFSET_COPPER_PAGE_RECEIVED_INT_EN_WIDTH                                                     (1)
#define PHG_GEPHY_INER_OFFSET_COPPER_AN_COMPLETE_INT_EN                                                             (3)
#define PHG_GEPHY_INER_OFFSET_COPPER_AN_COMPLETE_INT_EN_WIDTH                                                       (1)
#define PHG_GEPHY_INER_OFFSET_IEEE_LINK_CHG_INT_EN                                                                  (4)
#define PHG_GEPHY_INER_OFFSET_IEEE_LINK_CHG_INT_EN_WIDTH                                                            (1)
#define PHG_GEPHY_INER_OFFSET_PHY_REGISTER_ACCESSIBLE_INT_EN                                                        (5)
#define PHG_GEPHY_INER_OFFSET_PHY_REGISTER_ACCESSIBLE_INT_EN_WIDTH                                                  (1)
#define PHG_GEPHY_INER_OFFSET_INER_RSVD2                                                                            (6)
#define PHG_GEPHY_INER_OFFSET_INER_RSVD2_WIDTH                                                                      (1)
#define PHG_GEPHY_INER_OFFSET_PME_EN                                                                                (7)
#define PHG_GEPHY_INER_OFFSET_PME_EN_WIDTH                                                                          (1)
#define PHG_GEPHY_INER_OFFSET_INER_RSVD1                                                                            (8)
#define PHG_GEPHY_INER_OFFSET_INER_RSVD1_WIDTH                                                                      (1)
#define PHG_GEPHY_INER_OFFSET_ALDPS_STATE_CHG_INT_EN                                                                (9)
#define PHG_GEPHY_INER_OFFSET_ALDPS_STATE_CHG_INT_EN_WIDTH                                                          (1)
#define PHG_GEPHY_INER_OFFSET_JABBER_DETECT_INT_EN                                                                 (10)
#define PHG_GEPHY_INER_OFFSET_JABBER_DETECT_INT_EN_WIDTH                                                            (1)
#define PHG_GEPHY_INER_OFFSET_INER_RSVD0                                                                           (11)
#define PHG_GEPHY_INER_OFFSET_INER_RSVD0_WIDTH                                                                      (1)
#define PHG_GEPHY_INER_OFFSET_COPPER_LINK_CHG_INT_EN                                                               (12)
#define PHG_GEPHY_INER_OFFSET_COPPER_LINK_CHG_INT_EN_WIDTH                                                          (1)
#define PHG_GEPHY_INER_OFFSET_COPPER_WOL_EVENT_INT_EN                                                              (13)
#define PHG_GEPHY_INER_OFFSET_COPPER_WOL_EVENT_INT_EN_WIDTH                                                         (1)
#define PHG_GEPHY_INER_OFFSET_COPPER_FALSE_CARRIER_INT_EN                                                          (14)
#define PHG_GEPHY_INER_OFFSET_COPPER_FALSE_CARRIER_INT_EN_WIDTH                                                     (1)
#define PHG_GEPHY_INER_OFFSET_COPPER_SYMBOL_ERR_INT_EN                                                             (15)
#define PHG_GEPHY_INER_OFFSET_COPPER_SYMBOL_ERR_INT_EN_WIDTH                                                        (1)
typedef union PHG_GEPHY_INER_u {
    struct __attribute__ ((packed)) {
        jl_uint32 copper_an_err_int_en:PHG_GEPHY_INER_OFFSET_COPPER_AN_ERR_INT_EN_WIDTH;                                  //[ 0: 0]
        jl_uint32 iner_rsvd3:PHG_GEPHY_INER_OFFSET_INER_RSVD3_WIDTH;                                                      //[ 1: 1]
        jl_uint32 copper_page_received_int_en:PHG_GEPHY_INER_OFFSET_COPPER_PAGE_RECEIVED_INT_EN_WIDTH;                    //[ 2: 2]
        jl_uint32 copper_an_complete_int_en:PHG_GEPHY_INER_OFFSET_COPPER_AN_COMPLETE_INT_EN_WIDTH;                        //[ 3: 3]
        jl_uint32 ieee_link_chg_int_en:PHG_GEPHY_INER_OFFSET_IEEE_LINK_CHG_INT_EN_WIDTH;                                  //[ 4: 4]
        jl_uint32 phy_register_accessible_int_en:PHG_GEPHY_INER_OFFSET_PHY_REGISTER_ACCESSIBLE_INT_EN_WIDTH;              //[ 5: 5]
        jl_uint32 iner_rsvd2:PHG_GEPHY_INER_OFFSET_INER_RSVD2_WIDTH;                                                      //[ 6: 6]
        jl_uint32 pme_en:PHG_GEPHY_INER_OFFSET_PME_EN_WIDTH;                                                              //[ 7: 7]
        jl_uint32 iner_rsvd1:PHG_GEPHY_INER_OFFSET_INER_RSVD1_WIDTH;                                                      //[ 8: 8]
        jl_uint32 aldps_state_chg_int_en:PHG_GEPHY_INER_OFFSET_ALDPS_STATE_CHG_INT_EN_WIDTH;                              //[ 9: 9]
        jl_uint32 jabber_detect_int_en:PHG_GEPHY_INER_OFFSET_JABBER_DETECT_INT_EN_WIDTH;                                  //[10:10]
        jl_uint32 iner_rsvd0:PHG_GEPHY_INER_OFFSET_INER_RSVD0_WIDTH;                                                      //[11:11]
        jl_uint32 copper_link_chg_int_en:PHG_GEPHY_INER_OFFSET_COPPER_LINK_CHG_INT_EN_WIDTH;                              //[12:12]
        jl_uint32 copper_wol_event_int_en:PHG_GEPHY_INER_OFFSET_COPPER_WOL_EVENT_INT_EN_WIDTH;                            //[13:13]
        jl_uint32 copper_false_carrier_int_en:PHG_GEPHY_INER_OFFSET_COPPER_FALSE_CARRIER_INT_EN_WIDTH;                    //[14:14]
        jl_uint32 copper_symbol_err_int_en:PHG_GEPHY_INER_OFFSET_COPPER_SYMBOL_ERR_INT_EN_WIDTH;                          //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_INER_OFFSET_RSVD0_WIDTH;                                                                //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_INER_ENTRY_SIZE];
} PHG_GEPHY_INER_t;

#define PHG_GEPHY_PHY_RSVDR2                                                                   ((jl_uint32)0x002441A4U)
#define PHG_GEPHY_PHY_RSVDR2_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_RSVDR2_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_PHY_RSVDR2_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_PHY_RSVDR2_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_PHY_RSVDR2_OFFSET_PHY_RSVD2                                                                       (0)
#define PHG_GEPHY_PHY_RSVDR2_OFFSET_PHY_RSVD2_WIDTH                                                                (16)
typedef union PHG_GEPHY_PHY_RSVDR2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_rsvd2:PHG_GEPHY_PHY_RSVDR2_OFFSET_PHY_RSVD2_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_RSVDR2_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_RSVDR2_ENTRY_SIZE];
} PHG_GEPHY_PHY_RSVDR2_t;

#define PHG_GEPHY_PHY_RSVDR3                                                                   ((jl_uint32)0x002441A8U)
#define PHG_GEPHY_PHY_RSVDR3_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_RSVDR3_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_PHY_RSVDR3_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_PHY_RSVDR3_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_PHY_RSVDR3_OFFSET_PHY_RSVD3                                                                       (0)
#define PHG_GEPHY_PHY_RSVDR3_OFFSET_PHY_RSVD3_WIDTH                                                                (16)
typedef union PHG_GEPHY_PHY_RSVDR3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_rsvd3:PHG_GEPHY_PHY_RSVDR3_OFFSET_PHY_RSVD3_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_RSVDR3_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_RSVDR3_ENTRY_SIZE];
} PHG_GEPHY_PHY_RSVDR3_t;

#define PHG_GEPHY_PHY_RSVDR4                                                                   ((jl_uint32)0x002441ACU)
#define PHG_GEPHY_PHY_RSVDR4_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_RSVDR4_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_PHY_RSVDR4_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_PHY_RSVDR4_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_PHY_RSVDR4_OFFSET_PHY_RSVD4                                                                       (0)
#define PHG_GEPHY_PHY_RSVDR4_OFFSET_PHY_RSVD4_WIDTH                                                                (16)
typedef union PHG_GEPHY_PHY_RSVDR4_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_rsvd4:PHG_GEPHY_PHY_RSVDR4_OFFSET_PHY_RSVD4_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_RSVDR4_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_RSVDR4_ENTRY_SIZE];
} PHG_GEPHY_PHY_RSVDR4_t;

#define PHG_GEPHY_PHY_RSVDR5                                                                   ((jl_uint32)0x002441B0U)
#define PHG_GEPHY_PHY_RSVDR5_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_RSVDR5_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_PHY_RSVDR5_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_PHY_RSVDR5_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_PHY_RSVDR5_OFFSET_PHY_RSVD5                                                                       (0)
#define PHG_GEPHY_PHY_RSVDR5_OFFSET_PHY_RSVD5_WIDTH                                                                (16)
typedef union PHG_GEPHY_PHY_RSVDR5_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_rsvd5:PHG_GEPHY_PHY_RSVDR5_OFFSET_PHY_RSVD5_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_RSVDR5_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_RSVDR5_ENTRY_SIZE];
} PHG_GEPHY_PHY_RSVDR5_t;

#define PHG_GEPHY_PHY_RSVDR6                                                                   ((jl_uint32)0x002441B4U)
#define PHG_GEPHY_PHY_RSVDR6_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_RSVDR6_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_PHY_RSVDR6_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_PHY_RSVDR6_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_PHY_RSVDR6_OFFSET_PHY_RSVD6                                                                       (0)
#define PHG_GEPHY_PHY_RSVDR6_OFFSET_PHY_RSVD6_WIDTH                                                                (16)
typedef union PHG_GEPHY_PHY_RSVDR6_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_rsvd6:PHG_GEPHY_PHY_RSVDR6_OFFSET_PHY_RSVD6_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_RSVDR6_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_RSVDR6_ENTRY_SIZE];
} PHG_GEPHY_PHY_RSVDR6_t;

#define PHG_GEPHY_PHYCR1                                                                       ((jl_uint32)0x002441B8U)
#define PHG_GEPHY_PHYCR1_NUM                                                                   ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHYCR1_ENTRY_SIZE                                                                                 (1)
#define PHG_GEPHY_PHYCR1_OFFSET_RSVD0                                                                              (16)
#define PHG_GEPHY_PHYCR1_OFFSET_RSVD0_WIDTH                                                                        (16)
#define PHG_GEPHY_PHYCR1_OFFSET_PHYCR1_RSVD_3                                                                       (0)
#define PHG_GEPHY_PHYCR1_OFFSET_PHYCR1_RSVD_3_WIDTH                                                                 (1)
#define PHG_GEPHY_PHYCR1_OFFSET_ALDPS_PLL_OFF_EN                                                                    (1)
#define PHG_GEPHY_PHYCR1_OFFSET_ALDPS_PLL_OFF_EN_WIDTH                                                              (1)
#define PHG_GEPHY_PHYCR1_OFFSET_ALDPS_EN                                                                            (2)
#define PHG_GEPHY_PHYCR1_OFFSET_ALDPS_EN_WIDTH                                                                      (1)
#define PHG_GEPHY_PHYCR1_OFFSET_JABBER_DETECT_EN                                                                    (3)
#define PHG_GEPHY_PHYCR1_OFFSET_JABBER_DETECT_EN_WIDTH                                                              (1)
#define PHG_GEPHY_PHYCR1_OFFSET_PREAMBLE_CHK_EN                                                                     (4)
#define PHG_GEPHY_PHYCR1_OFFSET_PREAMBLE_CHK_EN_WIDTH                                                               (1)
#define PHG_GEPHY_PHYCR1_OFFSET_PHYCR1_RSVD_2                                                                       (5)
#define PHG_GEPHY_PHYCR1_OFFSET_PHYCR1_RSVD_2_WIDTH                                                                 (1)
#define PHG_GEPHY_PHYCR1_OFFSET_PHYAD_NON_ZERO_DETECT                                                               (6)
#define PHG_GEPHY_PHYCR1_OFFSET_PHYAD_NON_ZERO_DETECT_WIDTH                                                         (1)
#define PHG_GEPHY_PHYCR1_OFFSET_TX_CRS_EN                                                                           (7)
#define PHG_GEPHY_PHYCR1_OFFSET_TX_CRS_EN_WIDTH                                                                     (1)
#define PHG_GEPHY_PHYCR1_OFFSET_MDI_MODE_EN                                                                         (8)
#define PHG_GEPHY_PHYCR1_OFFSET_MDI_MODE_EN_WIDTH                                                                   (1)
#define PHG_GEPHY_PHYCR1_OFFSET_MDI_MODE_MANUAL_CFG_EN                                                              (9)
#define PHG_GEPHY_PHYCR1_OFFSET_MDI_MODE_MANUAL_CFG_EN_WIDTH                                                        (1)
#define PHG_GEPHY_PHYCR1_OFFSET_PHYCR1_RSVD_1                                                                      (10)
#define PHG_GEPHY_PHYCR1_OFFSET_PHYCR1_RSVD_1_WIDTH                                                                 (2)
#define PHG_GEPHY_PHYCR1_OFFSET_ALDPS_XTAL_OFF_EN                                                                  (12)
#define PHG_GEPHY_PHYCR1_OFFSET_ALDPS_XTAL_OFF_EN_WIDTH                                                             (1)
#define PHG_GEPHY_PHYCR1_OFFSET_PHYAD_0_EN                                                                         (13)
#define PHG_GEPHY_PHYCR1_OFFSET_PHYAD_0_EN_WIDTH                                                                    (1)
#define PHG_GEPHY_PHYCR1_OFFSET_PHYCR1_RSVD_0                                                                      (14)
#define PHG_GEPHY_PHYCR1_OFFSET_PHYCR1_RSVD_0_WIDTH                                                                 (2)
typedef union PHG_GEPHY_PHYCR1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phycr1_rsvd_3:PHG_GEPHY_PHYCR1_OFFSET_PHYCR1_RSVD_3_WIDTH;                                              //[ 0: 0]
        jl_uint32 aldps_pll_off_en:PHG_GEPHY_PHYCR1_OFFSET_ALDPS_PLL_OFF_EN_WIDTH;                                        //[ 1: 1]
        jl_uint32 aldps_en:PHG_GEPHY_PHYCR1_OFFSET_ALDPS_EN_WIDTH;                                                        //[ 2: 2]
        jl_uint32 jabber_detect_en:PHG_GEPHY_PHYCR1_OFFSET_JABBER_DETECT_EN_WIDTH;                                        //[ 3: 3]
        jl_uint32 preamble_chk_en:PHG_GEPHY_PHYCR1_OFFSET_PREAMBLE_CHK_EN_WIDTH;                                          //[ 4: 4]
        jl_uint32 phycr1_rsvd_2:PHG_GEPHY_PHYCR1_OFFSET_PHYCR1_RSVD_2_WIDTH;                                              //[ 5: 5]
        jl_uint32 phyad_non_zero_detect:PHG_GEPHY_PHYCR1_OFFSET_PHYAD_NON_ZERO_DETECT_WIDTH;                              //[ 6: 6]
        jl_uint32 tx_crs_en:PHG_GEPHY_PHYCR1_OFFSET_TX_CRS_EN_WIDTH;                                                      //[ 7: 7]
        jl_uint32 mdi_mode_en:PHG_GEPHY_PHYCR1_OFFSET_MDI_MODE_EN_WIDTH;                                                  //[ 8: 8]
        jl_uint32 mdi_mode_manual_cfg_en:PHG_GEPHY_PHYCR1_OFFSET_MDI_MODE_MANUAL_CFG_EN_WIDTH;                            //[ 9: 9]
        jl_uint32 phycr1_rsvd_1:PHG_GEPHY_PHYCR1_OFFSET_PHYCR1_RSVD_1_WIDTH;                                              //[11:10]
        jl_uint32 aldps_xtal_off_en:PHG_GEPHY_PHYCR1_OFFSET_ALDPS_XTAL_OFF_EN_WIDTH;                                      //[12:12]
        jl_uint32 phyad_0_en:PHG_GEPHY_PHYCR1_OFFSET_PHYAD_0_EN_WIDTH;                                                    //[13:13]
        jl_uint32 phycr1_rsvd_0:PHG_GEPHY_PHYCR1_OFFSET_PHYCR1_RSVD_0_WIDTH;                                              //[15:14]
        jl_uint32 rsvd0:PHG_GEPHY_PHYCR1_OFFSET_RSVD0_WIDTH;                                                              //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHYCR1_ENTRY_SIZE];
} PHG_GEPHY_PHYCR1_t;

#define PHG_GEPHY_PHYCR2                                                                       ((jl_uint32)0x002441BCU)
#define PHG_GEPHY_PHYCR2_NUM                                                                   ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHYCR2_ENTRY_SIZE                                                                                 (1)
#define PHG_GEPHY_PHYCR2_OFFSET_RSVD0                                                                              (16)
#define PHG_GEPHY_PHYCR2_OFFSET_RSVD0_WIDTH                                                                        (16)
#define PHG_GEPHY_PHYCR2_OFFSET_CLKOUT_EN                                                                           (0)
#define PHG_GEPHY_PHYCR2_OFFSET_CLKOUT_EN_WIDTH                                                                     (1)
#define PHG_GEPHY_PHYCR2_OFFSET_RXC_EN                                                                              (1)
#define PHG_GEPHY_PHYCR2_OFFSET_RXC_EN_WIDTH                                                                        (1)
#define PHG_GEPHY_PHYCR2_OFFSET_PHYCR2_RSVD_4                                                                       (2)
#define PHG_GEPHY_PHYCR2_OFFSET_PHYCR2_RSVD_4_WIDTH                                                                 (1)
#define PHG_GEPHY_PHYCR2_OFFSET_SYSCLK_SSC_EN                                                                       (3)
#define PHG_GEPHY_PHYCR2_OFFSET_SYSCLK_SSC_EN_WIDTH                                                                 (1)
#define PHG_GEPHY_PHYCR2_OFFSET_PHYCR2_RSVD_3                                                                       (4)
#define PHG_GEPHY_PHYCR2_OFFSET_PHYCR2_RSVD_3_WIDTH                                                                 (1)
#define PHG_GEPHY_PHYCR2_OFFSET_PHY_MODE_EEE_EN                                                                     (5)
#define PHG_GEPHY_PHYCR2_OFFSET_PHY_MODE_EEE_EN_WIDTH                                                               (1)
#define PHG_GEPHY_PHYCR2_OFFSET_PHYCR2_RSVD_2                                                                       (6)
#define PHG_GEPHY_PHYCR2_OFFSET_PHYCR2_RSVD_2_WIDTH                                                                 (1)
#define PHG_GEPHY_PHYCR2_OFFSET_CLK_SSC_EN                                                                          (7)
#define PHG_GEPHY_PHYCR2_OFFSET_CLK_SSC_EN_WIDTH                                                                    (1)
#define PHG_GEPHY_PHYCR2_OFFSET_PHYCR2_RSVD_1                                                                       (8)
#define PHG_GEPHY_PHYCR2_OFFSET_PHYCR2_RSVD_1_WIDTH                                                                 (3)
#define PHG_GEPHY_PHYCR2_OFFSET_CLKOUT_FREQ_SELECT                                                                 (11)
#define PHG_GEPHY_PHYCR2_OFFSET_CLKOUT_FREQ_SELECT_WIDTH                                                            (1)
#define PHG_GEPHY_PHYCR2_OFFSET_CLKOUT_SRC                                                                         (12)
#define PHG_GEPHY_PHYCR2_OFFSET_CLKOUT_SRC_WIDTH                                                                    (2)
#define PHG_GEPHY_PHYCR2_OFFSET_PHYCR2_RSVD_0                                                                      (14)
#define PHG_GEPHY_PHYCR2_OFFSET_PHYCR2_RSVD_0_WIDTH                                                                 (2)
typedef union PHG_GEPHY_PHYCR2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 clkout_en:PHG_GEPHY_PHYCR2_OFFSET_CLKOUT_EN_WIDTH;                                                      //[ 0: 0]
        jl_uint32 rxc_en:PHG_GEPHY_PHYCR2_OFFSET_RXC_EN_WIDTH;                                                            //[ 1: 1]
        jl_uint32 phycr2_rsvd_4:PHG_GEPHY_PHYCR2_OFFSET_PHYCR2_RSVD_4_WIDTH;                                              //[ 2: 2]
        jl_uint32 sysclk_ssc_en:PHG_GEPHY_PHYCR2_OFFSET_SYSCLK_SSC_EN_WIDTH;                                              //[ 3: 3]
        jl_uint32 phycr2_rsvd_3:PHG_GEPHY_PHYCR2_OFFSET_PHYCR2_RSVD_3_WIDTH;                                              //[ 4: 4]
        jl_uint32 phy_mode_eee_en:PHG_GEPHY_PHYCR2_OFFSET_PHY_MODE_EEE_EN_WIDTH;                                          //[ 5: 5]
        jl_uint32 phycr2_rsvd_2:PHG_GEPHY_PHYCR2_OFFSET_PHYCR2_RSVD_2_WIDTH;                                              //[ 6: 6]
        jl_uint32 clk_ssc_en:PHG_GEPHY_PHYCR2_OFFSET_CLK_SSC_EN_WIDTH;                                                    //[ 7: 7]
        jl_uint32 phycr2_rsvd_1:PHG_GEPHY_PHYCR2_OFFSET_PHYCR2_RSVD_1_WIDTH;                                              //[10: 8]
        jl_uint32 clkout_freq_select:PHG_GEPHY_PHYCR2_OFFSET_CLKOUT_FREQ_SELECT_WIDTH;                                    //[11:11]
        jl_uint32 clkout_src:PHG_GEPHY_PHYCR2_OFFSET_CLKOUT_SRC_WIDTH;                                                    //[13:12]
        jl_uint32 phycr2_rsvd_0:PHG_GEPHY_PHYCR2_OFFSET_PHYCR2_RSVD_0_WIDTH;                                              //[15:14]
        jl_uint32 rsvd0:PHG_GEPHY_PHYCR2_OFFSET_RSVD0_WIDTH;                                                              //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHYCR2_ENTRY_SIZE];
} PHG_GEPHY_PHYCR2_t;

#define PHG_GEPHY_PHYSR                                                                        ((jl_uint32)0x002441C0U)
#define PHG_GEPHY_PHYSR_NUM                                                                    ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHYSR_ENTRY_SIZE                                                                                  (1)
#define PHG_GEPHY_PHYSR_OFFSET_RSVD0                                                                               (16)
#define PHG_GEPHY_PHYSR_OFFSET_RSVD0_WIDTH                                                                         (16)
#define PHG_GEPHY_PHYSR_OFFSET_JABBER_INDICATION                                                                    (0)
#define PHG_GEPHY_PHYSR_OFFSET_JABBER_INDICATION_WIDTH                                                              (1)
#define PHG_GEPHY_PHYSR_OFFSET_MDI_CROSSOVER_STATUS                                                                 (1)
#define PHG_GEPHY_PHYSR_OFFSET_MDI_CROSSOVER_STATUS_WIDTH                                                           (1)
#define PHG_GEPHY_PHYSR_OFFSET_LINK_STATUS                                                                          (2)
#define PHG_GEPHY_PHYSR_OFFSET_LINK_STATUS_WIDTH                                                                    (1)
#define PHG_GEPHY_PHYSR_OFFSET_DUPLEX_STATUS                                                                        (3)
#define PHG_GEPHY_PHYSR_OFFSET_DUPLEX_STATUS_WIDTH                                                                  (1)
#define PHG_GEPHY_PHYSR_OFFSET_SPEED_STATUS                                                                         (4)
#define PHG_GEPHY_PHYSR_OFFSET_SPEED_STATUS_WIDTH                                                                   (2)
#define PHG_GEPHY_PHYSR_OFFSET_TXFLOW_EN                                                                            (6)
#define PHG_GEPHY_PHYSR_OFFSET_TXFLOW_EN_WIDTH                                                                      (1)
#define PHG_GEPHY_PHYSR_OFFSET_RXFLOW_EN                                                                            (7)
#define PHG_GEPHY_PHYSR_OFFSET_RXFLOW_EN_WIDTH                                                                      (1)
#define PHG_GEPHY_PHYSR_OFFSET_EEE_CAPABILITY                                                                       (8)
#define PHG_GEPHY_PHYSR_OFFSET_EEE_CAPABILITY_WIDTH                                                                 (1)
#define PHG_GEPHY_PHYSR_OFFSET_FC_RESULT                                                                            (9)
#define PHG_GEPHY_PHYSR_OFFSET_FC_RESULT_WIDTH                                                                      (2)
#define PHG_GEPHY_PHYSR_OFFSET_MASTER_MODE                                                                         (11)
#define PHG_GEPHY_PHYSR_OFFSET_MASTER_MODE_WIDTH                                                                    (1)
#define PHG_GEPHY_PHYSR_OFFSET_NWAY_EN                                                                             (12)
#define PHG_GEPHY_PHYSR_OFFSET_NWAY_EN_WIDTH                                                                        (1)
#define PHG_GEPHY_PHYSR_OFFSET_MDI_PLUG                                                                            (13)
#define PHG_GEPHY_PHYSR_OFFSET_MDI_PLUG_WIDTH                                                                       (1)
#define PHG_GEPHY_PHYSR_OFFSET_ALDPS_STATE                                                                         (14)
#define PHG_GEPHY_PHYSR_OFFSET_ALDPS_STATE_WIDTH                                                                    (1)
#define PHG_GEPHY_PHYSR_OFFSET_PHYSR_RSVD_0                                                                        (15)
#define PHG_GEPHY_PHYSR_OFFSET_PHYSR_RSVD_0_WIDTH                                                                   (1)
typedef union PHG_GEPHY_PHYSR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 jabber_indication:PHG_GEPHY_PHYSR_OFFSET_JABBER_INDICATION_WIDTH;                                       //[ 0: 0]
        jl_uint32 mdi_crossover_status:PHG_GEPHY_PHYSR_OFFSET_MDI_CROSSOVER_STATUS_WIDTH;                                 //[ 1: 1]
        jl_uint32 link_status:PHG_GEPHY_PHYSR_OFFSET_LINK_STATUS_WIDTH;                                                   //[ 2: 2]
        jl_uint32 duplex_status:PHG_GEPHY_PHYSR_OFFSET_DUPLEX_STATUS_WIDTH;                                               //[ 3: 3]
        jl_uint32 speed_status:PHG_GEPHY_PHYSR_OFFSET_SPEED_STATUS_WIDTH;                                                 //[ 5: 4]
        jl_uint32 txflow_en:PHG_GEPHY_PHYSR_OFFSET_TXFLOW_EN_WIDTH;                                                       //[ 6: 6]
        jl_uint32 rxflow_en:PHG_GEPHY_PHYSR_OFFSET_RXFLOW_EN_WIDTH;                                                       //[ 7: 7]
        jl_uint32 eee_capability:PHG_GEPHY_PHYSR_OFFSET_EEE_CAPABILITY_WIDTH;                                             //[ 8: 8]
        jl_uint32 fc_result:PHG_GEPHY_PHYSR_OFFSET_FC_RESULT_WIDTH;                                                       //[10: 9]
        jl_uint32 master_mode:PHG_GEPHY_PHYSR_OFFSET_MASTER_MODE_WIDTH;                                                   //[11:11]
        jl_uint32 nway_en:PHG_GEPHY_PHYSR_OFFSET_NWAY_EN_WIDTH;                                                           //[12:12]
        jl_uint32 mdi_plug:PHG_GEPHY_PHYSR_OFFSET_MDI_PLUG_WIDTH;                                                         //[13:13]
        jl_uint32 aldps_state:PHG_GEPHY_PHYSR_OFFSET_ALDPS_STATE_WIDTH;                                                   //[14:14]
        jl_uint32 physr_rsvd_0:PHG_GEPHY_PHYSR_OFFSET_PHYSR_RSVD_0_WIDTH;                                                 //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_PHYSR_OFFSET_RSVD0_WIDTH;                                                               //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHYSR_ENTRY_SIZE];
} PHG_GEPHY_PHYSR_t;

#define PHG_GEPHY_PHY_RSVDR7                                                                   ((jl_uint32)0x002441C4U)
#define PHG_GEPHY_PHY_RSVDR7_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_RSVDR7_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_PHY_RSVDR7_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_PHY_RSVDR7_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_PHY_RSVDR7_OFFSET_PHY_RSVD7                                                                       (0)
#define PHG_GEPHY_PHY_RSVDR7_OFFSET_PHY_RSVD7_WIDTH                                                                (16)
typedef union PHG_GEPHY_PHY_RSVDR7_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_rsvd7:PHG_GEPHY_PHY_RSVDR7_OFFSET_PHY_RSVD7_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_RSVDR7_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_RSVDR7_ENTRY_SIZE];
} PHG_GEPHY_PHY_RSVDR7_t;

#define PHG_GEPHY_PHY_RSVDR8                                                                   ((jl_uint32)0x002441C8U)
#define PHG_GEPHY_PHY_RSVDR8_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_RSVDR8_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_PHY_RSVDR8_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_PHY_RSVDR8_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_PHY_RSVDR8_OFFSET_PHY_RSVD8                                                                       (0)
#define PHG_GEPHY_PHY_RSVDR8_OFFSET_PHY_RSVD8_WIDTH                                                                (16)
typedef union PHG_GEPHY_PHY_RSVDR8_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_rsvd8:PHG_GEPHY_PHY_RSVDR8_OFFSET_PHY_RSVD8_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_RSVDR8_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_RSVDR8_ENTRY_SIZE];
} PHG_GEPHY_PHY_RSVDR8_t;

#define PHG_GEPHY_INSR                                                                         ((jl_uint32)0x002441CCU)
#define PHG_GEPHY_INSR_NUM                                                                     ((jl_uint32)0x00000001U)
#define PHG_GEPHY_INSR_ENTRY_SIZE                                                                                   (1)
#define PHG_GEPHY_INSR_OFFSET_RSVD0                                                                                (16)
#define PHG_GEPHY_INSR_OFFSET_RSVD0_WIDTH                                                                          (16)
#define PHG_GEPHY_INSR_OFFSET_COPPER_AN_ERR_INT                                                                     (0)
#define PHG_GEPHY_INSR_OFFSET_COPPER_AN_ERR_INT_WIDTH                                                               (1)
#define PHG_GEPHY_INSR_OFFSET_INSR_RSVD3                                                                            (1)
#define PHG_GEPHY_INSR_OFFSET_INSR_RSVD3_WIDTH                                                                      (1)
#define PHG_GEPHY_INSR_OFFSET_COPPER_PAGE_RECEIVED_INT                                                              (2)
#define PHG_GEPHY_INSR_OFFSET_COPPER_PAGE_RECEIVED_INT_WIDTH                                                        (1)
#define PHG_GEPHY_INSR_OFFSET_COPPER_AN_COMPLETE_INT                                                                (3)
#define PHG_GEPHY_INSR_OFFSET_COPPER_AN_COMPLETE_INT_WIDTH                                                          (1)
#define PHG_GEPHY_INSR_OFFSET_IEEE_LINK_CHG_INT                                                                     (4)
#define PHG_GEPHY_INSR_OFFSET_IEEE_LINK_CHG_INT_WIDTH                                                               (1)
#define PHG_GEPHY_INSR_OFFSET_PHY_REGISTER_ACCESSIBLE                                                               (5)
#define PHG_GEPHY_INSR_OFFSET_PHY_REGISTER_ACCESSIBLE_WIDTH                                                         (1)
#define PHG_GEPHY_INSR_OFFSET_INSR_RSVD2                                                                            (6)
#define PHG_GEPHY_INSR_OFFSET_INSR_RSVD2_WIDTH                                                                      (1)
#define PHG_GEPHY_INSR_OFFSET_PME_CHG                                                                               (7)
#define PHG_GEPHY_INSR_OFFSET_PME_CHG_WIDTH                                                                         (1)
#define PHG_GEPHY_INSR_OFFSET_INSR_RSVD1                                                                            (8)
#define PHG_GEPHY_INSR_OFFSET_INSR_RSVD1_WIDTH                                                                      (1)
#define PHG_GEPHY_INSR_OFFSET_ALDPS_STATE_CHG                                                                       (9)
#define PHG_GEPHY_INSR_OFFSET_ALDPS_STATE_CHG_WIDTH                                                                 (1)
#define PHG_GEPHY_INSR_OFFSET_JABBER_DETECT_INT                                                                    (10)
#define PHG_GEPHY_INSR_OFFSET_JABBER_DETECT_INT_WIDTH                                                               (1)
#define PHG_GEPHY_INSR_OFFSET_INSR_RSVD0                                                                           (11)
#define PHG_GEPHY_INSR_OFFSET_INSR_RSVD0_WIDTH                                                                      (1)
#define PHG_GEPHY_INSR_OFFSET_COPPER_LINK_CHG_INT                                                                  (12)
#define PHG_GEPHY_INSR_OFFSET_COPPER_LINK_CHG_INT_WIDTH                                                             (1)
#define PHG_GEPHY_INSR_OFFSET_COPPER_WOL_EVENT_INT                                                                 (13)
#define PHG_GEPHY_INSR_OFFSET_COPPER_WOL_EVENT_INT_WIDTH                                                            (1)
#define PHG_GEPHY_INSR_OFFSET_COPPER_FALSE_CARRIER_INT                                                             (14)
#define PHG_GEPHY_INSR_OFFSET_COPPER_FALSE_CARRIER_INT_WIDTH                                                        (1)
#define PHG_GEPHY_INSR_OFFSET_COPPER_SYMBOL_ERR_INT                                                                (15)
#define PHG_GEPHY_INSR_OFFSET_COPPER_SYMBOL_ERR_INT_WIDTH                                                           (1)
typedef union PHG_GEPHY_INSR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 copper_an_err_int:PHG_GEPHY_INSR_OFFSET_COPPER_AN_ERR_INT_WIDTH;                                        //[ 0: 0]
        jl_uint32 insr_rsvd3:PHG_GEPHY_INSR_OFFSET_INSR_RSVD3_WIDTH;                                                      //[ 1: 1]
        jl_uint32 copper_page_received_int:PHG_GEPHY_INSR_OFFSET_COPPER_PAGE_RECEIVED_INT_WIDTH;                          //[ 2: 2]
        jl_uint32 copper_an_complete_int:PHG_GEPHY_INSR_OFFSET_COPPER_AN_COMPLETE_INT_WIDTH;                              //[ 3: 3]
        jl_uint32 ieee_link_chg_int:PHG_GEPHY_INSR_OFFSET_IEEE_LINK_CHG_INT_WIDTH;                                        //[ 4: 4]
        jl_uint32 phy_register_accessible:PHG_GEPHY_INSR_OFFSET_PHY_REGISTER_ACCESSIBLE_WIDTH;                            //[ 5: 5]
        jl_uint32 insr_rsvd2:PHG_GEPHY_INSR_OFFSET_INSR_RSVD2_WIDTH;                                                      //[ 6: 6]
        jl_uint32 pme_chg:PHG_GEPHY_INSR_OFFSET_PME_CHG_WIDTH;                                                            //[ 7: 7]
        jl_uint32 insr_rsvd1:PHG_GEPHY_INSR_OFFSET_INSR_RSVD1_WIDTH;                                                      //[ 8: 8]
        jl_uint32 aldps_state_chg:PHG_GEPHY_INSR_OFFSET_ALDPS_STATE_CHG_WIDTH;                                            //[ 9: 9]
        jl_uint32 jabber_detect_int:PHG_GEPHY_INSR_OFFSET_JABBER_DETECT_INT_WIDTH;                                        //[10:10]
        jl_uint32 insr_rsvd0:PHG_GEPHY_INSR_OFFSET_INSR_RSVD0_WIDTH;                                                      //[11:11]
        jl_uint32 copper_link_chg_int:PHG_GEPHY_INSR_OFFSET_COPPER_LINK_CHG_INT_WIDTH;                                    //[12:12]
        jl_uint32 copper_wol_event_int:PHG_GEPHY_INSR_OFFSET_COPPER_WOL_EVENT_INT_WIDTH;                                  //[13:13]
        jl_uint32 copper_false_carrier_int:PHG_GEPHY_INSR_OFFSET_COPPER_FALSE_CARRIER_INT_WIDTH;                          //[14:14]
        jl_uint32 copper_symbol_err_int:PHG_GEPHY_INSR_OFFSET_COPPER_SYMBOL_ERR_INT_WIDTH;                                //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_INSR_OFFSET_RSVD0_WIDTH;                                                                //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_INSR_ENTRY_SIZE];
} PHG_GEPHY_INSR_t;

#define PHG_GEPHY_PHY_RSVDR9                                                                   ((jl_uint32)0x002441D0U)
#define PHG_GEPHY_PHY_RSVDR9_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_RSVDR9_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_PHY_RSVDR9_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_PHY_RSVDR9_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_PHY_RSVDR9_OFFSET_PHY_RSVD9                                                                       (0)
#define PHG_GEPHY_PHY_RSVDR9_OFFSET_PHY_RSVD9_WIDTH                                                                (16)
typedef union PHG_GEPHY_PHY_RSVDR9_u {
    struct __attribute__ ((packed)) {
        jl_uint32 phy_rsvd9:PHG_GEPHY_PHY_RSVDR9_OFFSET_PHY_RSVD9_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PHY_RSVDR9_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_RSVDR9_ENTRY_SIZE];
} PHG_GEPHY_PHY_RSVDR9_t;

#define PHG_GEPHY_PHYSCR                                                                       ((jl_uint32)0x002441D4U)
#define PHG_GEPHY_PHYSCR_NUM                                                                   ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHYSCR_ENTRY_SIZE                                                                                 (1)
#define PHG_GEPHY_PHYSCR_OFFSET_RSVD0                                                                              (16)
#define PHG_GEPHY_PHYSCR_OFFSET_RSVD0_WIDTH                                                                        (16)
#define PHG_GEPHY_PHYSCR_OFFSET_PHYSCR_RSVD_1                                                                       (0)
#define PHG_GEPHY_PHYSCR_OFFSET_PHYSCR_RSVD_1_WIDTH                                                                 (1)
#define PHG_GEPHY_PHYSCR_OFFSET_PHY_SPECIAL_CONFIG_DONE                                                             (1)
#define PHG_GEPHY_PHYSCR_OFFSET_PHY_SPECIAL_CONFIG_DONE_WIDTH                                                       (1)
#define PHG_GEPHY_PHYSCR_OFFSET_PHYSCR_RSVD_0                                                                       (2)
#define PHG_GEPHY_PHYSCR_OFFSET_PHYSCR_RSVD_0_WIDTH                                                                (14)
typedef union PHG_GEPHY_PHYSCR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 physcr_rsvd_1:PHG_GEPHY_PHYSCR_OFFSET_PHYSCR_RSVD_1_WIDTH;                                              //[ 0: 0]
        jl_uint32 phy_special_config_done:PHG_GEPHY_PHYSCR_OFFSET_PHY_SPECIAL_CONFIG_DONE_WIDTH;                          //[ 1: 1]
        jl_uint32 physcr_rsvd_0:PHG_GEPHY_PHYSCR_OFFSET_PHYSCR_RSVD_0_WIDTH;                                              //[15: 2]
        jl_uint32 rsvd0:PHG_GEPHY_PHYSCR_OFFSET_RSVD0_WIDTH;                                                              //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHYSCR_ENTRY_SIZE];
} PHG_GEPHY_PHYSCR_t;

#define PHG_GEPHY_GEN_USER_CFG0                                                                ((jl_uint32)0x002441D8U)
#define PHG_GEPHY_GEN_USER_CFG0_NUM                                                            ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GEN_USER_CFG0_ENTRY_SIZE                                                                          (1)
#define PHG_GEPHY_GEN_USER_CFG0_OFFSET_RSVD0                                                                       (16)
#define PHG_GEPHY_GEN_USER_CFG0_OFFSET_RSVD0_WIDTH                                                                 (16)
#define PHG_GEPHY_GEN_USER_CFG0_OFFSET_USER_GLOBAL_MODE                                                             (0)
#define PHG_GEPHY_GEN_USER_CFG0_OFFSET_USER_GLOBAL_MODE_WIDTH                                                       (3)
#define PHG_GEPHY_GEN_USER_CFG0_OFFSET_USER_CONFIG                                                                  (3)
#define PHG_GEPHY_GEN_USER_CFG0_OFFSET_USER_CONFIG_WIDTH                                                           (13)
typedef union PHG_GEPHY_GEN_USER_CFG0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 user_global_mode:PHG_GEPHY_GEN_USER_CFG0_OFFSET_USER_GLOBAL_MODE_WIDTH;                                 //[ 2: 0]
        jl_uint32 user_config:PHG_GEPHY_GEN_USER_CFG0_OFFSET_USER_CONFIG_WIDTH;                                           //[15: 3]
        jl_uint32 rsvd0:PHG_GEPHY_GEN_USER_CFG0_OFFSET_RSVD0_WIDTH;                                                       //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GEN_USER_CFG0_ENTRY_SIZE];
} PHG_GEPHY_GEN_USER_CFG0_t;

#define PHG_GEPHY_DIG_RSVD0                                                                    ((jl_uint32)0x002441DCU)
#define PHG_GEPHY_DIG_RSVD0_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DIG_RSVD0_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DIG_RSVD0_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_DIG_RSVD0_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_DIG_RSVD0_OFFSET_DIG_RSVD0                                                                        (0)
#define PHG_GEPHY_DIG_RSVD0_OFFSET_DIG_RSVD0_WIDTH                                                                 (16)
typedef union PHG_GEPHY_DIG_RSVD0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dig_rsvd0:PHG_GEPHY_DIG_RSVD0_OFFSET_DIG_RSVD0_WIDTH;                                                   //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DIG_RSVD0_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DIG_RSVD0_ENTRY_SIZE];
} PHG_GEPHY_DIG_RSVD0_t;

#define PHG_GEPHY_DIG_RSVD1                                                                    ((jl_uint32)0x002441E0U)
#define PHG_GEPHY_DIG_RSVD1_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DIG_RSVD1_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DIG_RSVD1_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_DIG_RSVD1_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_DIG_RSVD1_OFFSET_DIG_RSVD1                                                                        (0)
#define PHG_GEPHY_DIG_RSVD1_OFFSET_DIG_RSVD1_WIDTH                                                                 (16)
typedef union PHG_GEPHY_DIG_RSVD1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dig_rsvd1:PHG_GEPHY_DIG_RSVD1_OFFSET_DIG_RSVD1_WIDTH;                                                   //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DIG_RSVD1_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DIG_RSVD1_ENTRY_SIZE];
} PHG_GEPHY_DIG_RSVD1_t;

#define PHG_GEPHY_DIG_RSVD2                                                                    ((jl_uint32)0x002441E4U)
#define PHG_GEPHY_DIG_RSVD2_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DIG_RSVD2_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DIG_RSVD2_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_DIG_RSVD2_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_DIG_RSVD2_OFFSET_DIG_RSVD2                                                                        (0)
#define PHG_GEPHY_DIG_RSVD2_OFFSET_DIG_RSVD2_WIDTH                                                                 (16)
typedef union PHG_GEPHY_DIG_RSVD2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dig_rsvd2:PHG_GEPHY_DIG_RSVD2_OFFSET_DIG_RSVD2_WIDTH;                                                   //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DIG_RSVD2_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DIG_RSVD2_ENTRY_SIZE];
} PHG_GEPHY_DIG_RSVD2_t;

#define PHG_GEPHY_DIG_RSVD3                                                                    ((jl_uint32)0x002441E8U)
#define PHG_GEPHY_DIG_RSVD3_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DIG_RSVD3_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DIG_RSVD3_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_DIG_RSVD3_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_DIG_RSVD3_OFFSET_DIG_RSVD3                                                                        (0)
#define PHG_GEPHY_DIG_RSVD3_OFFSET_DIG_RSVD3_WIDTH                                                                 (16)
typedef union PHG_GEPHY_DIG_RSVD3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dig_rsvd3:PHG_GEPHY_DIG_RSVD3_OFFSET_DIG_RSVD3_WIDTH;                                                   //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DIG_RSVD3_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DIG_RSVD3_ENTRY_SIZE];
} PHG_GEPHY_DIG_RSVD3_t;

#define PHG_GEPHY_DIG_RSVD4                                                                    ((jl_uint32)0x002441ECU)
#define PHG_GEPHY_DIG_RSVD4_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DIG_RSVD4_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DIG_RSVD4_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_DIG_RSVD4_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_DIG_RSVD4_OFFSET_DIG_RSVD4                                                                        (0)
#define PHG_GEPHY_DIG_RSVD4_OFFSET_DIG_RSVD4_WIDTH                                                                 (16)
typedef union PHG_GEPHY_DIG_RSVD4_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dig_rsvd4:PHG_GEPHY_DIG_RSVD4_OFFSET_DIG_RSVD4_WIDTH;                                                   //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DIG_RSVD4_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DIG_RSVD4_ENTRY_SIZE];
} PHG_GEPHY_DIG_RSVD4_t;

#define PHG_GEPHY_DIG_RSVD5                                                                    ((jl_uint32)0x002441F0U)
#define PHG_GEPHY_DIG_RSVD5_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DIG_RSVD5_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DIG_RSVD5_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_DIG_RSVD5_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_DIG_RSVD5_OFFSET_DIG_RSVD5                                                                        (0)
#define PHG_GEPHY_DIG_RSVD5_OFFSET_DIG_RSVD5_WIDTH                                                                 (16)
typedef union PHG_GEPHY_DIG_RSVD5_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dig_rsvd5:PHG_GEPHY_DIG_RSVD5_OFFSET_DIG_RSVD5_WIDTH;                                                   //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DIG_RSVD5_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DIG_RSVD5_ENTRY_SIZE];
} PHG_GEPHY_DIG_RSVD5_t;

#define PHG_GEPHY__SW_CLR                                                                      ((jl_uint32)0x002441F4U)
#define PHG_GEPHY__SW_CLR_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY__SW_CLR_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY__SW_CLR_OFFSET_RSVD0                                                                              (4)
#define PHG_GEPHY__SW_CLR_OFFSET_RSVD0_WIDTH                                                                       (28)
#define PHG_GEPHY__SW_CLR_OFFSET_IEEE_RESTART_AN_CLR                                                                (0)
#define PHG_GEPHY__SW_CLR_OFFSET_IEEE_RESTART_AN_CLR_WIDTH                                                          (1)
#define PHG_GEPHY__SW_CLR_OFFSET_IEEE_SOFTWARE_RESET_CLR                                                            (1)
#define PHG_GEPHY__SW_CLR_OFFSET_IEEE_SOFTWARE_RESET_CLR_WIDTH                                                      (1)
#define PHG_GEPHY__SW_CLR_OFFSET_COPPER_RESTART_AN_CLR                                                              (2)
#define PHG_GEPHY__SW_CLR_OFFSET_COPPER_RESTART_AN_CLR_WIDTH                                                        (1)
#define PHG_GEPHY__SW_CLR_OFFSET_COPPER_SOFTWARE_RESET_CLR                                                          (3)
#define PHG_GEPHY__SW_CLR_OFFSET_COPPER_SOFTWARE_RESET_CLR_WIDTH                                                    (1)
typedef union PHG_GEPHY__SW_CLR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_restart_an_clr:PHG_GEPHY__SW_CLR_OFFSET_IEEE_RESTART_AN_CLR_WIDTH;                                 //[ 0: 0]
        jl_uint32 ieee_software_reset_clr:PHG_GEPHY__SW_CLR_OFFSET_IEEE_SOFTWARE_RESET_CLR_WIDTH;                         //[ 1: 1]
        jl_uint32 copper_restart_an_clr:PHG_GEPHY__SW_CLR_OFFSET_COPPER_RESTART_AN_CLR_WIDTH;                             //[ 2: 2]
        jl_uint32 copper_software_reset_clr:PHG_GEPHY__SW_CLR_OFFSET_COPPER_SOFTWARE_RESET_CLR_WIDTH;                     //[ 3: 3]
        jl_uint32 rsvd0:PHG_GEPHY__SW_CLR_OFFSET_RSVD0_WIDTH;                                                             //[31: 4]
    } BF;
    jl_uint32 val[PHG_GEPHY__SW_CLR_ENTRY_SIZE];
} PHG_GEPHY__SW_CLR_t;

#define PHG_GEPHY_PHY_LINK_STATUS_FCTRL                                                        ((jl_uint32)0x002441F8U)
#define PHG_GEPHY_PHY_LINK_STATUS_FCTRL_NUM                                                    ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PHY_LINK_STATUS_FCTRL_ENTRY_SIZE                                                                  (1)
#define PHG_GEPHY_PHY_LINK_STATUS_FCTRL_OFFSET_RSVD1                                                               (16)
#define PHG_GEPHY_PHY_LINK_STATUS_FCTRL_OFFSET_RSVD1_WIDTH                                                         (16)
#define PHG_GEPHY_PHY_LINK_STATUS_FCTRL_OFFSET_RSVD0                                                                (0)
#define PHG_GEPHY_PHY_LINK_STATUS_FCTRL_OFFSET_RSVD0_WIDTH                                                         (12)
#define PHG_GEPHY_PHY_LINK_STATUS_FCTRL_OFFSET_COPPER_LINK_STATUS_FORCE_VAL                                        (12)
#define PHG_GEPHY_PHY_LINK_STATUS_FCTRL_OFFSET_COPPER_LINK_STATUS_FORCE_VAL_WIDTH                                   (1)
#define PHG_GEPHY_PHY_LINK_STATUS_FCTRL_OFFSET_COPPER_LINK_STATUS_FORCE_EN                                         (13)
#define PHG_GEPHY_PHY_LINK_STATUS_FCTRL_OFFSET_COPPER_LINK_STATUS_FORCE_EN_WIDTH                                    (1)
#define PHG_GEPHY_PHY_LINK_STATUS_FCTRL_OFFSET_IEEE_LINK_STATUS_FORCE_VAL                                          (14)
#define PHG_GEPHY_PHY_LINK_STATUS_FCTRL_OFFSET_IEEE_LINK_STATUS_FORCE_VAL_WIDTH                                     (1)
#define PHG_GEPHY_PHY_LINK_STATUS_FCTRL_OFFSET_IEEE_LINK_STATUS_FORCE_EN                                           (15)
#define PHG_GEPHY_PHY_LINK_STATUS_FCTRL_OFFSET_IEEE_LINK_STATUS_FORCE_EN_WIDTH                                      (1)
typedef union PHG_GEPHY_PHY_LINK_STATUS_FCTRL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd0:PHG_GEPHY_PHY_LINK_STATUS_FCTRL_OFFSET_RSVD0_WIDTH;                                               //[11: 0]
        jl_uint32 copper_link_status_force_val:PHG_GEPHY_PHY_LINK_STATUS_FCTRL_OFFSET_COPPER_LINK_STATUS_FORCE_VAL_WIDTH;  //[12:12]
        jl_uint32 copper_link_status_force_en:PHG_GEPHY_PHY_LINK_STATUS_FCTRL_OFFSET_COPPER_LINK_STATUS_FORCE_EN_WIDTH;   //[13:13]
        jl_uint32 ieee_link_status_force_val:PHG_GEPHY_PHY_LINK_STATUS_FCTRL_OFFSET_IEEE_LINK_STATUS_FORCE_VAL_WIDTH;     //[14:14]
        jl_uint32 ieee_link_status_force_en:PHG_GEPHY_PHY_LINK_STATUS_FCTRL_OFFSET_IEEE_LINK_STATUS_FORCE_EN_WIDTH;       //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_PHY_LINK_STATUS_FCTRL_OFFSET_RSVD1_WIDTH;                                               //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PHY_LINK_STATUS_FCTRL_ENTRY_SIZE];
} PHG_GEPHY_PHY_LINK_STATUS_FCTRL_t;

#define PHG_GEPHY_DIG_RSVD8                                                                    ((jl_uint32)0x002441FCU)
#define PHG_GEPHY_DIG_RSVD8_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DIG_RSVD8_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DIG_RSVD8_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_DIG_RSVD8_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_DIG_RSVD8_OFFSET_DIG_RSVD8                                                                        (0)
#define PHG_GEPHY_DIG_RSVD8_OFFSET_DIG_RSVD8_WIDTH                                                                 (16)
typedef union PHG_GEPHY_DIG_RSVD8_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dig_rsvd8:PHG_GEPHY_DIG_RSVD8_OFFSET_DIG_RSVD8_WIDTH;                                                   //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DIG_RSVD8_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DIG_RSVD8_ENTRY_SIZE];
} PHG_GEPHY_DIG_RSVD8_t;

#define PHG_GEPHY_DIG_RSVD9                                                                    ((jl_uint32)0x00244200U)
#define PHG_GEPHY_DIG_RSVD9_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DIG_RSVD9_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DIG_RSVD9_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_DIG_RSVD9_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_DIG_RSVD9_OFFSET_DIG_RSVD9                                                                        (0)
#define PHG_GEPHY_DIG_RSVD9_OFFSET_DIG_RSVD9_WIDTH                                                                 (16)
typedef union PHG_GEPHY_DIG_RSVD9_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dig_rsvd9:PHG_GEPHY_DIG_RSVD9_OFFSET_DIG_RSVD9_WIDTH;                                                   //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DIG_RSVD9_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DIG_RSVD9_ENTRY_SIZE];
} PHG_GEPHY_DIG_RSVD9_t;

#define PHG_GEPHY_DIG_RSVD10                                                                   ((jl_uint32)0x00244204U)
#define PHG_GEPHY_DIG_RSVD10_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DIG_RSVD10_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_DIG_RSVD10_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_DIG_RSVD10_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_DIG_RSVD10_OFFSET_DIG_RSVD10                                                                      (0)
#define PHG_GEPHY_DIG_RSVD10_OFFSET_DIG_RSVD10_WIDTH                                                               (16)
typedef union PHG_GEPHY_DIG_RSVD10_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dig_rsvd10:PHG_GEPHY_DIG_RSVD10_OFFSET_DIG_RSVD10_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DIG_RSVD10_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DIG_RSVD10_ENTRY_SIZE];
} PHG_GEPHY_DIG_RSVD10_t;

#define PHG_GEPHY_DIG_RSVD11                                                                   ((jl_uint32)0x00244208U)
#define PHG_GEPHY_DIG_RSVD11_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DIG_RSVD11_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_DIG_RSVD11_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_DIG_RSVD11_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_DIG_RSVD11_OFFSET_DIG_RSVD11                                                                      (0)
#define PHG_GEPHY_DIG_RSVD11_OFFSET_DIG_RSVD11_WIDTH                                                               (16)
typedef union PHG_GEPHY_DIG_RSVD11_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dig_rsvd11:PHG_GEPHY_DIG_RSVD11_OFFSET_DIG_RSVD11_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DIG_RSVD11_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DIG_RSVD11_ENTRY_SIZE];
} PHG_GEPHY_DIG_RSVD11_t;

#define PHG_GEPHY_DIG_RSVD12                                                                   ((jl_uint32)0x0024420CU)
#define PHG_GEPHY_DIG_RSVD12_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DIG_RSVD12_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_DIG_RSVD12_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_DIG_RSVD12_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_DIG_RSVD12_OFFSET_DIG_RSVD12                                                                      (0)
#define PHG_GEPHY_DIG_RSVD12_OFFSET_DIG_RSVD12_WIDTH                                                               (16)
typedef union PHG_GEPHY_DIG_RSVD12_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dig_rsvd12:PHG_GEPHY_DIG_RSVD12_OFFSET_DIG_RSVD12_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DIG_RSVD12_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DIG_RSVD12_ENTRY_SIZE];
} PHG_GEPHY_DIG_RSVD12_t;

#define PHG_GEPHY_DIG_RSVD13                                                                   ((jl_uint32)0x00244210U)
#define PHG_GEPHY_DIG_RSVD13_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DIG_RSVD13_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_DIG_RSVD13_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_DIG_RSVD13_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_DIG_RSVD13_OFFSET_DIG_RSVD13                                                                      (0)
#define PHG_GEPHY_DIG_RSVD13_OFFSET_DIG_RSVD13_WIDTH                                                               (16)
typedef union PHG_GEPHY_DIG_RSVD13_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dig_rsvd13:PHG_GEPHY_DIG_RSVD13_OFFSET_DIG_RSVD13_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DIG_RSVD13_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DIG_RSVD13_ENTRY_SIZE];
} PHG_GEPHY_DIG_RSVD13_t;

#define PHG_GEPHY_DIG_RSVD14                                                                   ((jl_uint32)0x00244214U)
#define PHG_GEPHY_DIG_RSVD14_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DIG_RSVD14_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_DIG_RSVD14_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_DIG_RSVD14_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_DIG_RSVD14_OFFSET_DIG_RSVD14                                                                      (0)
#define PHG_GEPHY_DIG_RSVD14_OFFSET_DIG_RSVD14_WIDTH                                                               (16)
typedef union PHG_GEPHY_DIG_RSVD14_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dig_rsvd14:PHG_GEPHY_DIG_RSVD14_OFFSET_DIG_RSVD14_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DIG_RSVD14_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DIG_RSVD14_ENTRY_SIZE];
} PHG_GEPHY_DIG_RSVD14_t;

#define PHG_GEPHY_GCFG7                                                                        ((jl_uint32)0x00244218U)
#define PHG_GEPHY_GCFG7_NUM                                                                    ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GCFG7_ENTRY_SIZE                                                                                  (1)
#define PHG_GEPHY_GCFG7_OFFSET_RSVD2                                                                                (9)
#define PHG_GEPHY_GCFG7_OFFSET_RSVD2_WIDTH                                                                         (23)
#define PHG_GEPHY_GCFG7_OFFSET_CFG_BASE10_SEL                                                                       (0)
#define PHG_GEPHY_GCFG7_OFFSET_CFG_BASE10_SEL_WIDTH                                                                 (1)
#define PHG_GEPHY_GCFG7_OFFSET_CFG_BASE100X_SEL                                                                     (1)
#define PHG_GEPHY_GCFG7_OFFSET_CFG_BASE100X_SEL_WIDTH                                                               (1)
#define PHG_GEPHY_GCFG7_OFFSET_CFG_BASE100T_SEL                                                                     (2)
#define PHG_GEPHY_GCFG7_OFFSET_CFG_BASE100T_SEL_WIDTH                                                               (1)
#define PHG_GEPHY_GCFG7_OFFSET_RSVD1                                                                                (3)
#define PHG_GEPHY_GCFG7_OFFSET_RSVD1_WIDTH                                                                          (1)
#define PHG_GEPHY_GCFG7_OFFSET_CFG_BASE1000T_SEL                                                                    (4)
#define PHG_GEPHY_GCFG7_OFFSET_CFG_BASE1000T_SEL_WIDTH                                                              (1)
#define PHG_GEPHY_GCFG7_OFFSET_CFG_BASE_AN_SEL                                                                      (5)
#define PHG_GEPHY_GCFG7_OFFSET_CFG_BASE_AN_SEL_WIDTH                                                                (1)
#define PHG_GEPHY_GCFG7_OFFSET_RSVD0                                                                                (6)
#define PHG_GEPHY_GCFG7_OFFSET_RSVD0_WIDTH                                                                          (1)
#define PHG_GEPHY_GCFG7_OFFSET_CFG_BASET_ADC_IN_SEL                                                                 (7)
#define PHG_GEPHY_GCFG7_OFFSET_CFG_BASET_ADC_IN_SEL_WIDTH                                                           (1)
#define PHG_GEPHY_GCFG7_OFFSET_CFG_BASET_DAC_OUT_SEL                                                                (8)
#define PHG_GEPHY_GCFG7_OFFSET_CFG_BASET_DAC_OUT_SEL_WIDTH                                                          (1)
typedef union PHG_GEPHY_GCFG7_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_base10_sel:PHG_GEPHY_GCFG7_OFFSET_CFG_BASE10_SEL_WIDTH;                                             //[ 0: 0]
        jl_uint32 cfg_base100x_sel:PHG_GEPHY_GCFG7_OFFSET_CFG_BASE100X_SEL_WIDTH;                                         //[ 1: 1]
        jl_uint32 cfg_base100t_sel:PHG_GEPHY_GCFG7_OFFSET_CFG_BASE100T_SEL_WIDTH;                                         //[ 2: 2]
        jl_uint32 rsvd1:PHG_GEPHY_GCFG7_OFFSET_RSVD1_WIDTH;                                                               //[ 3: 3]
        jl_uint32 cfg_base1000t_sel:PHG_GEPHY_GCFG7_OFFSET_CFG_BASE1000T_SEL_WIDTH;                                       //[ 4: 4]
        jl_uint32 cfg_base_an_sel:PHG_GEPHY_GCFG7_OFFSET_CFG_BASE_AN_SEL_WIDTH;                                           //[ 5: 5]
        jl_uint32 rsvd0:PHG_GEPHY_GCFG7_OFFSET_RSVD0_WIDTH;                                                               //[ 6: 6]
        jl_uint32 cfg_baset_adc_in_sel:PHG_GEPHY_GCFG7_OFFSET_CFG_BASET_ADC_IN_SEL_WIDTH;                                 //[ 7: 7]
        jl_uint32 cfg_baset_dac_out_sel:PHG_GEPHY_GCFG7_OFFSET_CFG_BASET_DAC_OUT_SEL_WIDTH;                               //[ 8: 8]
        jl_uint32 rsvd2:PHG_GEPHY_GCFG7_OFFSET_RSVD2_WIDTH;                                                               //[31: 9]
    } BF;
    jl_uint32 val[PHG_GEPHY_GCFG7_ENTRY_SIZE];
} PHG_GEPHY_GCFG7_t;

#define PHG_GEPHY_GB_INTST                                                                     ((jl_uint32)0x0024421CU)
#define PHG_GEPHY_GB_INTST_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GB_INTST_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_GB_INTST_OFFSET_RSVD1                                                                             (6)
#define PHG_GEPHY_GB_INTST_OFFSET_RSVD1_WIDTH                                                                      (26)
#define PHG_GEPHY_GB_INTST_OFFSET_SKEW_TIMEOUT                                                                      (0)
#define PHG_GEPHY_GB_INTST_OFFSET_SKEW_TIMEOUT_WIDTH                                                                (1)
#define PHG_GEPHY_GB_INTST_OFFSET_RSVD0                                                                             (1)
#define PHG_GEPHY_GB_INTST_OFFSET_RSVD0_WIDTH                                                                       (4)
#define PHG_GEPHY_GB_INTST_OFFSET_PMA_LINK_LOST                                                                     (5)
#define PHG_GEPHY_GB_INTST_OFFSET_PMA_LINK_LOST_WIDTH                                                               (1)
typedef union PHG_GEPHY_GB_INTST_u {
    struct __attribute__ ((packed)) {
        jl_uint32 skew_timeout:PHG_GEPHY_GB_INTST_OFFSET_SKEW_TIMEOUT_WIDTH;                                              //[ 0: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GB_INTST_OFFSET_RSVD0_WIDTH;                                                            //[ 4: 1]
        jl_uint32 pma_link_lost:PHG_GEPHY_GB_INTST_OFFSET_PMA_LINK_LOST_WIDTH;                                            //[ 5: 5]
        jl_uint32 rsvd1:PHG_GEPHY_GB_INTST_OFFSET_RSVD1_WIDTH;                                                            //[31: 6]
    } BF;
    jl_uint32 val[PHG_GEPHY_GB_INTST_ENTRY_SIZE];
} PHG_GEPHY_GB_INTST_t;

#define PHG_GEPHY_GB_INTEN                                                                     ((jl_uint32)0x00244220U)
#define PHG_GEPHY_GB_INTEN_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GB_INTEN_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_GB_INTEN_OFFSET_RSVD2                                                                             (6)
#define PHG_GEPHY_GB_INTEN_OFFSET_RSVD2_WIDTH                                                                      (26)
#define PHG_GEPHY_GB_INTEN_OFFSET_RSVD1                                                                             (0)
#define PHG_GEPHY_GB_INTEN_OFFSET_RSVD1_WIDTH                                                                       (2)
#define PHG_GEPHY_GB_INTEN_OFFSET_MAXWAIT_TIMER_TIMEOUT_EN                                                          (2)
#define PHG_GEPHY_GB_INTEN_OFFSET_MAXWAIT_TIMER_TIMEOUT_EN_WIDTH                                                    (1)
#define PHG_GEPHY_GB_INTEN_OFFSET_RSVD0                                                                             (3)
#define PHG_GEPHY_GB_INTEN_OFFSET_RSVD0_WIDTH                                                                       (1)
#define PHG_GEPHY_GB_INTEN_OFFSET_GMII_FIFO_ERR_EN                                                                  (4)
#define PHG_GEPHY_GB_INTEN_OFFSET_GMII_FIFO_ERR_EN_WIDTH                                                            (1)
#define PHG_GEPHY_GB_INTEN_OFFSET_PMA_LINK_LOST_EN                                                                  (5)
#define PHG_GEPHY_GB_INTEN_OFFSET_PMA_LINK_LOST_EN_WIDTH                                                            (1)
typedef union PHG_GEPHY_GB_INTEN_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd1:PHG_GEPHY_GB_INTEN_OFFSET_RSVD1_WIDTH;                                                            //[ 1: 0]
        jl_uint32 maxwait_timer_timeout_en:PHG_GEPHY_GB_INTEN_OFFSET_MAXWAIT_TIMER_TIMEOUT_EN_WIDTH;                      //[ 2: 2]
        jl_uint32 rsvd0:PHG_GEPHY_GB_INTEN_OFFSET_RSVD0_WIDTH;                                                            //[ 3: 3]
        jl_uint32 gmii_fifo_err_en:PHG_GEPHY_GB_INTEN_OFFSET_GMII_FIFO_ERR_EN_WIDTH;                                      //[ 4: 4]
        jl_uint32 pma_link_lost_en:PHG_GEPHY_GB_INTEN_OFFSET_PMA_LINK_LOST_EN_WIDTH;                                      //[ 5: 5]
        jl_uint32 rsvd2:PHG_GEPHY_GB_INTEN_OFFSET_RSVD2_WIDTH;                                                            //[31: 6]
    } BF;
    jl_uint32 val[PHG_GEPHY_GB_INTEN_ENTRY_SIZE];
} PHG_GEPHY_GB_INTEN_t;

#define PHG_GEPHY_GB_INTCLR                                                                    ((jl_uint32)0x00244224U)
#define PHG_GEPHY_GB_INTCLR_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GB_INTCLR_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_GB_INTCLR_OFFSET_RSVD1                                                                            (6)
#define PHG_GEPHY_GB_INTCLR_OFFSET_RSVD1_WIDTH                                                                     (26)
#define PHG_GEPHY_GB_INTCLR_OFFSET_RSVD0                                                                            (0)
#define PHG_GEPHY_GB_INTCLR_OFFSET_RSVD0_WIDTH                                                                      (4)
#define PHG_GEPHY_GB_INTCLR_OFFSET_GMII_FIFO_ERR_CLR                                                                (4)
#define PHG_GEPHY_GB_INTCLR_OFFSET_GMII_FIFO_ERR_CLR_WIDTH                                                          (1)
#define PHG_GEPHY_GB_INTCLR_OFFSET_PMA_LINK_LOST_CLR                                                                (5)
#define PHG_GEPHY_GB_INTCLR_OFFSET_PMA_LINK_LOST_CLR_WIDTH                                                          (1)
typedef union PHG_GEPHY_GB_INTCLR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd0:PHG_GEPHY_GB_INTCLR_OFFSET_RSVD0_WIDTH;                                                           //[ 3: 0]
        jl_uint32 gmii_fifo_err_clr:PHG_GEPHY_GB_INTCLR_OFFSET_GMII_FIFO_ERR_CLR_WIDTH;                                   //[ 4: 4]
        jl_uint32 pma_link_lost_clr:PHG_GEPHY_GB_INTCLR_OFFSET_PMA_LINK_LOST_CLR_WIDTH;                                   //[ 5: 5]
        jl_uint32 rsvd1:PHG_GEPHY_GB_INTCLR_OFFSET_RSVD1_WIDTH;                                                           //[31: 6]
    } BF;
    jl_uint32 val[PHG_GEPHY_GB_INTCLR_ENTRY_SIZE];
} PHG_GEPHY_GB_INTCLR_t;

#define PHG_GEPHY_GB_INTDIS                                                                    ((jl_uint32)0x00244228U)
#define PHG_GEPHY_GB_INTDIS_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GB_INTDIS_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_GB_INTDIS_OFFSET_RSVD1                                                                            (4)
#define PHG_GEPHY_GB_INTDIS_OFFSET_RSVD1_WIDTH                                                                     (28)
#define PHG_GEPHY_GB_INTDIS_OFFSET_CPU_INT_EN                                                                       (0)
#define PHG_GEPHY_GB_INTDIS_OFFSET_CPU_INT_EN_WIDTH                                                                 (1)
#define PHG_GEPHY_GB_INTDIS_OFFSET_COPPER_CFG_INT_EN                                                                (1)
#define PHG_GEPHY_GB_INTDIS_OFFSET_COPPER_CFG_INT_EN_WIDTH                                                          (1)
#define PHG_GEPHY_GB_INTDIS_OFFSET_RSVD0                                                                            (2)
#define PHG_GEPHY_GB_INTDIS_OFFSET_RSVD0_WIDTH                                                                      (1)
#define PHG_GEPHY_GB_INTDIS_OFFSET_BASE1000T_REG7_INT_EN                                                            (3)
#define PHG_GEPHY_GB_INTDIS_OFFSET_BASE1000T_REG7_INT_EN_WIDTH                                                      (1)
typedef union PHG_GEPHY_GB_INTDIS_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cpu_int_en:PHG_GEPHY_GB_INTDIS_OFFSET_CPU_INT_EN_WIDTH;                                                 //[ 0: 0]
        jl_uint32 copper_cfg_int_en:PHG_GEPHY_GB_INTDIS_OFFSET_COPPER_CFG_INT_EN_WIDTH;                                   //[ 1: 1]
        jl_uint32 rsvd0:PHG_GEPHY_GB_INTDIS_OFFSET_RSVD0_WIDTH;                                                           //[ 2: 2]
        jl_uint32 base1000t_reg7_int_en:PHG_GEPHY_GB_INTDIS_OFFSET_BASE1000T_REG7_INT_EN_WIDTH;                           //[ 3: 3]
        jl_uint32 rsvd1:PHG_GEPHY_GB_INTDIS_OFFSET_RSVD1_WIDTH;                                                           //[31: 4]
    } BF;
    jl_uint32 val[PHG_GEPHY_GB_INTDIS_ENTRY_SIZE];
} PHG_GEPHY_GB_INTDIS_t;

#define PHG_GEPHY_CPUINT                                                                       ((jl_uint32)0x0024422CU)
#define PHG_GEPHY_CPUINT_NUM                                                                   ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPUINT_ENTRY_SIZE                                                                                 (1)
#define PHG_GEPHY_CPUINT_OFFSET_RSVD2                                                                               (4)
#define PHG_GEPHY_CPUINT_OFFSET_RSVD2_WIDTH                                                                        (28)
#define PHG_GEPHY_CPUINT_OFFSET_RSVD1                                                                               (0)
#define PHG_GEPHY_CPUINT_OFFSET_RSVD1_WIDTH                                                                         (1)
#define PHG_GEPHY_CPUINT_OFFSET_BASE1000T_CFG_CHG_INT                                                               (1)
#define PHG_GEPHY_CPUINT_OFFSET_BASE1000T_CFG_CHG_INT_WIDTH                                                         (1)
#define PHG_GEPHY_CPUINT_OFFSET_RSVD0                                                                               (2)
#define PHG_GEPHY_CPUINT_OFFSET_RSVD0_WIDTH                                                                         (1)
#define PHG_GEPHY_CPUINT_OFFSET_BASE1000T_REG7_CHG_INT                                                              (3)
#define PHG_GEPHY_CPUINT_OFFSET_BASE1000T_REG7_CHG_INT_WIDTH                                                        (1)
typedef union PHG_GEPHY_CPUINT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd1:PHG_GEPHY_CPUINT_OFFSET_RSVD1_WIDTH;                                                              //[ 0: 0]
        jl_uint32 base1000t_cfg_chg_int:PHG_GEPHY_CPUINT_OFFSET_BASE1000T_CFG_CHG_INT_WIDTH;                              //[ 1: 1]
        jl_uint32 rsvd0:PHG_GEPHY_CPUINT_OFFSET_RSVD0_WIDTH;                                                              //[ 2: 2]
        jl_uint32 base1000t_reg7_chg_int:PHG_GEPHY_CPUINT_OFFSET_BASE1000T_REG7_CHG_INT_WIDTH;                            //[ 3: 3]
        jl_uint32 rsvd2:PHG_GEPHY_CPUINT_OFFSET_RSVD2_WIDTH;                                                              //[31: 4]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPUINT_ENTRY_SIZE];
} PHG_GEPHY_CPUINT_t;

#define PHG_GEPHY_CPUINT_CLR                                                                   ((jl_uint32)0x00244230U)
#define PHG_GEPHY_CPUINT_CLR_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPUINT_CLR_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_CPUINT_CLR_OFFSET_RSVD2                                                                           (4)
#define PHG_GEPHY_CPUINT_CLR_OFFSET_RSVD2_WIDTH                                                                    (28)
#define PHG_GEPHY_CPUINT_CLR_OFFSET_RSVD1                                                                           (0)
#define PHG_GEPHY_CPUINT_CLR_OFFSET_RSVD1_WIDTH                                                                     (1)
#define PHG_GEPHY_CPUINT_CLR_OFFSET_BASE1000T_CFG_CHG_CLR                                                           (1)
#define PHG_GEPHY_CPUINT_CLR_OFFSET_BASE1000T_CFG_CHG_CLR_WIDTH                                                     (1)
#define PHG_GEPHY_CPUINT_CLR_OFFSET_RSVD0                                                                           (2)
#define PHG_GEPHY_CPUINT_CLR_OFFSET_RSVD0_WIDTH                                                                     (1)
#define PHG_GEPHY_CPUINT_CLR_OFFSET_BASE1000T_REG7_CHG_CLR                                                          (3)
#define PHG_GEPHY_CPUINT_CLR_OFFSET_BASE1000T_REG7_CHG_CLR_WIDTH                                                    (1)
typedef union PHG_GEPHY_CPUINT_CLR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd1:PHG_GEPHY_CPUINT_CLR_OFFSET_RSVD1_WIDTH;                                                          //[ 0: 0]
        jl_uint32 base1000t_cfg_chg_clr:PHG_GEPHY_CPUINT_CLR_OFFSET_BASE1000T_CFG_CHG_CLR_WIDTH;                          //[ 1: 1]
        jl_uint32 rsvd0:PHG_GEPHY_CPUINT_CLR_OFFSET_RSVD0_WIDTH;                                                          //[ 2: 2]
        jl_uint32 base1000t_reg7_chg_clr:PHG_GEPHY_CPUINT_CLR_OFFSET_BASE1000T_REG7_CHG_CLR_WIDTH;                        //[ 3: 3]
        jl_uint32 rsvd2:PHG_GEPHY_CPUINT_CLR_OFFSET_RSVD2_WIDTH;                                                          //[31: 4]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPUINT_CLR_ENTRY_SIZE];
} PHG_GEPHY_CPUINT_CLR_t;

#define PHG_GEPHY_TDR_CTRL0                                                                    ((jl_uint32)0x00244234U)
#define PHG_GEPHY_TDR_CTRL0_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_TDR_CTRL0_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_TDR_CTRL0_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_TDR_CTRL0_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_TDR_CTRL0_OFFSET_TDR_CTRL0                                                                        (0)
#define PHG_GEPHY_TDR_CTRL0_OFFSET_TDR_CTRL0_WIDTH                                                                 (14)
#define PHG_GEPHY_TDR_CTRL0_OFFSET_TDR_TEST_STATUS                                                                 (14)
#define PHG_GEPHY_TDR_CTRL0_OFFSET_TDR_TEST_STATUS_WIDTH                                                            (1)
#define PHG_GEPHY_TDR_CTRL0_OFFSET_TDR_TEST_EN                                                                     (15)
#define PHG_GEPHY_TDR_CTRL0_OFFSET_TDR_TEST_EN_WIDTH                                                                (1)
typedef union PHG_GEPHY_TDR_CTRL0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tdr_ctrl0:PHG_GEPHY_TDR_CTRL0_OFFSET_TDR_CTRL0_WIDTH;                                                   //[13: 0]
        jl_uint32 tdr_test_status:PHG_GEPHY_TDR_CTRL0_OFFSET_TDR_TEST_STATUS_WIDTH;                                       //[14:14]
        jl_uint32 tdr_test_en:PHG_GEPHY_TDR_CTRL0_OFFSET_TDR_TEST_EN_WIDTH;                                               //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_TDR_CTRL0_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_TDR_CTRL0_ENTRY_SIZE];
} PHG_GEPHY_TDR_CTRL0_t;

#define PHG_GEPHY_TDR_CTRL1                                                                    ((jl_uint32)0x00244238U)
#define PHG_GEPHY_TDR_CTRL1_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_TDR_CTRL1_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_TDR_CTRL1_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_TDR_CTRL1_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_TDR_CTRL1_OFFSET_TDR_CTRL1                                                                        (0)
#define PHG_GEPHY_TDR_CTRL1_OFFSET_TDR_CTRL1_WIDTH                                                                 (16)
typedef union PHG_GEPHY_TDR_CTRL1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tdr_ctrl1:PHG_GEPHY_TDR_CTRL1_OFFSET_TDR_CTRL1_WIDTH;                                                   //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_TDR_CTRL1_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_TDR_CTRL1_ENTRY_SIZE];
} PHG_GEPHY_TDR_CTRL1_t;

#define PHG_GEPHY_TDR_CTRL2                                                                    ((jl_uint32)0x0024423CU)
#define PHG_GEPHY_TDR_CTRL2_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_TDR_CTRL2_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_TDR_CTRL2_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_TDR_CTRL2_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_TDR_CTRL2_OFFSET_TDR_CTRL2                                                                        (0)
#define PHG_GEPHY_TDR_CTRL2_OFFSET_TDR_CTRL2_WIDTH                                                                 (16)
typedef union PHG_GEPHY_TDR_CTRL2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tdr_ctrl2:PHG_GEPHY_TDR_CTRL2_OFFSET_TDR_CTRL2_WIDTH;                                                   //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_TDR_CTRL2_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_TDR_CTRL2_ENTRY_SIZE];
} PHG_GEPHY_TDR_CTRL2_t;

#define PHG_GEPHY_TDR_CTRL3                                                                    ((jl_uint32)0x00244240U)
#define PHG_GEPHY_TDR_CTRL3_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_TDR_CTRL3_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_TDR_CTRL3_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_TDR_CTRL3_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_TDR_CTRL3_OFFSET_TDR_CTRL3                                                                        (0)
#define PHG_GEPHY_TDR_CTRL3_OFFSET_TDR_CTRL3_WIDTH                                                                 (16)
typedef union PHG_GEPHY_TDR_CTRL3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tdr_ctrl3:PHG_GEPHY_TDR_CTRL3_OFFSET_TDR_CTRL3_WIDTH;                                                   //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_TDR_CTRL3_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_TDR_CTRL3_ENTRY_SIZE];
} PHG_GEPHY_TDR_CTRL3_t;

#define PHG_GEPHY_TDR_CTRL4                                                                    ((jl_uint32)0x00244244U)
#define PHG_GEPHY_TDR_CTRL4_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_TDR_CTRL4_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_TDR_CTRL4_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_TDR_CTRL4_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_TDR_CTRL4_OFFSET_TDR_CTRL4                                                                        (0)
#define PHG_GEPHY_TDR_CTRL4_OFFSET_TDR_CTRL4_WIDTH                                                                 (16)
typedef union PHG_GEPHY_TDR_CTRL4_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tdr_ctrl4:PHG_GEPHY_TDR_CTRL4_OFFSET_TDR_CTRL4_WIDTH;                                                   //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_TDR_CTRL4_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_TDR_CTRL4_ENTRY_SIZE];
} PHG_GEPHY_TDR_CTRL4_t;

#define PHG_GEPHY_TDR_STATUS1                                                                  ((jl_uint32)0x00244248U)
#define PHG_GEPHY_TDR_STATUS1_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_TDR_STATUS1_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_TDR_STATUS1_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_TDR_STATUS1_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_TDR_STATUS1_OFFSET_TDR_STATUS1                                                                    (0)
#define PHG_GEPHY_TDR_STATUS1_OFFSET_TDR_STATUS1_WIDTH                                                             (16)
typedef union PHG_GEPHY_TDR_STATUS1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tdr_status1:PHG_GEPHY_TDR_STATUS1_OFFSET_TDR_STATUS1_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_TDR_STATUS1_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_TDR_STATUS1_ENTRY_SIZE];
} PHG_GEPHY_TDR_STATUS1_t;

#define PHG_GEPHY_TDR_STATUS2                                                                  ((jl_uint32)0x0024424CU)
#define PHG_GEPHY_TDR_STATUS2_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_TDR_STATUS2_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_TDR_STATUS2_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_TDR_STATUS2_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_TDR_STATUS2_OFFSET_TDR_STATUS2                                                                    (0)
#define PHG_GEPHY_TDR_STATUS2_OFFSET_TDR_STATUS2_WIDTH                                                             (16)
typedef union PHG_GEPHY_TDR_STATUS2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tdr_status2:PHG_GEPHY_TDR_STATUS2_OFFSET_TDR_STATUS2_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_TDR_STATUS2_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_TDR_STATUS2_ENTRY_SIZE];
} PHG_GEPHY_TDR_STATUS2_t;

#define PHG_GEPHY_TDR_STATUS3                                                                  ((jl_uint32)0x00244250U)
#define PHG_GEPHY_TDR_STATUS3_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_TDR_STATUS3_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_TDR_STATUS3_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_TDR_STATUS3_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_TDR_STATUS3_OFFSET_TDR_STATUS3                                                                    (0)
#define PHG_GEPHY_TDR_STATUS3_OFFSET_TDR_STATUS3_WIDTH                                                             (16)
typedef union PHG_GEPHY_TDR_STATUS3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tdr_status3:PHG_GEPHY_TDR_STATUS3_OFFSET_TDR_STATUS3_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_TDR_STATUS3_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_TDR_STATUS3_ENTRY_SIZE];
} PHG_GEPHY_TDR_STATUS3_t;

#define PHG_GEPHY_TDR_STATUS4                                                                  ((jl_uint32)0x00244254U)
#define PHG_GEPHY_TDR_STATUS4_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_TDR_STATUS4_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_TDR_STATUS4_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_TDR_STATUS4_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_TDR_STATUS4_OFFSET_TDR_STATUS4                                                                    (0)
#define PHG_GEPHY_TDR_STATUS4_OFFSET_TDR_STATUS4_WIDTH                                                             (16)
typedef union PHG_GEPHY_TDR_STATUS4_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tdr_status4:PHG_GEPHY_TDR_STATUS4_OFFSET_TDR_STATUS4_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_TDR_STATUS4_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_TDR_STATUS4_ENTRY_SIZE];
} PHG_GEPHY_TDR_STATUS4_t;

#define PHG_GEPHY_TDR_STATUS5                                                                  ((jl_uint32)0x00244258U)
#define PHG_GEPHY_TDR_STATUS5_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_TDR_STATUS5_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_TDR_STATUS5_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_TDR_STATUS5_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_TDR_STATUS5_OFFSET_TDR_STATUS5                                                                    (0)
#define PHG_GEPHY_TDR_STATUS5_OFFSET_TDR_STATUS5_WIDTH                                                             (16)
typedef union PHG_GEPHY_TDR_STATUS5_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tdr_status5:PHG_GEPHY_TDR_STATUS5_OFFSET_TDR_STATUS5_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_TDR_STATUS5_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_TDR_STATUS5_ENTRY_SIZE];
} PHG_GEPHY_TDR_STATUS5_t;

#define PHG_GEPHY_TDR_STATUS6                                                                  ((jl_uint32)0x0024425CU)
#define PHG_GEPHY_TDR_STATUS6_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_TDR_STATUS6_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_TDR_STATUS6_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_TDR_STATUS6_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_TDR_STATUS6_OFFSET_TDR_STATUS6                                                                    (0)
#define PHG_GEPHY_TDR_STATUS6_OFFSET_TDR_STATUS6_WIDTH                                                             (16)
typedef union PHG_GEPHY_TDR_STATUS6_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tdr_status6:PHG_GEPHY_TDR_STATUS6_OFFSET_TDR_STATUS6_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_TDR_STATUS6_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_TDR_STATUS6_ENTRY_SIZE];
} PHG_GEPHY_TDR_STATUS6_t;

#define PHG_GEPHY_TDR_STATUS7                                                                  ((jl_uint32)0x00244260U)
#define PHG_GEPHY_TDR_STATUS7_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_TDR_STATUS7_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_TDR_STATUS7_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_TDR_STATUS7_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_TDR_STATUS7_OFFSET_TDR_STATUS7                                                                    (0)
#define PHG_GEPHY_TDR_STATUS7_OFFSET_TDR_STATUS7_WIDTH                                                             (16)
typedef union PHG_GEPHY_TDR_STATUS7_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tdr_status7:PHG_GEPHY_TDR_STATUS7_OFFSET_TDR_STATUS7_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_TDR_STATUS7_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_TDR_STATUS7_ENTRY_SIZE];
} PHG_GEPHY_TDR_STATUS7_t;

#define PHG_GEPHY_TDR_STATUS8                                                                  ((jl_uint32)0x00244264U)
#define PHG_GEPHY_TDR_STATUS8_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_TDR_STATUS8_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_TDR_STATUS8_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_TDR_STATUS8_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_TDR_STATUS8_OFFSET_TDR_STATUS8                                                                    (0)
#define PHG_GEPHY_TDR_STATUS8_OFFSET_TDR_STATUS8_WIDTH                                                             (16)
typedef union PHG_GEPHY_TDR_STATUS8_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tdr_status8:PHG_GEPHY_TDR_STATUS8_OFFSET_TDR_STATUS8_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_TDR_STATUS8_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_TDR_STATUS8_ENTRY_SIZE];
} PHG_GEPHY_TDR_STATUS8_t;

#define PHG_GEPHY_TDR_STATUS9                                                                  ((jl_uint32)0x00244268U)
#define PHG_GEPHY_TDR_STATUS9_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_TDR_STATUS9_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_TDR_STATUS9_OFFSET_RSVD0                                                                          (9)
#define PHG_GEPHY_TDR_STATUS9_OFFSET_RSVD0_WIDTH                                                                   (23)
#define PHG_GEPHY_TDR_STATUS9_OFFSET_TDR_STATUS                                                                     (0)
#define PHG_GEPHY_TDR_STATUS9_OFFSET_TDR_STATUS_WIDTH                                                               (8)
#define PHG_GEPHY_TDR_STATUS9_OFFSET_TDR_DONE                                                                       (8)
#define PHG_GEPHY_TDR_STATUS9_OFFSET_TDR_DONE_WIDTH                                                                 (1)
typedef union PHG_GEPHY_TDR_STATUS9_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tdr_status:PHG_GEPHY_TDR_STATUS9_OFFSET_TDR_STATUS_WIDTH;                                               //[ 7: 0]
        jl_uint32 tdr_done:PHG_GEPHY_TDR_STATUS9_OFFSET_TDR_DONE_WIDTH;                                                   //[ 8: 8]
        jl_uint32 rsvd0:PHG_GEPHY_TDR_STATUS9_OFFSET_RSVD0_WIDTH;                                                         //[31: 9]
    } BF;
    jl_uint32 val[PHG_GEPHY_TDR_STATUS9_ENTRY_SIZE];
} PHG_GEPHY_TDR_STATUS9_t;

#define PHG_GEPHY_CP_CON                                                                       ((jl_uint32)0x0024426CU)
#define PHG_GEPHY_CP_CON_NUM                                                                   ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_CON_ENTRY_SIZE                                                                                 (1)
#define PHG_GEPHY_CP_CON_OFFSET_RSVD2                                                                              (16)
#define PHG_GEPHY_CP_CON_OFFSET_RSVD2_WIDTH                                                                        (16)
#define PHG_GEPHY_CP_CON_OFFSET_RSVD1                                                                               (0)
#define PHG_GEPHY_CP_CON_OFFSET_RSVD1_WIDTH                                                                         (6)
#define PHG_GEPHY_CP_CON_OFFSET_COPPER_SPEED_SEL_MSB                                                                (6)
#define PHG_GEPHY_CP_CON_OFFSET_COPPER_SPEED_SEL_MSB_WIDTH                                                          (1)
#define PHG_GEPHY_CP_CON_OFFSET_RSVD0                                                                               (7)
#define PHG_GEPHY_CP_CON_OFFSET_RSVD0_WIDTH                                                                         (1)
#define PHG_GEPHY_CP_CON_OFFSET_COPPER_DUPLEX_MODE                                                                  (8)
#define PHG_GEPHY_CP_CON_OFFSET_COPPER_DUPLEX_MODE_WIDTH                                                            (1)
#define PHG_GEPHY_CP_CON_OFFSET_COPPER_RESTART_AN                                                                   (9)
#define PHG_GEPHY_CP_CON_OFFSET_COPPER_RESTART_AN_WIDTH                                                             (1)
#define PHG_GEPHY_CP_CON_OFFSET_COPPER_ISOLATE_EN                                                                  (10)
#define PHG_GEPHY_CP_CON_OFFSET_COPPER_ISOLATE_EN_WIDTH                                                             (1)
#define PHG_GEPHY_CP_CON_OFFSET_COPPER_POWER_DOWN                                                                  (11)
#define PHG_GEPHY_CP_CON_OFFSET_COPPER_POWER_DOWN_WIDTH                                                             (1)
#define PHG_GEPHY_CP_CON_OFFSET_COPPER_AN_EN                                                                       (12)
#define PHG_GEPHY_CP_CON_OFFSET_COPPER_AN_EN_WIDTH                                                                  (1)
#define PHG_GEPHY_CP_CON_OFFSET_COPPER_SPEED_SEL_LSB                                                               (13)
#define PHG_GEPHY_CP_CON_OFFSET_COPPER_SPEED_SEL_LSB_WIDTH                                                          (1)
#define PHG_GEPHY_CP_CON_OFFSET_COPPER_LPBK_EN                                                                     (14)
#define PHG_GEPHY_CP_CON_OFFSET_COPPER_LPBK_EN_WIDTH                                                                (1)
#define PHG_GEPHY_CP_CON_OFFSET_COPPER_SOFTWARE_RESET                                                              (15)
#define PHG_GEPHY_CP_CON_OFFSET_COPPER_SOFTWARE_RESET_WIDTH                                                         (1)
typedef union PHG_GEPHY_CP_CON_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd1:PHG_GEPHY_CP_CON_OFFSET_RSVD1_WIDTH;                                                              //[ 5: 0]
        jl_uint32 copper_speed_sel_msb:PHG_GEPHY_CP_CON_OFFSET_COPPER_SPEED_SEL_MSB_WIDTH;                                //[ 6: 6]
        jl_uint32 rsvd0:PHG_GEPHY_CP_CON_OFFSET_RSVD0_WIDTH;                                                              //[ 7: 7]
        jl_uint32 copper_duplex_mode:PHG_GEPHY_CP_CON_OFFSET_COPPER_DUPLEX_MODE_WIDTH;                                    //[ 8: 8]
        jl_uint32 copper_restart_an:PHG_GEPHY_CP_CON_OFFSET_COPPER_RESTART_AN_WIDTH;                                      //[ 9: 9]
        jl_uint32 copper_isolate_en:PHG_GEPHY_CP_CON_OFFSET_COPPER_ISOLATE_EN_WIDTH;                                      //[10:10]
        jl_uint32 copper_power_down:PHG_GEPHY_CP_CON_OFFSET_COPPER_POWER_DOWN_WIDTH;                                      //[11:11]
        jl_uint32 copper_an_en:PHG_GEPHY_CP_CON_OFFSET_COPPER_AN_EN_WIDTH;                                                //[12:12]
        jl_uint32 copper_speed_sel_lsb:PHG_GEPHY_CP_CON_OFFSET_COPPER_SPEED_SEL_LSB_WIDTH;                                //[13:13]
        jl_uint32 copper_lpbk_en:PHG_GEPHY_CP_CON_OFFSET_COPPER_LPBK_EN_WIDTH;                                            //[14:14]
        jl_uint32 copper_software_reset:PHG_GEPHY_CP_CON_OFFSET_COPPER_SOFTWARE_RESET_WIDTH;                              //[15:15]
        jl_uint32 rsvd2:PHG_GEPHY_CP_CON_OFFSET_RSVD2_WIDTH;                                                              //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_CON_ENTRY_SIZE];
} PHG_GEPHY_CP_CON_t;

#define PHG_GEPHY_CPSP_CON1                                                                    ((jl_uint32)0x00244270U)
#define PHG_GEPHY_CPSP_CON1_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPSP_CON1_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_CPSP_CON1_OFFSET_RSVD2                                                                           (16)
#define PHG_GEPHY_CPSP_CON1_OFFSET_RSVD2_WIDTH                                                                     (16)
#define PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_DISABLE_JABBER                                                            (0)
#define PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_DISABLE_JABBER_WIDTH                                                      (1)
#define PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_POLARITY_REVERSAL_DISABLE                                                 (1)
#define PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_POLARITY_REVERSAL_DISABLE_WIDTH                                           (1)
#define PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_POWER_DOWN2                                                               (2)
#define PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_POWER_DOWN2_WIDTH                                                         (1)
#define PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_TX_DISABLE                                                                (3)
#define PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_TX_DISABLE_WIDTH                                                          (1)
#define PHG_GEPHY_CPSP_CON1_OFFSET_RSVD1                                                                            (4)
#define PHG_GEPHY_CPSP_CON1_OFFSET_RSVD1_WIDTH                                                                      (1)
#define PHG_GEPHY_CPSP_CON1_OFFSET_MDI_MODE                                                                         (5)
#define PHG_GEPHY_CPSP_CON1_OFFSET_MDI_MODE_WIDTH                                                                   (1)
#define PHG_GEPHY_CPSP_CON1_OFFSET_MDI_MANUAL_CONFIG                                                                (6)
#define PHG_GEPHY_CPSP_CON1_OFFSET_MDI_MANUAL_CONFIG_WIDTH                                                          (1)
#define PHG_GEPHY_CPSP_CON1_OFFSET_RSVD0                                                                            (7)
#define PHG_GEPHY_CPSP_CON1_OFFSET_RSVD0_WIDTH                                                                      (1)
#define PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_ENERGY_DET_CFG                                                            (8)
#define PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_ENERGY_DET_CFG_WIDTH                                                      (2)
#define PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_FORCE_COPPER_LINK_GOOD                                                   (10)
#define PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_FORCE_COPPER_LINK_GOOD_WIDTH                                              (1)
#define PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_DOWNSHIFT_EN                                                             (11)
#define PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_DOWNSHIFT_EN_WIDTH                                                        (1)
#define PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_DOWNSHIFT_CNT                                                            (12)
#define PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_DOWNSHIFT_CNT_WIDTH                                                       (3)
#define PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_DISABLE_LINK_PULSE                                                       (15)
#define PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_DISABLE_LINK_PULSE_WIDTH                                                  (1)
typedef union PHG_GEPHY_CPSP_CON1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 copper_disable_jabber:PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_DISABLE_JABBER_WIDTH;                           //[ 0: 0]
        jl_uint32 copper_polarity_reversal_disable:PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_POLARITY_REVERSAL_DISABLE_WIDTH;     //[ 1: 1]
        jl_uint32 copper_power_down2:PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_POWER_DOWN2_WIDTH;                                 //[ 2: 2]
        jl_uint32 copper_tx_disable:PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_TX_DISABLE_WIDTH;                                   //[ 3: 3]
        jl_uint32 rsvd1:PHG_GEPHY_CPSP_CON1_OFFSET_RSVD1_WIDTH;                                                           //[ 4: 4]
        jl_uint32 mdi_mode:PHG_GEPHY_CPSP_CON1_OFFSET_MDI_MODE_WIDTH;                                                     //[ 5: 5]
        jl_uint32 mdi_manual_config:PHG_GEPHY_CPSP_CON1_OFFSET_MDI_MANUAL_CONFIG_WIDTH;                                   //[ 6: 6]
        jl_uint32 rsvd0:PHG_GEPHY_CPSP_CON1_OFFSET_RSVD0_WIDTH;                                                           //[ 7: 7]
        jl_uint32 copper_energy_det_cfg:PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_ENERGY_DET_CFG_WIDTH;                           //[ 9: 8]
        jl_uint32 copper_force_copper_link_good:PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_FORCE_COPPER_LINK_GOOD_WIDTH;           //[10:10]
        jl_uint32 copper_downshift_en:PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_DOWNSHIFT_EN_WIDTH;                               //[11:11]
        jl_uint32 copper_downshift_cnt:PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_DOWNSHIFT_CNT_WIDTH;                             //[14:12]
        jl_uint32 copper_disable_link_pulse:PHG_GEPHY_CPSP_CON1_OFFSET_COPPER_DISABLE_LINK_PULSE_WIDTH;                   //[15:15]
        jl_uint32 rsvd2:PHG_GEPHY_CPSP_CON1_OFFSET_RSVD2_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPSP_CON1_ENTRY_SIZE];
} PHG_GEPHY_CPSP_CON1_t;

#define PHG_GEPHY_CPSP_ST                                                                      ((jl_uint32)0x00244274U)
#define PHG_GEPHY_CPSP_ST_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPSP_ST_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_CPSP_ST_OFFSET_RSVD3                                                                             (16)
#define PHG_GEPHY_CPSP_ST_OFFSET_RSVD3_WIDTH                                                                       (16)
#define PHG_GEPHY_CPSP_ST_OFFSET_RSVD2                                                                              (0)
#define PHG_GEPHY_CPSP_ST_OFFSET_RSVD2_WIDTH                                                                        (6)
#define PHG_GEPHY_CPSP_ST_OFFSET_COPPER_WORK_MDI_CROSSOVER_STATUS                                                   (6)
#define PHG_GEPHY_CPSP_ST_OFFSET_COPPER_WORK_MDI_CROSSOVER_STATUS_WIDTH                                             (1)
#define PHG_GEPHY_CPSP_ST_OFFSET_RSVD1                                                                              (7)
#define PHG_GEPHY_CPSP_ST_OFFSET_RSVD1_WIDTH                                                                        (3)
#define PHG_GEPHY_CPSP_ST_OFFSET_COPPER_WORK_COPPER_LINK_STATUS                                                    (10)
#define PHG_GEPHY_CPSP_ST_OFFSET_COPPER_WORK_COPPER_LINK_STATUS_WIDTH                                               (1)
#define PHG_GEPHY_CPSP_ST_OFFSET_RSVD0                                                                             (11)
#define PHG_GEPHY_CPSP_ST_OFFSET_RSVD0_WIDTH                                                                        (3)
#define PHG_GEPHY_CPSP_ST_OFFSET_COPPER_WORK_SPEED                                                                 (14)
#define PHG_GEPHY_CPSP_ST_OFFSET_COPPER_WORK_SPEED_WIDTH                                                            (2)
typedef union PHG_GEPHY_CPSP_ST_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd2:PHG_GEPHY_CPSP_ST_OFFSET_RSVD2_WIDTH;                                                             //[ 5: 0]
        jl_uint32 copper_work_mdi_crossover_status:PHG_GEPHY_CPSP_ST_OFFSET_COPPER_WORK_MDI_CROSSOVER_STATUS_WIDTH;       //[ 6: 6]
        jl_uint32 rsvd1:PHG_GEPHY_CPSP_ST_OFFSET_RSVD1_WIDTH;                                                             //[ 9: 7]
        jl_uint32 copper_work_copper_link_status:PHG_GEPHY_CPSP_ST_OFFSET_COPPER_WORK_COPPER_LINK_STATUS_WIDTH;           //[10:10]
        jl_uint32 rsvd0:PHG_GEPHY_CPSP_ST_OFFSET_RSVD0_WIDTH;                                                             //[13:11]
        jl_uint32 copper_work_speed:PHG_GEPHY_CPSP_ST_OFFSET_COPPER_WORK_SPEED_WIDTH;                                     //[15:14]
        jl_uint32 rsvd3:PHG_GEPHY_CPSP_ST_OFFSET_RSVD3_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPSP_ST_ENTRY_SIZE];
} PHG_GEPHY_CPSP_ST_t;

#define PHG_GEPHY_CP_CHKCON                                                                    ((jl_uint32)0x00244278U)
#define PHG_GEPHY_CP_CHKCON_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_CHKCON_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_CP_CHKCON_OFFSET_RSVD1                                                                           (16)
#define PHG_GEPHY_CP_CHKCON_OFFSET_RSVD1_WIDTH                                                                     (16)
#define PHG_GEPHY_CP_CHKCON_OFFSET_GMII_RESERVED1                                                                   (0)
#define PHG_GEPHY_CP_CHKCON_OFFSET_GMII_RESERVED1_WIDTH                                                             (1)
#define PHG_GEPHY_CP_CHKCON_OFFSET_GMII_RESERVED0                                                                   (1)
#define PHG_GEPHY_CP_CHKCON_OFFSET_GMII_RESERVED0_WIDTH                                                             (1)
#define PHG_GEPHY_CP_CHKCON_OFFSET_RSVD0                                                                            (2)
#define PHG_GEPHY_CP_CHKCON_OFFSET_RSVD0_WIDTH                                                                      (6)
#define PHG_GEPHY_CP_CHKCON_OFFSET_GMII_TX_DATA_ISOLATION                                                           (8)
#define PHG_GEPHY_CP_CHKCON_OFFSET_GMII_TX_DATA_ISOLATION_WIDTH                                                     (1)
#define PHG_GEPHY_CP_CHKCON_OFFSET_GMII_TX_EN_ISOLATION                                                             (9)
#define PHG_GEPHY_CP_CHKCON_OFFSET_GMII_TX_EN_ISOLATION_WIDTH                                                       (1)
#define PHG_GEPHY_CP_CHKCON_OFFSET_GMII_TX_ER_ISOLATION                                                            (10)
#define PHG_GEPHY_CP_CHKCON_OFFSET_GMII_TX_ER_ISOLATION_WIDTH                                                       (1)
#define PHG_GEPHY_CP_CHKCON_OFFSET_GMII_RX_DATA_ISOLATION                                                          (11)
#define PHG_GEPHY_CP_CHKCON_OFFSET_GMII_RX_DATA_ISOLATION_WIDTH                                                     (1)
#define PHG_GEPHY_CP_CHKCON_OFFSET_GMII_RX_DV_ISOLATION                                                            (12)
#define PHG_GEPHY_CP_CHKCON_OFFSET_GMII_RX_DV_ISOLATION_WIDTH                                                       (1)
#define PHG_GEPHY_CP_CHKCON_OFFSET_GMII_RX_ER_ISOLATION                                                            (13)
#define PHG_GEPHY_CP_CHKCON_OFFSET_GMII_RX_ER_ISOLATION_WIDTH                                                       (1)
#define PHG_GEPHY_CP_CHKCON_OFFSET_GMII_CRS_ISOLATION                                                              (14)
#define PHG_GEPHY_CP_CHKCON_OFFSET_GMII_CRS_ISOLATION_WIDTH                                                         (1)
#define PHG_GEPHY_CP_CHKCON_OFFSET_GMII_COL_ISOLATION                                                              (15)
#define PHG_GEPHY_CP_CHKCON_OFFSET_GMII_COL_ISOLATION_WIDTH                                                         (1)
typedef union PHG_GEPHY_CP_CHKCON_u {
    struct __attribute__ ((packed)) {
        jl_uint32 gmii_reserved1:PHG_GEPHY_CP_CHKCON_OFFSET_GMII_RESERVED1_WIDTH;                                         //[ 0: 0]
        jl_uint32 gmii_reserved0:PHG_GEPHY_CP_CHKCON_OFFSET_GMII_RESERVED0_WIDTH;                                         //[ 1: 1]
        jl_uint32 rsvd0:PHG_GEPHY_CP_CHKCON_OFFSET_RSVD0_WIDTH;                                                           //[ 7: 2]
        jl_uint32 gmii_tx_data_isolation:PHG_GEPHY_CP_CHKCON_OFFSET_GMII_TX_DATA_ISOLATION_WIDTH;                         //[ 8: 8]
        jl_uint32 gmii_tx_en_isolation:PHG_GEPHY_CP_CHKCON_OFFSET_GMII_TX_EN_ISOLATION_WIDTH;                             //[ 9: 9]
        jl_uint32 gmii_tx_er_isolation:PHG_GEPHY_CP_CHKCON_OFFSET_GMII_TX_ER_ISOLATION_WIDTH;                             //[10:10]
        jl_uint32 gmii_rx_data_isolation:PHG_GEPHY_CP_CHKCON_OFFSET_GMII_RX_DATA_ISOLATION_WIDTH;                         //[11:11]
        jl_uint32 gmii_rx_dv_isolation:PHG_GEPHY_CP_CHKCON_OFFSET_GMII_RX_DV_ISOLATION_WIDTH;                             //[12:12]
        jl_uint32 gmii_rx_er_isolation:PHG_GEPHY_CP_CHKCON_OFFSET_GMII_RX_ER_ISOLATION_WIDTH;                             //[13:13]
        jl_uint32 gmii_crs_isolation:PHG_GEPHY_CP_CHKCON_OFFSET_GMII_CRS_ISOLATION_WIDTH;                                 //[14:14]
        jl_uint32 gmii_col_isolation:PHG_GEPHY_CP_CHKCON_OFFSET_GMII_COL_ISOLATION_WIDTH;                                 //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_CP_CHKCON_OFFSET_RSVD1_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_CHKCON_ENTRY_SIZE];
} PHG_GEPHY_CP_CHKCON_t;

#define PHG_GEPHY_LINK_DISCNT                                                                  ((jl_uint32)0x0024427CU)
#define PHG_GEPHY_LINK_DISCNT_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_LINK_DISCNT_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_LINK_DISCNT_OFFSET_RSVD0                                                                          (8)
#define PHG_GEPHY_LINK_DISCNT_OFFSET_RSVD0_WIDTH                                                                   (24)
#define PHG_GEPHY_LINK_DISCNT_OFFSET_LINK_DISCONNECT_CNT                                                            (0)
#define PHG_GEPHY_LINK_DISCNT_OFFSET_LINK_DISCONNECT_CNT_WIDTH                                                      (8)
typedef union PHG_GEPHY_LINK_DISCNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 link_disconnect_cnt:PHG_GEPHY_LINK_DISCNT_OFFSET_LINK_DISCONNECT_CNT_WIDTH;                             //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_LINK_DISCNT_OFFSET_RSVD0_WIDTH;                                                         //[31: 8]
    } BF;
    jl_uint32 val[PHG_GEPHY_LINK_DISCNT_ENTRY_SIZE];
} PHG_GEPHY_LINK_DISCNT_t;

#define PHG_GEPHY_GEN_CON2                                                                     ((jl_uint32)0x00244280U)
#define PHG_GEPHY_GEN_CON2_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GEN_CON2_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_GEN_CON2_OFFSET_RSVD2                                                                            (16)
#define PHG_GEPHY_GEN_CON2_OFFSET_RSVD2_WIDTH                                                                      (16)
#define PHG_GEPHY_GEN_CON2_OFFSET_GLOBAL_MODE                                                                       (0)
#define PHG_GEPHY_GEN_CON2_OFFSET_GLOBAL_MODE_WIDTH                                                                 (3)
#define PHG_GEPHY_GEN_CON2_OFFSET_RSVD1                                                                             (3)
#define PHG_GEPHY_GEN_CON2_OFFSET_RSVD1_WIDTH                                                                      (10)
#define PHG_GEPHY_GEN_CON2_OFFSET_STATUS_VECTOR_LINK_STATUS_SEL                                                    (13)
#define PHG_GEPHY_GEN_CON2_OFFSET_STATUS_VECTOR_LINK_STATUS_SEL_WIDTH                                               (1)
#define PHG_GEPHY_GEN_CON2_OFFSET_RSVD0                                                                            (14)
#define PHG_GEPHY_GEN_CON2_OFFSET_RSVD0_WIDTH                                                                       (1)
#define PHG_GEPHY_GEN_CON2_OFFSET_SPECIAL_RSTN_6_8                                                                 (15)
#define PHG_GEPHY_GEN_CON2_OFFSET_SPECIAL_RSTN_6_8_WIDTH                                                            (1)
typedef union PHG_GEPHY_GEN_CON2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 global_mode:PHG_GEPHY_GEN_CON2_OFFSET_GLOBAL_MODE_WIDTH;                                                //[ 2: 0]
        jl_uint32 rsvd1:PHG_GEPHY_GEN_CON2_OFFSET_RSVD1_WIDTH;                                                            //[12: 3]
        jl_uint32 status_vector_link_status_sel:PHG_GEPHY_GEN_CON2_OFFSET_STATUS_VECTOR_LINK_STATUS_SEL_WIDTH;            //[13:13]
        jl_uint32 rsvd0:PHG_GEPHY_GEN_CON2_OFFSET_RSVD0_WIDTH;                                                            //[14:14]
        jl_uint32 special_rstn_6_8:PHG_GEPHY_GEN_CON2_OFFSET_SPECIAL_RSTN_6_8_WIDTH;                                      //[15:15]
        jl_uint32 rsvd2:PHG_GEPHY_GEN_CON2_OFFSET_RSVD2_WIDTH;                                                            //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GEN_CON2_ENTRY_SIZE];
} PHG_GEPHY_GEN_CON2_t;

#define PHG_GEPHY_GIEEE_CP_INTMASK                                                             ((jl_uint32)0x00244284U)
#define PHG_GEPHY_GIEEE_CP_INTMASK_NUM                                                         ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GIEEE_CP_INTMASK_ENTRY_SIZE                                                                       (1)
#define PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_RSVD2                                                                    (16)
#define PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_RSVD2_WIDTH                                                              (16)
#define PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_RSVD1                                                                     (0)
#define PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_RSVD1_WIDTH                                                               (7)
#define PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_WOL_EVENT_INT_CPU_MASK                                             (7)
#define PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_WOL_EVENT_INT_CPU_MASK_WIDTH                                       (1)
#define PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_FALSE_CARRIER_INT_CPU_MASK                                         (8)
#define PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_FALSE_CARRIER_INT_CPU_MASK_WIDTH                                   (1)
#define PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_SYMBOL_ERR_INT_CPU_MASK                                            (9)
#define PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_SYMBOL_ERR_INT_CPU_MASK_WIDTH                                      (1)
#define PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_LINK_CHG_INT_CPU_MASK                                             (10)
#define PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_LINK_CHG_INT_CPU_MASK_WIDTH                                        (1)
#define PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_AN_COMPLETE_INT_CPU_MASK                                          (11)
#define PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_AN_COMPLETE_INT_CPU_MASK_WIDTH                                     (1)
#define PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_PAGE_RECEIVED_INT_CPU_MASK                                        (12)
#define PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_PAGE_RECEIVED_INT_CPU_MASK_WIDTH                                   (1)
#define PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_RSVD0                                                                    (13)
#define PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_RSVD0_WIDTH                                                               (2)
#define PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_AN_ERR_INT_CPU_MASK                                               (15)
#define PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_AN_ERR_INT_CPU_MASK_WIDTH                                          (1)
typedef union PHG_GEPHY_GIEEE_CP_INTMASK_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd1:PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_RSVD1_WIDTH;                                                    //[ 6: 0]
        jl_uint32 copper_wol_event_int_cpu_mask:PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_WOL_EVENT_INT_CPU_MASK_WIDTH;    //[ 7: 7]
        jl_uint32 copper_false_carrier_int_cpu_mask:PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_FALSE_CARRIER_INT_CPU_MASK_WIDTH;  //[ 8: 8]
        jl_uint32 copper_symbol_err_int_cpu_mask:PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_SYMBOL_ERR_INT_CPU_MASK_WIDTH;  //[ 9: 9]
        jl_uint32 copper_link_chg_int_cpu_mask:PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_LINK_CHG_INT_CPU_MASK_WIDTH;      //[10:10]
        jl_uint32 copper_an_complete_int_cpu_mask:PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_AN_COMPLETE_INT_CPU_MASK_WIDTH;  //[11:11]
        jl_uint32 copper_page_received_int_cpu_mask:PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_PAGE_RECEIVED_INT_CPU_MASK_WIDTH;  //[12:12]
        jl_uint32 rsvd0:PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_RSVD0_WIDTH;                                                    //[14:13]
        jl_uint32 copper_an_err_int_cpu_mask:PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_COPPER_AN_ERR_INT_CPU_MASK_WIDTH;          //[15:15]
        jl_uint32 rsvd2:PHG_GEPHY_GIEEE_CP_INTMASK_OFFSET_RSVD2_WIDTH;                                                    //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GIEEE_CP_INTMASK_ENTRY_SIZE];
} PHG_GEPHY_GIEEE_CP_INTMASK_t;

#define PHG_GEPHY_MISC_CTRL                                                                    ((jl_uint32)0x00244288U)
#define PHG_GEPHY_MISC_CTRL_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_MISC_CTRL_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_MISC_CTRL_OFFSET_RSVD1                                                                           (16)
#define PHG_GEPHY_MISC_CTRL_OFFSET_RSVD1_WIDTH                                                                     (16)
#define PHG_GEPHY_MISC_CTRL_OFFSET_TRIGGER                                                                          (0)
#define PHG_GEPHY_MISC_CTRL_OFFSET_TRIGGER_WIDTH                                                                    (4)
#define PHG_GEPHY_MISC_CTRL_OFFSET_EXPIRE                                                                           (4)
#define PHG_GEPHY_MISC_CTRL_OFFSET_EXPIRE_WIDTH                                                                     (4)
#define PHG_GEPHY_MISC_CTRL_OFFSET_RSVD0                                                                            (8)
#define PHG_GEPHY_MISC_CTRL_OFFSET_RSVD0_WIDTH                                                                      (2)
#define PHG_GEPHY_MISC_CTRL_OFFSET_GMII_LPBK_ENABLE                                                                (10)
#define PHG_GEPHY_MISC_CTRL_OFFSET_GMII_LPBK_ENABLE_WIDTH                                                           (1)
#define PHG_GEPHY_MISC_CTRL_OFFSET_GMII_CRC_CHK_ENABLE                                                             (11)
#define PHG_GEPHY_MISC_CTRL_OFFSET_GMII_CRC_CHK_ENABLE_WIDTH                                                        (1)
#define PHG_GEPHY_MISC_CTRL_OFFSET_GMII_SPEED_SEL                                                                  (12)
#define PHG_GEPHY_MISC_CTRL_OFFSET_GMII_SPEED_SEL_WIDTH                                                             (1)
#define PHG_GEPHY_MISC_CTRL_OFFSET_ERR_CNT_CLR                                                                     (13)
#define PHG_GEPHY_MISC_CTRL_OFFSET_ERR_CNT_CLR_WIDTH                                                                (1)
#define PHG_GEPHY_MISC_CTRL_OFFSET_LPBK_TX_CLR                                                                     (14)
#define PHG_GEPHY_MISC_CTRL_OFFSET_LPBK_TX_CLR_WIDTH                                                                (1)
#define PHG_GEPHY_MISC_CTRL_OFFSET_LPBK_RX_CLR                                                                     (15)
#define PHG_GEPHY_MISC_CTRL_OFFSET_LPBK_RX_CLR_WIDTH                                                                (1)
typedef union PHG_GEPHY_MISC_CTRL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 trigger:PHG_GEPHY_MISC_CTRL_OFFSET_TRIGGER_WIDTH;                                                       //[ 3: 0]
        jl_uint32 expire:PHG_GEPHY_MISC_CTRL_OFFSET_EXPIRE_WIDTH;                                                         //[ 7: 4]
        jl_uint32 rsvd0:PHG_GEPHY_MISC_CTRL_OFFSET_RSVD0_WIDTH;                                                           //[ 9: 8]
        jl_uint32 gmii_lpbk_enable:PHG_GEPHY_MISC_CTRL_OFFSET_GMII_LPBK_ENABLE_WIDTH;                                     //[10:10]
        jl_uint32 gmii_crc_chk_enable:PHG_GEPHY_MISC_CTRL_OFFSET_GMII_CRC_CHK_ENABLE_WIDTH;                               //[11:11]
        jl_uint32 gmii_speed_sel:PHG_GEPHY_MISC_CTRL_OFFSET_GMII_SPEED_SEL_WIDTH;                                         //[12:12]
        jl_uint32 err_cnt_clr:PHG_GEPHY_MISC_CTRL_OFFSET_ERR_CNT_CLR_WIDTH;                                               //[13:13]
        jl_uint32 lpbk_tx_clr:PHG_GEPHY_MISC_CTRL_OFFSET_LPBK_TX_CLR_WIDTH;                                               //[14:14]
        jl_uint32 lpbk_rx_clr:PHG_GEPHY_MISC_CTRL_OFFSET_LPBK_RX_CLR_WIDTH;                                               //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_MISC_CTRL_OFFSET_RSVD1_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_MISC_CTRL_ENTRY_SIZE];
} PHG_GEPHY_MISC_CTRL_t;

#define PHG_GEPHY_ERR_STATUS                                                                   ((jl_uint32)0x0024428CU)
#define PHG_GEPHY_ERR_STATUS_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ERR_STATUS_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_ERR_STATUS_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_ERR_STATUS_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_ERR_STATUS_OFFSET_TOP_SFD_ERR_CNT                                                                 (0)
#define PHG_GEPHY_ERR_STATUS_OFFSET_TOP_SFD_ERR_CNT_WIDTH                                                           (8)
#define PHG_GEPHY_ERR_STATUS_OFFSET_TOP_CRC_ERR_CNT                                                                 (8)
#define PHG_GEPHY_ERR_STATUS_OFFSET_TOP_CRC_ERR_CNT_WIDTH                                                           (8)
typedef union PHG_GEPHY_ERR_STATUS_u {
    struct __attribute__ ((packed)) {
        jl_uint32 top_sfd_err_cnt:PHG_GEPHY_ERR_STATUS_OFFSET_TOP_SFD_ERR_CNT_WIDTH;                                      //[ 7: 0]
        jl_uint32 top_crc_err_cnt:PHG_GEPHY_ERR_STATUS_OFFSET_TOP_CRC_ERR_CNT_WIDTH;                                      //[15: 8]
        jl_uint32 rsvd0:PHG_GEPHY_ERR_STATUS_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ERR_STATUS_ENTRY_SIZE];
} PHG_GEPHY_ERR_STATUS_t;

#define PHG_GEPHY_LPBK_THRE                                                                    ((jl_uint32)0x00244290U)
#define PHG_GEPHY_LPBK_THRE_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_LPBK_THRE_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_LPBK_THRE_OFFSET_RSVD0                                                                           (12)
#define PHG_GEPHY_LPBK_THRE_OFFSET_RSVD0_WIDTH                                                                     (20)
#define PHG_GEPHY_LPBK_THRE_OFFSET_LPBK_RTHR                                                                        (0)
#define PHG_GEPHY_LPBK_THRE_OFFSET_LPBK_RTHR_WIDTH                                                                  (6)
#define PHG_GEPHY_LPBK_THRE_OFFSET_LPBK_WTHR                                                                        (6)
#define PHG_GEPHY_LPBK_THRE_OFFSET_LPBK_WTHR_WIDTH                                                                  (6)
typedef union PHG_GEPHY_LPBK_THRE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 lpbk_rthr:PHG_GEPHY_LPBK_THRE_OFFSET_LPBK_RTHR_WIDTH;                                                   //[ 5: 0]
        jl_uint32 lpbk_wthr:PHG_GEPHY_LPBK_THRE_OFFSET_LPBK_WTHR_WIDTH;                                                   //[11: 6]
        jl_uint32 rsvd0:PHG_GEPHY_LPBK_THRE_OFFSET_RSVD0_WIDTH;                                                           //[31:12]
    } BF;
    jl_uint32 val[PHG_GEPHY_LPBK_THRE_ENTRY_SIZE];
} PHG_GEPHY_LPBK_THRE_t;

#define PHG_GEPHY_CPPCS_ST                                                                     ((jl_uint32)0x00244294U)
#define PHG_GEPHY_CPPCS_ST_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPPCS_ST_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_CPPCS_ST_OFFSET_RSVD4                                                                            (15)
#define PHG_GEPHY_CPPCS_ST_OFFSET_RSVD4_WIDTH                                                                      (17)
#define PHG_GEPHY_CPPCS_ST_OFFSET_GLOBAL_INTN                                                                       (0)
#define PHG_GEPHY_CPPCS_ST_OFFSET_GLOBAL_INTN_WIDTH                                                                 (1)
#define PHG_GEPHY_CPPCS_ST_OFFSET_RSVD3                                                                             (1)
#define PHG_GEPHY_CPPCS_ST_OFFSET_RSVD3_WIDTH                                                                       (1)
#define PHG_GEPHY_CPPCS_ST_OFFSET_PCS_RX_LINK_STATUS                                                                (2)
#define PHG_GEPHY_CPPCS_ST_OFFSET_PCS_RX_LINK_STATUS_WIDTH                                                          (1)
#define PHG_GEPHY_CPPCS_ST_OFFSET_RSVD2                                                                             (3)
#define PHG_GEPHY_CPPCS_ST_OFFSET_RSVD2_WIDTH                                                                       (1)
#define PHG_GEPHY_CPPCS_ST_OFFSET_ADC_IS_SIGN                                                                       (4)
#define PHG_GEPHY_CPPCS_ST_OFFSET_ADC_IS_SIGN_WIDTH                                                                 (1)
#define PHG_GEPHY_CPPCS_ST_OFFSET_DAC_IS_SIGN                                                                       (5)
#define PHG_GEPHY_CPPCS_ST_OFFSET_DAC_IS_SIGN_WIDTH                                                                 (1)
#define PHG_GEPHY_CPPCS_ST_OFFSET_RSVD1                                                                             (6)
#define PHG_GEPHY_CPPCS_ST_OFFSET_RSVD1_WIDTH                                                                       (4)
#define PHG_GEPHY_CPPCS_ST_OFFSET_CLK_STOPPABLE_DURING_LPI                                                         (10)
#define PHG_GEPHY_CPPCS_ST_OFFSET_CLK_STOPPABLE_DURING_LPI_WIDTH                                                    (1)
#define PHG_GEPHY_CPPCS_ST_OFFSET_RSVD0                                                                            (11)
#define PHG_GEPHY_CPPCS_ST_OFFSET_RSVD0_WIDTH                                                                       (3)
#define PHG_GEPHY_CPPCS_ST_OFFSET_COPPER_LINE_LPBK                                                                 (14)
#define PHG_GEPHY_CPPCS_ST_OFFSET_COPPER_LINE_LPBK_WIDTH                                                            (1)
typedef union PHG_GEPHY_CPPCS_ST_u {
    struct __attribute__ ((packed)) {
        jl_uint32 global_intn:PHG_GEPHY_CPPCS_ST_OFFSET_GLOBAL_INTN_WIDTH;                                                //[ 0: 0]
        jl_uint32 rsvd3:PHG_GEPHY_CPPCS_ST_OFFSET_RSVD3_WIDTH;                                                            //[ 1: 1]
        jl_uint32 pcs_rx_link_status:PHG_GEPHY_CPPCS_ST_OFFSET_PCS_RX_LINK_STATUS_WIDTH;                                  //[ 2: 2]
        jl_uint32 rsvd2:PHG_GEPHY_CPPCS_ST_OFFSET_RSVD2_WIDTH;                                                            //[ 3: 3]
        jl_uint32 adc_is_sign:PHG_GEPHY_CPPCS_ST_OFFSET_ADC_IS_SIGN_WIDTH;                                                //[ 4: 4]
        jl_uint32 dac_is_sign:PHG_GEPHY_CPPCS_ST_OFFSET_DAC_IS_SIGN_WIDTH;                                                //[ 5: 5]
        jl_uint32 rsvd1:PHG_GEPHY_CPPCS_ST_OFFSET_RSVD1_WIDTH;                                                            //[ 9: 6]
        jl_uint32 clk_stoppable_during_lpi:PHG_GEPHY_CPPCS_ST_OFFSET_CLK_STOPPABLE_DURING_LPI_WIDTH;                      //[10:10]
        jl_uint32 rsvd0:PHG_GEPHY_CPPCS_ST_OFFSET_RSVD0_WIDTH;                                                            //[13:11]
        jl_uint32 copper_line_lpbk:PHG_GEPHY_CPPCS_ST_OFFSET_COPPER_LINE_LPBK_WIDTH;                                      //[14:14]
        jl_uint32 rsvd4:PHG_GEPHY_CPPCS_ST_OFFSET_RSVD4_WIDTH;                                                            //[31:15]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPPCS_ST_ENTRY_SIZE];
} PHG_GEPHY_CPPCS_ST_t;

#define PHG_GEPHY_DIG_RSVD6                                                                    ((jl_uint32)0x00244298U)
#define PHG_GEPHY_DIG_RSVD6_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DIG_RSVD6_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_RSVD2                                                                           (16)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_RSVD2_WIDTH                                                                     (16)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_RGMII_RX_CLK_I                                                               (0)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_RGMII_RX_CLK_I_WIDTH                                                         (1)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_DIG_RSVD6_1                                                                      (1)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_DIG_RSVD6_1_WIDTH                                                                (3)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_TX_RGMII_WFULL_GATE_EN                                                       (4)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_TX_RGMII_WFULL_GATE_EN_WIDTH                                                 (1)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_TX_RGMII_REMPTY_GATE_EN                                                      (5)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_TX_RGMII_REMPTY_GATE_EN_WIDTH                                                (1)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_TX_RGMII_REMPTY                                                              (6)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_TX_RGMII_REMPTY_WIDTH                                                        (1)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_TX_RGMII_WFULL                                                               (7)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_TX_RGMII_WFULL_WIDTH                                                         (1)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_RGMII_TXFIFO_ENH                                                             (8)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_RGMII_TXFIFO_ENH_WIDTH                                                       (1)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_RGMII_RDFIFO_ADDR_ENH                                                        (9)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_RGMII_RDFIFO_ADDR_ENH_WIDTH                                                  (1)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_RSVD1                                                                           (10)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_RSVD1_WIDTH                                                                      (1)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_RGMII_RX_ENH1                                                               (11)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_RGMII_RX_ENH1_WIDTH                                                          (1)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_RSVD0                                                                           (12)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_RSVD0_WIDTH                                                                      (3)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_PKG_MODE                                                                    (15)
#define PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_PKG_MODE_WIDTH                                                               (1)
typedef union PHG_GEPHY_DIG_RSVD6_u {
    struct __attribute__ ((packed)) {
        jl_uint32 eco_rgmii_rx_clk_i:PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_RGMII_RX_CLK_I_WIDTH;                                 //[ 0: 0]
        jl_uint32 dig_rsvd6_1:PHG_GEPHY_DIG_RSVD6_OFFSET_DIG_RSVD6_1_WIDTH;                                               //[ 3: 1]
        jl_uint32 eco_tx_rgmii_wfull_gate_en:PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_TX_RGMII_WFULL_GATE_EN_WIDTH;                 //[ 4: 4]
        jl_uint32 eco_tx_rgmii_rempty_gate_en:PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_TX_RGMII_REMPTY_GATE_EN_WIDTH;               //[ 5: 5]
        jl_uint32 eco_tx_rgmii_rempty:PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_TX_RGMII_REMPTY_WIDTH;                               //[ 6: 6]
        jl_uint32 eco_tx_rgmii_wfull:PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_TX_RGMII_WFULL_WIDTH;                                 //[ 7: 7]
        jl_uint32 eco_rgmii_txfifo_enh:PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_RGMII_TXFIFO_ENH_WIDTH;                             //[ 8: 8]
        jl_uint32 eco_rgmii_rdfifo_addr_enh:PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_RGMII_RDFIFO_ADDR_ENH_WIDTH;                   //[ 9: 9]
        jl_uint32 rsvd1:PHG_GEPHY_DIG_RSVD6_OFFSET_RSVD1_WIDTH;                                                           //[10:10]
        jl_uint32 eco_rgmii_rx_enh1:PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_RGMII_RX_ENH1_WIDTH;                                   //[11:11]
        jl_uint32 rsvd0:PHG_GEPHY_DIG_RSVD6_OFFSET_RSVD0_WIDTH;                                                           //[14:12]
        jl_uint32 eco_pkg_mode:PHG_GEPHY_DIG_RSVD6_OFFSET_ECO_PKG_MODE_WIDTH;                                             //[15:15]
        jl_uint32 rsvd2:PHG_GEPHY_DIG_RSVD6_OFFSET_RSVD2_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DIG_RSVD6_ENTRY_SIZE];
} PHG_GEPHY_DIG_RSVD6_t;

#define PHG_GEPHY_DIG_RSVD7                                                                    ((jl_uint32)0x0024429CU)
#define PHG_GEPHY_DIG_RSVD7_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DIG_RSVD7_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DIG_RSVD7_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_DIG_RSVD7_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_DIG_RSVD7_OFFSET_ECO_PROXY_BUS_RDATA                                                              (0)
#define PHG_GEPHY_DIG_RSVD7_OFFSET_ECO_PROXY_BUS_RDATA_WIDTH                                                       (16)
typedef union PHG_GEPHY_DIG_RSVD7_u {
    struct __attribute__ ((packed)) {
        jl_uint32 eco_proxy_bus_rdata:PHG_GEPHY_DIG_RSVD7_OFFSET_ECO_PROXY_BUS_RDATA_WIDTH;                               //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DIG_RSVD7_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DIG_RSVD7_ENTRY_SIZE];
} PHG_GEPHY_DIG_RSVD7_t;

#define PHG_GEPHY_CLKCFG0                                                                      ((jl_uint32)0x002442A0U)
#define PHG_GEPHY_CLKCFG0_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CLKCFG0_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_CLKCFG0_OFFSET_RSVD3                                                                             (16)
#define PHG_GEPHY_CLKCFG0_OFFSET_RSVD3_WIDTH                                                                       (16)
#define PHG_GEPHY_CLKCFG0_OFFSET_PCS_FW_RSTN                                                                        (0)
#define PHG_GEPHY_CLKCFG0_OFFSET_PCS_FW_RSTN_WIDTH                                                                  (1)
#define PHG_GEPHY_CLKCFG0_OFFSET_RSVD2                                                                              (1)
#define PHG_GEPHY_CLKCFG0_OFFSET_RSVD2_WIDTH                                                                        (1)
#define PHG_GEPHY_CLKCFG0_OFFSET_PI_RESETB_SSC                                                                      (2)
#define PHG_GEPHY_CLKCFG0_OFFSET_PI_RESETB_SSC_WIDTH                                                                (1)
#define PHG_GEPHY_CLKCFG0_OFFSET_RSVD1                                                                              (3)
#define PHG_GEPHY_CLKCFG0_OFFSET_RSVD1_WIDTH                                                                        (2)
#define PHG_GEPHY_CLKCFG0_OFFSET_PI_RESETB_SG                                                                       (5)
#define PHG_GEPHY_CLKCFG0_OFFSET_PI_RESETB_SG_WIDTH                                                                 (1)
#define PHG_GEPHY_CLKCFG0_OFFSET_PI_RSTN_TOP_A                                                                      (6)
#define PHG_GEPHY_CLKCFG0_OFFSET_PI_RSTN_TOP_A_WIDTH                                                                (1)
#define PHG_GEPHY_CLKCFG0_OFFSET_PI_RSTN_TOP_B                                                                      (7)
#define PHG_GEPHY_CLKCFG0_OFFSET_PI_RSTN_TOP_B_WIDTH                                                                (1)
#define PHG_GEPHY_CLKCFG0_OFFSET_PI_RSTN_TOP_C                                                                      (8)
#define PHG_GEPHY_CLKCFG0_OFFSET_PI_RSTN_TOP_C_WIDTH                                                                (1)
#define PHG_GEPHY_CLKCFG0_OFFSET_PI_RSTN_TOP_D                                                                      (9)
#define PHG_GEPHY_CLKCFG0_OFFSET_PI_RSTN_TOP_D_WIDTH                                                                (1)
#define PHG_GEPHY_CLKCFG0_OFFSET_PI_RSTN_TOP_SEL                                                                   (10)
#define PHG_GEPHY_CLKCFG0_OFFSET_PI_RSTN_TOP_SEL_WIDTH                                                              (1)
#define PHG_GEPHY_CLKCFG0_OFFSET_PI_RESETB_SSC_TOP_SEL                                                             (11)
#define PHG_GEPHY_CLKCFG0_OFFSET_PI_RESETB_SSC_TOP_SEL_WIDTH                                                        (1)
#define PHG_GEPHY_CLKCFG0_OFFSET_RSVD0                                                                             (12)
#define PHG_GEPHY_CLKCFG0_OFFSET_RSVD0_WIDTH                                                                        (3)
#define PHG_GEPHY_CLKCFG0_OFFSET_RF_SW_RSTB                                                                        (15)
#define PHG_GEPHY_CLKCFG0_OFFSET_RF_SW_RSTB_WIDTH                                                                   (1)
typedef union PHG_GEPHY_CLKCFG0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 pcs_fw_rstn:PHG_GEPHY_CLKCFG0_OFFSET_PCS_FW_RSTN_WIDTH;                                                 //[ 0: 0]
        jl_uint32 rsvd2:PHG_GEPHY_CLKCFG0_OFFSET_RSVD2_WIDTH;                                                             //[ 1: 1]
        jl_uint32 pi_resetb_ssc:PHG_GEPHY_CLKCFG0_OFFSET_PI_RESETB_SSC_WIDTH;                                             //[ 2: 2]
        jl_uint32 rsvd1:PHG_GEPHY_CLKCFG0_OFFSET_RSVD1_WIDTH;                                                             //[ 4: 3]
        jl_uint32 pi_resetb_sg:PHG_GEPHY_CLKCFG0_OFFSET_PI_RESETB_SG_WIDTH;                                               //[ 5: 5]
        jl_uint32 pi_rstn_top_a:PHG_GEPHY_CLKCFG0_OFFSET_PI_RSTN_TOP_A_WIDTH;                                             //[ 6: 6]
        jl_uint32 pi_rstn_top_b:PHG_GEPHY_CLKCFG0_OFFSET_PI_RSTN_TOP_B_WIDTH;                                             //[ 7: 7]
        jl_uint32 pi_rstn_top_c:PHG_GEPHY_CLKCFG0_OFFSET_PI_RSTN_TOP_C_WIDTH;                                             //[ 8: 8]
        jl_uint32 pi_rstn_top_d:PHG_GEPHY_CLKCFG0_OFFSET_PI_RSTN_TOP_D_WIDTH;                                             //[ 9: 9]
        jl_uint32 pi_rstn_top_sel:PHG_GEPHY_CLKCFG0_OFFSET_PI_RSTN_TOP_SEL_WIDTH;                                         //[10:10]
        jl_uint32 pi_resetb_ssc_top_sel:PHG_GEPHY_CLKCFG0_OFFSET_PI_RESETB_SSC_TOP_SEL_WIDTH;                             //[11:11]
        jl_uint32 rsvd0:PHG_GEPHY_CLKCFG0_OFFSET_RSVD0_WIDTH;                                                             //[14:12]
        jl_uint32 rf_sw_rstb:PHG_GEPHY_CLKCFG0_OFFSET_RF_SW_RSTB_WIDTH;                                                   //[15:15]
        jl_uint32 rsvd3:PHG_GEPHY_CLKCFG0_OFFSET_RSVD3_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CLKCFG0_ENTRY_SIZE];
} PHG_GEPHY_CLKCFG0_t;

#define PHG_GEPHY_PLLST                                                                        ((jl_uint32)0x002442A4U)
#define PHG_GEPHY_PLLST_NUM                                                                    ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PLLST_ENTRY_SIZE                                                                                  (1)
#define PHG_GEPHY_PLLST_OFFSET_RSVD1                                                                               (16)
#define PHG_GEPHY_PLLST_OFFSET_RSVD1_WIDTH                                                                         (16)
#define PHG_GEPHY_PLLST_OFFSET_PLL_CAL_DONE                                                                         (0)
#define PHG_GEPHY_PLLST_OFFSET_PLL_CAL_DONE_WIDTH                                                                   (1)
#define PHG_GEPHY_PLLST_OFFSET_RSVD0                                                                                (1)
#define PHG_GEPHY_PLLST_OFFSET_RSVD0_WIDTH                                                                         (14)
#define PHG_GEPHY_PLLST_OFFSET_HANDSHAKE_RW_SYNC_EN                                                                (15)
#define PHG_GEPHY_PLLST_OFFSET_HANDSHAKE_RW_SYNC_EN_WIDTH                                                           (1)
typedef union PHG_GEPHY_PLLST_u {
    struct __attribute__ ((packed)) {
        jl_uint32 pll_cal_done:PHG_GEPHY_PLLST_OFFSET_PLL_CAL_DONE_WIDTH;                                                 //[ 0: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PLLST_OFFSET_RSVD0_WIDTH;                                                               //[14: 1]
        jl_uint32 handshake_rw_sync_en:PHG_GEPHY_PLLST_OFFSET_HANDSHAKE_RW_SYNC_EN_WIDTH;                                 //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_PLLST_OFFSET_RSVD1_WIDTH;                                                               //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PLLST_ENTRY_SIZE];
} PHG_GEPHY_PLLST_t;

#define PHG_GEPHY_ANALOG_CFG                                                                   ((jl_uint32)0x002442A8U)
#define PHG_GEPHY_ANALOG_CFG_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANALOG_CFG_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_ANALOG_CFG_OFFSET_RSVD0                                                                           (1)
#define PHG_GEPHY_ANALOG_CFG_OFFSET_RSVD0_WIDTH                                                                    (31)
#define PHG_GEPHY_ANALOG_CFG_OFFSET_ANA_RANDOM_OUT                                                                  (0)
#define PHG_GEPHY_ANALOG_CFG_OFFSET_ANA_RANDOM_OUT_WIDTH                                                            (1)
typedef union PHG_GEPHY_ANALOG_CFG_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ana_random_out:PHG_GEPHY_ANALOG_CFG_OFFSET_ANA_RANDOM_OUT_WIDTH;                                        //[ 0: 0]
        jl_uint32 rsvd0:PHG_GEPHY_ANALOG_CFG_OFFSET_RSVD0_WIDTH;                                                          //[31: 1]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANALOG_CFG_ENTRY_SIZE];
} PHG_GEPHY_ANALOG_CFG_t;

#define PHG_GEPHY_BASE1000T_PMA_MMD_CTRL                                                       ((jl_uint32)0x002442ACU)
#define PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_NUM                                                   ((jl_uint32)0x00000001U)
#define PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_ENTRY_SIZE                                                                 (1)
#define PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_OFFSET_RSVD1                                                              (16)
#define PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_OFFSET_RSVD1_WIDTH                                                        (16)
#define PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_OFFSET_BASE1000T_PMA_ADDR                                                  (0)
#define PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_OFFSET_BASE1000T_PMA_ADDR_WIDTH                                           (12)
#define PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_OFFSET_RSVD0                                                              (12)
#define PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_OFFSET_RSVD0_WIDTH                                                         (1)
#define PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_OFFSET_BASE1000T_PMA_READY                                                (13)
#define PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_OFFSET_BASE1000T_PMA_READY_WIDTH                                           (1)
#define PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_OFFSET_BASE1000T_PMA_WE                                                   (14)
#define PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_OFFSET_BASE1000T_PMA_WE_WIDTH                                              (1)
#define PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_OFFSET_BASE1000T_PMA_START                                                (15)
#define PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_OFFSET_BASE1000T_PMA_START_WIDTH                                           (1)
typedef union PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 base1000t_pma_addr:PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_OFFSET_BASE1000T_PMA_ADDR_WIDTH;                    //[11: 0]
        jl_uint32 rsvd0:PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_OFFSET_RSVD0_WIDTH;                                              //[12:12]
        jl_uint32 base1000t_pma_ready:PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_OFFSET_BASE1000T_PMA_READY_WIDTH;                  //[13:13]
        jl_uint32 base1000t_pma_we:PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_OFFSET_BASE1000T_PMA_WE_WIDTH;                        //[14:14]
        jl_uint32 base1000t_pma_start:PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_OFFSET_BASE1000T_PMA_START_WIDTH;                  //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_OFFSET_RSVD1_WIDTH;                                              //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_ENTRY_SIZE];
} PHG_GEPHY_BASE1000T_PMA_MMD_CTRL_t;

#define PHG_GEPHY_BASE1000T_PMA_MMD_WDATA                                                      ((jl_uint32)0x002442B0U)
#define PHG_GEPHY_BASE1000T_PMA_MMD_WDATA_NUM                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_BASE1000T_PMA_MMD_WDATA_ENTRY_SIZE                                                                (1)
#define PHG_GEPHY_BASE1000T_PMA_MMD_WDATA_OFFSET_RSVD0                                                             (16)
#define PHG_GEPHY_BASE1000T_PMA_MMD_WDATA_OFFSET_RSVD0_WIDTH                                                       (16)
#define PHG_GEPHY_BASE1000T_PMA_MMD_WDATA_OFFSET_BASE1000T_PMA_WDATA                                                (0)
#define PHG_GEPHY_BASE1000T_PMA_MMD_WDATA_OFFSET_BASE1000T_PMA_WDATA_WIDTH                                         (16)
typedef union PHG_GEPHY_BASE1000T_PMA_MMD_WDATA_u {
    struct __attribute__ ((packed)) {
        jl_uint32 base1000t_pma_wdata:PHG_GEPHY_BASE1000T_PMA_MMD_WDATA_OFFSET_BASE1000T_PMA_WDATA_WIDTH;                 //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_BASE1000T_PMA_MMD_WDATA_OFFSET_RSVD0_WIDTH;                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_BASE1000T_PMA_MMD_WDATA_ENTRY_SIZE];
} PHG_GEPHY_BASE1000T_PMA_MMD_WDATA_t;

#define PHG_GEPHY_BASE1000T_PMA_MMD_RDATA                                                      ((jl_uint32)0x002442B4U)
#define PHG_GEPHY_BASE1000T_PMA_MMD_RDATA_NUM                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_BASE1000T_PMA_MMD_RDATA_ENTRY_SIZE                                                                (1)
#define PHG_GEPHY_BASE1000T_PMA_MMD_RDATA_OFFSET_RSVD0                                                             (16)
#define PHG_GEPHY_BASE1000T_PMA_MMD_RDATA_OFFSET_RSVD0_WIDTH                                                       (16)
#define PHG_GEPHY_BASE1000T_PMA_MMD_RDATA_OFFSET_BASE1000T_PMA_RDATA                                                (0)
#define PHG_GEPHY_BASE1000T_PMA_MMD_RDATA_OFFSET_BASE1000T_PMA_RDATA_WIDTH                                         (16)
typedef union PHG_GEPHY_BASE1000T_PMA_MMD_RDATA_u {
    struct __attribute__ ((packed)) {
        jl_uint32 base1000t_pma_rdata:PHG_GEPHY_BASE1000T_PMA_MMD_RDATA_OFFSET_BASE1000T_PMA_RDATA_WIDTH;                 //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_BASE1000T_PMA_MMD_RDATA_OFFSET_RSVD0_WIDTH;                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_BASE1000T_PMA_MMD_RDATA_ENTRY_SIZE];
} PHG_GEPHY_BASE1000T_PMA_MMD_RDATA_t;

#define PHG_GEPHY_BASE100T_PMA_MMD_CTRL                                                        ((jl_uint32)0x002442B8U)
#define PHG_GEPHY_BASE100T_PMA_MMD_CTRL_NUM                                                    ((jl_uint32)0x00000001U)
#define PHG_GEPHY_BASE100T_PMA_MMD_CTRL_ENTRY_SIZE                                                                  (1)
#define PHG_GEPHY_BASE100T_PMA_MMD_CTRL_OFFSET_RSVD1                                                               (16)
#define PHG_GEPHY_BASE100T_PMA_MMD_CTRL_OFFSET_RSVD1_WIDTH                                                         (16)
#define PHG_GEPHY_BASE100T_PMA_MMD_CTRL_OFFSET_BASE100T_PMA_ADDR                                                    (0)
#define PHG_GEPHY_BASE100T_PMA_MMD_CTRL_OFFSET_BASE100T_PMA_ADDR_WIDTH                                             (12)
#define PHG_GEPHY_BASE100T_PMA_MMD_CTRL_OFFSET_RSVD0                                                               (12)
#define PHG_GEPHY_BASE100T_PMA_MMD_CTRL_OFFSET_RSVD0_WIDTH                                                          (1)
#define PHG_GEPHY_BASE100T_PMA_MMD_CTRL_OFFSET_BASE100T_PMA_READY                                                  (13)
#define PHG_GEPHY_BASE100T_PMA_MMD_CTRL_OFFSET_BASE100T_PMA_READY_WIDTH                                             (1)
#define PHG_GEPHY_BASE100T_PMA_MMD_CTRL_OFFSET_BASE100T_PMA_WE                                                     (14)
#define PHG_GEPHY_BASE100T_PMA_MMD_CTRL_OFFSET_BASE100T_PMA_WE_WIDTH                                                (1)
#define PHG_GEPHY_BASE100T_PMA_MMD_CTRL_OFFSET_BASE100T_PMA_START                                                  (15)
#define PHG_GEPHY_BASE100T_PMA_MMD_CTRL_OFFSET_BASE100T_PMA_START_WIDTH                                             (1)
typedef union PHG_GEPHY_BASE100T_PMA_MMD_CTRL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 base100t_pma_addr:PHG_GEPHY_BASE100T_PMA_MMD_CTRL_OFFSET_BASE100T_PMA_ADDR_WIDTH;                       //[11: 0]
        jl_uint32 rsvd0:PHG_GEPHY_BASE100T_PMA_MMD_CTRL_OFFSET_RSVD0_WIDTH;                                               //[12:12]
        jl_uint32 base100t_pma_ready:PHG_GEPHY_BASE100T_PMA_MMD_CTRL_OFFSET_BASE100T_PMA_READY_WIDTH;                     //[13:13]
        jl_uint32 base100t_pma_we:PHG_GEPHY_BASE100T_PMA_MMD_CTRL_OFFSET_BASE100T_PMA_WE_WIDTH;                           //[14:14]
        jl_uint32 base100t_pma_start:PHG_GEPHY_BASE100T_PMA_MMD_CTRL_OFFSET_BASE100T_PMA_START_WIDTH;                     //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_BASE100T_PMA_MMD_CTRL_OFFSET_RSVD1_WIDTH;                                               //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_BASE100T_PMA_MMD_CTRL_ENTRY_SIZE];
} PHG_GEPHY_BASE100T_PMA_MMD_CTRL_t;

#define PHG_GEPHY_BASE100T_PMA_MMD_WDATA                                                       ((jl_uint32)0x002442BCU)
#define PHG_GEPHY_BASE100T_PMA_MMD_WDATA_NUM                                                   ((jl_uint32)0x00000001U)
#define PHG_GEPHY_BASE100T_PMA_MMD_WDATA_ENTRY_SIZE                                                                 (1)
#define PHG_GEPHY_BASE100T_PMA_MMD_WDATA_OFFSET_RSVD0                                                              (16)
#define PHG_GEPHY_BASE100T_PMA_MMD_WDATA_OFFSET_RSVD0_WIDTH                                                        (16)
#define PHG_GEPHY_BASE100T_PMA_MMD_WDATA_OFFSET_BASE100T_PMA_WDATA                                                  (0)
#define PHG_GEPHY_BASE100T_PMA_MMD_WDATA_OFFSET_BASE100T_PMA_WDATA_WIDTH                                           (16)
typedef union PHG_GEPHY_BASE100T_PMA_MMD_WDATA_u {
    struct __attribute__ ((packed)) {
        jl_uint32 base100t_pma_wdata:PHG_GEPHY_BASE100T_PMA_MMD_WDATA_OFFSET_BASE100T_PMA_WDATA_WIDTH;                    //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_BASE100T_PMA_MMD_WDATA_OFFSET_RSVD0_WIDTH;                                              //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_BASE100T_PMA_MMD_WDATA_ENTRY_SIZE];
} PHG_GEPHY_BASE100T_PMA_MMD_WDATA_t;

#define PHG_GEPHY_BASE100T_PMA_MMD_RDATA                                                       ((jl_uint32)0x002442C0U)
#define PHG_GEPHY_BASE100T_PMA_MMD_RDATA_NUM                                                   ((jl_uint32)0x00000001U)
#define PHG_GEPHY_BASE100T_PMA_MMD_RDATA_ENTRY_SIZE                                                                 (1)
#define PHG_GEPHY_BASE100T_PMA_MMD_RDATA_OFFSET_RSVD0                                                              (16)
#define PHG_GEPHY_BASE100T_PMA_MMD_RDATA_OFFSET_RSVD0_WIDTH                                                        (16)
#define PHG_GEPHY_BASE100T_PMA_MMD_RDATA_OFFSET_BASE100T_PMA_RDATA                                                  (0)
#define PHG_GEPHY_BASE100T_PMA_MMD_RDATA_OFFSET_BASE100T_PMA_RDATA_WIDTH                                           (16)
typedef union PHG_GEPHY_BASE100T_PMA_MMD_RDATA_u {
    struct __attribute__ ((packed)) {
        jl_uint32 base100t_pma_rdata:PHG_GEPHY_BASE100T_PMA_MMD_RDATA_OFFSET_BASE100T_PMA_RDATA_WIDTH;                    //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_BASE100T_PMA_MMD_RDATA_OFFSET_RSVD0_WIDTH;                                              //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_BASE100T_PMA_MMD_RDATA_ENTRY_SIZE];
} PHG_GEPHY_BASE100T_PMA_MMD_RDATA_t;

#define PHG_GEPHY_RF_TIMEOUT                                                                   ((jl_uint32)0x002442C4U)
#define PHG_GEPHY_RF_TIMEOUT_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_RF_TIMEOUT_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_RF_TIMEOUT_OFFSET_RSVD0                                                                           (8)
#define PHG_GEPHY_RF_TIMEOUT_OFFSET_RSVD0_WIDTH                                                                    (24)
#define PHG_GEPHY_RF_TIMEOUT_OFFSET_RF_TIMEOUT                                                                      (0)
#define PHG_GEPHY_RF_TIMEOUT_OFFSET_RF_TIMEOUT_WIDTH                                                                (8)
typedef union PHG_GEPHY_RF_TIMEOUT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rf_timeout:PHG_GEPHY_RF_TIMEOUT_OFFSET_RF_TIMEOUT_WIDTH;                                                //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_RF_TIMEOUT_OFFSET_RSVD0_WIDTH;                                                          //[31: 8]
    } BF;
    jl_uint32 val[PHG_GEPHY_RF_TIMEOUT_ENTRY_SIZE];
} PHG_GEPHY_RF_TIMEOUT_t;

#define PHG_GEPHY_GEPHY_RSVD0                                                                  ((jl_uint32)0x002442C8U)
#define PHG_GEPHY_GEPHY_RSVD0_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GEPHY_RSVD0_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_GEPHY_RSVD0_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_GEPHY_RSVD0_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_GEPHY_RSVD0_OFFSET_GEPHY_RSVD0                                                                    (0)
#define PHG_GEPHY_GEPHY_RSVD0_OFFSET_GEPHY_RSVD0_WIDTH                                                             (16)
typedef union PHG_GEPHY_GEPHY_RSVD0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 gephy_rsvd0:PHG_GEPHY_GEPHY_RSVD0_OFFSET_GEPHY_RSVD0_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GEPHY_RSVD0_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GEPHY_RSVD0_ENTRY_SIZE];
} PHG_GEPHY_GEPHY_RSVD0_t;

#define PHG_GEPHY_GEPHY_RSVD1                                                                  ((jl_uint32)0x002442CCU)
#define PHG_GEPHY_GEPHY_RSVD1_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GEPHY_RSVD1_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_GEPHY_RSVD1_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_GEPHY_RSVD1_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_GEPHY_RSVD1_OFFSET_GEPHY_RSVD1                                                                    (0)
#define PHG_GEPHY_GEPHY_RSVD1_OFFSET_GEPHY_RSVD1_WIDTH                                                             (16)
typedef union PHG_GEPHY_GEPHY_RSVD1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 gephy_rsvd1:PHG_GEPHY_GEPHY_RSVD1_OFFSET_GEPHY_RSVD1_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GEPHY_RSVD1_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GEPHY_RSVD1_ENTRY_SIZE];
} PHG_GEPHY_GEPHY_RSVD1_t;

#define PHG_GEPHY_GEPHY_RSVD2                                                                  ((jl_uint32)0x002442D0U)
#define PHG_GEPHY_GEPHY_RSVD2_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GEPHY_RSVD2_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_GEPHY_RSVD2_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_GEPHY_RSVD2_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_GEPHY_RSVD2_OFFSET_GEPHY_RSVD2                                                                    (0)
#define PHG_GEPHY_GEPHY_RSVD2_OFFSET_GEPHY_RSVD2_WIDTH                                                             (16)
typedef union PHG_GEPHY_GEPHY_RSVD2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 gephy_rsvd2:PHG_GEPHY_GEPHY_RSVD2_OFFSET_GEPHY_RSVD2_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GEPHY_RSVD2_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GEPHY_RSVD2_ENTRY_SIZE];
} PHG_GEPHY_GEPHY_RSVD2_t;

#define PHG_GEPHY_GEPHY_RSVD3                                                                  ((jl_uint32)0x002442D4U)
#define PHG_GEPHY_GEPHY_RSVD3_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GEPHY_RSVD3_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_GEPHY_RSVD3_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_GEPHY_RSVD3_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_GEPHY_RSVD3_OFFSET_GEPHY_RSVD3                                                                    (0)
#define PHG_GEPHY_GEPHY_RSVD3_OFFSET_GEPHY_RSVD3_WIDTH                                                             (16)
typedef union PHG_GEPHY_GEPHY_RSVD3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 gephy_rsvd3:PHG_GEPHY_GEPHY_RSVD3_OFFSET_GEPHY_RSVD3_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GEPHY_RSVD3_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GEPHY_RSVD3_ENTRY_SIZE];
} PHG_GEPHY_GEPHY_RSVD3_t;

#define PHG_GEPHY_GEPHY_RSVD4                                                                  ((jl_uint32)0x002442D8U)
#define PHG_GEPHY_GEPHY_RSVD4_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GEPHY_RSVD4_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_GEPHY_RSVD4_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_GEPHY_RSVD4_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_GEPHY_RSVD4_OFFSET_GEPHY_RSVD4                                                                    (0)
#define PHG_GEPHY_GEPHY_RSVD4_OFFSET_GEPHY_RSVD4_WIDTH                                                             (16)
typedef union PHG_GEPHY_GEPHY_RSVD4_u {
    struct __attribute__ ((packed)) {
        jl_uint32 gephy_rsvd4:PHG_GEPHY_GEPHY_RSVD4_OFFSET_GEPHY_RSVD4_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GEPHY_RSVD4_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GEPHY_RSVD4_ENTRY_SIZE];
} PHG_GEPHY_GEPHY_RSVD4_t;

#define PHG_GEPHY_GEPHY_RSVD5                                                                  ((jl_uint32)0x002442DCU)
#define PHG_GEPHY_GEPHY_RSVD5_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GEPHY_RSVD5_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_GEPHY_RSVD5_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_GEPHY_RSVD5_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_GEPHY_RSVD5_OFFSET_GEPHY_RSVD5                                                                    (0)
#define PHG_GEPHY_GEPHY_RSVD5_OFFSET_GEPHY_RSVD5_WIDTH                                                             (16)
typedef union PHG_GEPHY_GEPHY_RSVD5_u {
    struct __attribute__ ((packed)) {
        jl_uint32 gephy_rsvd5:PHG_GEPHY_GEPHY_RSVD5_OFFSET_GEPHY_RSVD5_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GEPHY_RSVD5_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GEPHY_RSVD5_ENTRY_SIZE];
} PHG_GEPHY_GEPHY_RSVD5_t;

#define PHG_GEPHY_GEPHY_RSVD6                                                                  ((jl_uint32)0x002442E0U)
#define PHG_GEPHY_GEPHY_RSVD6_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GEPHY_RSVD6_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_GEPHY_RSVD6_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_GEPHY_RSVD6_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_GEPHY_RSVD6_OFFSET_GEPHY_RSVD6                                                                    (0)
#define PHG_GEPHY_GEPHY_RSVD6_OFFSET_GEPHY_RSVD6_WIDTH                                                             (16)
typedef union PHG_GEPHY_GEPHY_RSVD6_u {
    struct __attribute__ ((packed)) {
        jl_uint32 gephy_rsvd6:PHG_GEPHY_GEPHY_RSVD6_OFFSET_GEPHY_RSVD6_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GEPHY_RSVD6_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GEPHY_RSVD6_ENTRY_SIZE];
} PHG_GEPHY_GEPHY_RSVD6_t;

#define PHG_GEPHY_GEPHY_RSVD7                                                                  ((jl_uint32)0x002442E4U)
#define PHG_GEPHY_GEPHY_RSVD7_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GEPHY_RSVD7_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_GEPHY_RSVD7_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_GEPHY_RSVD7_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_GEPHY_RSVD7_OFFSET_GEPHY_RSVD7                                                                    (0)
#define PHG_GEPHY_GEPHY_RSVD7_OFFSET_GEPHY_RSVD7_WIDTH                                                             (16)
typedef union PHG_GEPHY_GEPHY_RSVD7_u {
    struct __attribute__ ((packed)) {
        jl_uint32 gephy_rsvd7:PHG_GEPHY_GEPHY_RSVD7_OFFSET_GEPHY_RSVD7_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GEPHY_RSVD7_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GEPHY_RSVD7_ENTRY_SIZE];
} PHG_GEPHY_GEPHY_RSVD7_t;

#define PHG_GEPHY_GEPHY_RSVD8                                                                  ((jl_uint32)0x002442E8U)
#define PHG_GEPHY_GEPHY_RSVD8_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GEPHY_RSVD8_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_GEPHY_RSVD8_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_GEPHY_RSVD8_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_GEPHY_RSVD8_OFFSET_GEPHY_RSVD8                                                                    (0)
#define PHG_GEPHY_GEPHY_RSVD8_OFFSET_GEPHY_RSVD8_WIDTH                                                             (16)
typedef union PHG_GEPHY_GEPHY_RSVD8_u {
    struct __attribute__ ((packed)) {
        jl_uint32 gephy_rsvd8:PHG_GEPHY_GEPHY_RSVD8_OFFSET_GEPHY_RSVD8_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GEPHY_RSVD8_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GEPHY_RSVD8_ENTRY_SIZE];
} PHG_GEPHY_GEPHY_RSVD8_t;

#define PHG_GEPHY_GEPHY_RSVD9                                                                  ((jl_uint32)0x002442ECU)
#define PHG_GEPHY_GEPHY_RSVD9_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GEPHY_RSVD9_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_GEPHY_RSVD9_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_GEPHY_RSVD9_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_GEPHY_RSVD9_OFFSET_GEPHY_RSVD9                                                                    (0)
#define PHG_GEPHY_GEPHY_RSVD9_OFFSET_GEPHY_RSVD9_WIDTH                                                             (16)
typedef union PHG_GEPHY_GEPHY_RSVD9_u {
    struct __attribute__ ((packed)) {
        jl_uint32 gephy_rsvd9:PHG_GEPHY_GEPHY_RSVD9_OFFSET_GEPHY_RSVD9_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GEPHY_RSVD9_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GEPHY_RSVD9_ENTRY_SIZE];
} PHG_GEPHY_GEPHY_RSVD9_t;

#define PHG_GEPHY_GEPHY_RSVD10                                                                 ((jl_uint32)0x002442F0U)
#define PHG_GEPHY_GEPHY_RSVD10_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GEPHY_RSVD10_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_GEPHY_RSVD10_OFFSET_RSVD0                                                                        (16)
#define PHG_GEPHY_GEPHY_RSVD10_OFFSET_RSVD0_WIDTH                                                                  (16)
#define PHG_GEPHY_GEPHY_RSVD10_OFFSET_GEPHY_RSVD10                                                                  (0)
#define PHG_GEPHY_GEPHY_RSVD10_OFFSET_GEPHY_RSVD10_WIDTH                                                           (16)
typedef union PHG_GEPHY_GEPHY_RSVD10_u {
    struct __attribute__ ((packed)) {
        jl_uint32 gephy_rsvd10:PHG_GEPHY_GEPHY_RSVD10_OFFSET_GEPHY_RSVD10_WIDTH;                                          //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GEPHY_RSVD10_OFFSET_RSVD0_WIDTH;                                                        //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GEPHY_RSVD10_ENTRY_SIZE];
} PHG_GEPHY_GEPHY_RSVD10_t;

#define PHG_GEPHY_GEPHY_RSVD11                                                                 ((jl_uint32)0x002442F4U)
#define PHG_GEPHY_GEPHY_RSVD11_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GEPHY_RSVD11_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_GEPHY_RSVD11_OFFSET_RSVD0                                                                        (16)
#define PHG_GEPHY_GEPHY_RSVD11_OFFSET_RSVD0_WIDTH                                                                  (16)
#define PHG_GEPHY_GEPHY_RSVD11_OFFSET_GEPHY_RSVD11                                                                  (0)
#define PHG_GEPHY_GEPHY_RSVD11_OFFSET_GEPHY_RSVD11_WIDTH                                                           (16)
typedef union PHG_GEPHY_GEPHY_RSVD11_u {
    struct __attribute__ ((packed)) {
        jl_uint32 gephy_rsvd11:PHG_GEPHY_GEPHY_RSVD11_OFFSET_GEPHY_RSVD11_WIDTH;                                          //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GEPHY_RSVD11_OFFSET_RSVD0_WIDTH;                                                        //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GEPHY_RSVD11_ENTRY_SIZE];
} PHG_GEPHY_GEPHY_RSVD11_t;

#define PHG_GEPHY_GEPHY_RSVD12                                                                 ((jl_uint32)0x002442F8U)
#define PHG_GEPHY_GEPHY_RSVD12_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GEPHY_RSVD12_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_GEPHY_RSVD12_OFFSET_RSVD0                                                                        (16)
#define PHG_GEPHY_GEPHY_RSVD12_OFFSET_RSVD0_WIDTH                                                                  (16)
#define PHG_GEPHY_GEPHY_RSVD12_OFFSET_GEPHY_RSVD12                                                                  (0)
#define PHG_GEPHY_GEPHY_RSVD12_OFFSET_GEPHY_RSVD12_WIDTH                                                           (16)
typedef union PHG_GEPHY_GEPHY_RSVD12_u {
    struct __attribute__ ((packed)) {
        jl_uint32 gephy_rsvd12:PHG_GEPHY_GEPHY_RSVD12_OFFSET_GEPHY_RSVD12_WIDTH;                                          //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GEPHY_RSVD12_OFFSET_RSVD0_WIDTH;                                                        //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GEPHY_RSVD12_ENTRY_SIZE];
} PHG_GEPHY_GEPHY_RSVD12_t;

#define PHG_GEPHY_GEPHY_RSVD13                                                                 ((jl_uint32)0x002442FCU)
#define PHG_GEPHY_GEPHY_RSVD13_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GEPHY_RSVD13_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_GEPHY_RSVD13_OFFSET_RSVD0                                                                        (16)
#define PHG_GEPHY_GEPHY_RSVD13_OFFSET_RSVD0_WIDTH                                                                  (16)
#define PHG_GEPHY_GEPHY_RSVD13_OFFSET_GEPHY_RSVD13                                                                  (0)
#define PHG_GEPHY_GEPHY_RSVD13_OFFSET_GEPHY_RSVD13_WIDTH                                                           (16)
typedef union PHG_GEPHY_GEPHY_RSVD13_u {
    struct __attribute__ ((packed)) {
        jl_uint32 gephy_rsvd13:PHG_GEPHY_GEPHY_RSVD13_OFFSET_GEPHY_RSVD13_WIDTH;                                          //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GEPHY_RSVD13_OFFSET_RSVD0_WIDTH;                                                        //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GEPHY_RSVD13_ENTRY_SIZE];
} PHG_GEPHY_GEPHY_RSVD13_t;

#define PHG_GEPHY_GEPHY_RSVD14                                                                 ((jl_uint32)0x00244300U)
#define PHG_GEPHY_GEPHY_RSVD14_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GEPHY_RSVD14_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_GEPHY_RSVD14_OFFSET_RSVD0                                                                        (16)
#define PHG_GEPHY_GEPHY_RSVD14_OFFSET_RSVD0_WIDTH                                                                  (16)
#define PHG_GEPHY_GEPHY_RSVD14_OFFSET_GEPHY_RSVD14                                                                  (0)
#define PHG_GEPHY_GEPHY_RSVD14_OFFSET_GEPHY_RSVD14_WIDTH                                                           (16)
typedef union PHG_GEPHY_GEPHY_RSVD14_u {
    struct __attribute__ ((packed)) {
        jl_uint32 gephy_rsvd14:PHG_GEPHY_GEPHY_RSVD14_OFFSET_GEPHY_RSVD14_WIDTH;                                          //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GEPHY_RSVD14_OFFSET_RSVD0_WIDTH;                                                        //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GEPHY_RSVD14_ENTRY_SIZE];
} PHG_GEPHY_GEPHY_RSVD14_t;

#define PHG_GEPHY_GEPHY_RSVD15                                                                 ((jl_uint32)0x00244304U)
#define PHG_GEPHY_GEPHY_RSVD15_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GEPHY_RSVD15_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_GEPHY_RSVD15_OFFSET_RSVD0                                                                        (16)
#define PHG_GEPHY_GEPHY_RSVD15_OFFSET_RSVD0_WIDTH                                                                  (16)
#define PHG_GEPHY_GEPHY_RSVD15_OFFSET_GEPHY_RSVD15                                                                  (0)
#define PHG_GEPHY_GEPHY_RSVD15_OFFSET_GEPHY_RSVD15_WIDTH                                                           (16)
typedef union PHG_GEPHY_GEPHY_RSVD15_u {
    struct __attribute__ ((packed)) {
        jl_uint32 gephy_rsvd15:PHG_GEPHY_GEPHY_RSVD15_OFFSET_GEPHY_RSVD15_WIDTH;                                          //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GEPHY_RSVD15_OFFSET_RSVD0_WIDTH;                                                        //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GEPHY_RSVD15_ENTRY_SIZE];
} PHG_GEPHY_GEPHY_RSVD15_t;

#define PHG_GEPHY_DC_OFFSET                                                                    ((jl_uint32)0x00244308U)
#define PHG_GEPHY_DC_OFFSET_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DC_OFFSET_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DC_OFFSET_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_DC_OFFSET_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_DC_OFFSET_OFFSET_OFFSET0                                                                          (0)
#define PHG_GEPHY_DC_OFFSET_OFFSET_OFFSET0_WIDTH                                                                    (4)
#define PHG_GEPHY_DC_OFFSET_OFFSET_OFFSET1                                                                          (4)
#define PHG_GEPHY_DC_OFFSET_OFFSET_OFFSET1_WIDTH                                                                    (4)
#define PHG_GEPHY_DC_OFFSET_OFFSET_OFFSET2                                                                          (8)
#define PHG_GEPHY_DC_OFFSET_OFFSET_OFFSET2_WIDTH                                                                    (4)
#define PHG_GEPHY_DC_OFFSET_OFFSET_OFFSET3                                                                         (12)
#define PHG_GEPHY_DC_OFFSET_OFFSET_OFFSET3_WIDTH                                                                    (4)
typedef union PHG_GEPHY_DC_OFFSET_u {
    struct __attribute__ ((packed)) {
        jl_uint32 offset0:PHG_GEPHY_DC_OFFSET_OFFSET_OFFSET0_WIDTH;                                                       //[ 3: 0]
        jl_uint32 offset1:PHG_GEPHY_DC_OFFSET_OFFSET_OFFSET1_WIDTH;                                                       //[ 7: 4]
        jl_uint32 offset2:PHG_GEPHY_DC_OFFSET_OFFSET_OFFSET2_WIDTH;                                                       //[11: 8]
        jl_uint32 offset3:PHG_GEPHY_DC_OFFSET_OFFSET_OFFSET3_WIDTH;                                                       //[15:12]
        jl_uint32 rsvd0:PHG_GEPHY_DC_OFFSET_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DC_OFFSET_ENTRY_SIZE];
} PHG_GEPHY_DC_OFFSET_t;

#define PHG_GEPHY_CP_ST                                                                        ((jl_uint32)0x00244380U)
#define PHG_GEPHY_CP_ST_NUM                                                                    ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_ST_ENTRY_SIZE                                                                                  (1)
#define PHG_GEPHY_CP_ST_OFFSET_RSVD2                                                                               (15)
#define PHG_GEPHY_CP_ST_OFFSET_RSVD2_WIDTH                                                                         (17)
#define PHG_GEPHY_CP_ST_OFFSET_RSVD1                                                                                (0)
#define PHG_GEPHY_CP_ST_OFFSET_RSVD1_WIDTH                                                                          (3)
#define PHG_GEPHY_CP_ST_OFFSET_SKEW_READY                                                                           (3)
#define PHG_GEPHY_CP_ST_OFFSET_SKEW_READY_WIDTH                                                                     (1)
#define PHG_GEPHY_CP_ST_OFFSET_COPPER_ENERGY_DET_STATUS                                                             (4)
#define PHG_GEPHY_CP_ST_OFFSET_COPPER_ENERGY_DET_STATUS_WIDTH                                                       (1)
#define PHG_GEPHY_CP_ST_OFFSET_RSVD0                                                                                (5)
#define PHG_GEPHY_CP_ST_OFFSET_RSVD0_WIDTH                                                                          (9)
#define PHG_GEPHY_CP_ST_OFFSET_SKEW_TIMEOUT_ENH                                                                    (14)
#define PHG_GEPHY_CP_ST_OFFSET_SKEW_TIMEOUT_ENH_WIDTH                                                               (1)
typedef union PHG_GEPHY_CP_ST_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd1:PHG_GEPHY_CP_ST_OFFSET_RSVD1_WIDTH;                                                               //[ 2: 0]
        jl_uint32 skew_ready:PHG_GEPHY_CP_ST_OFFSET_SKEW_READY_WIDTH;                                                     //[ 3: 3]
        jl_uint32 copper_energy_det_status:PHG_GEPHY_CP_ST_OFFSET_COPPER_ENERGY_DET_STATUS_WIDTH;                         //[ 4: 4]
        jl_uint32 rsvd0:PHG_GEPHY_CP_ST_OFFSET_RSVD0_WIDTH;                                                               //[13: 5]
        jl_uint32 skew_timeout_enh:PHG_GEPHY_CP_ST_OFFSET_SKEW_TIMEOUT_ENH_WIDTH;                                         //[14:14]
        jl_uint32 rsvd2:PHG_GEPHY_CP_ST_OFFSET_RSVD2_WIDTH;                                                               //[31:15]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_ST_ENTRY_SIZE];
} PHG_GEPHY_CP_ST_t;

#define PHG_GEPHY_CP_GBCON                                                                     ((jl_uint32)0x00244384U)
#define PHG_GEPHY_CP_GBCON_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_GBCON_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_CP_GBCON_OFFSET_RSVD1                                                                            (16)
#define PHG_GEPHY_CP_GBCON_OFFSET_RSVD1_WIDTH                                                                      (16)
#define PHG_GEPHY_CP_GBCON_OFFSET_COPPER_BASET1000_TEST_MODE5_DAT                                                   (0)
#define PHG_GEPHY_CP_GBCON_OFFSET_COPPER_BASET1000_TEST_MODE5_DAT_WIDTH                                             (3)
#define PHG_GEPHY_CP_GBCON_OFFSET_RSVD0                                                                             (3)
#define PHG_GEPHY_CP_GBCON_OFFSET_RSVD0_WIDTH                                                                       (7)
#define PHG_GEPHY_CP_GBCON_OFFSET_COPPER_ENC_ENH2                                                                  (10)
#define PHG_GEPHY_CP_GBCON_OFFSET_COPPER_ENC_ENH2_WIDTH                                                             (1)
#define PHG_GEPHY_CP_GBCON_OFFSET_COPPER_ENC_ENH1                                                                  (11)
#define PHG_GEPHY_CP_GBCON_OFFSET_COPPER_ENC_ENH1_WIDTH                                                             (1)
#define PHG_GEPHY_CP_GBCON_OFFSET_COPPER_ENC_ENH0                                                                  (12)
#define PHG_GEPHY_CP_GBCON_OFFSET_COPPER_ENC_ENH0_WIDTH                                                             (1)
#define PHG_GEPHY_CP_GBCON_OFFSET_COPPER_BASET1000_TEST_MODE                                                       (13)
#define PHG_GEPHY_CP_GBCON_OFFSET_COPPER_BASET1000_TEST_MODE_WIDTH                                                  (3)
typedef union PHG_GEPHY_CP_GBCON_u {
    struct __attribute__ ((packed)) {
        jl_uint32 copper_baset1000_test_mode5_dat:PHG_GEPHY_CP_GBCON_OFFSET_COPPER_BASET1000_TEST_MODE5_DAT_WIDTH;        //[ 2: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CP_GBCON_OFFSET_RSVD0_WIDTH;                                                            //[ 9: 3]
        jl_uint32 copper_enc_enh2:PHG_GEPHY_CP_GBCON_OFFSET_COPPER_ENC_ENH2_WIDTH;                                        //[10:10]
        jl_uint32 copper_enc_enh1:PHG_GEPHY_CP_GBCON_OFFSET_COPPER_ENC_ENH1_WIDTH;                                        //[11:11]
        jl_uint32 copper_enc_enh0:PHG_GEPHY_CP_GBCON_OFFSET_COPPER_ENC_ENH0_WIDTH;                                        //[12:12]
        jl_uint32 copper_baset1000_test_mode:PHG_GEPHY_CP_GBCON_OFFSET_COPPER_BASET1000_TEST_MODE_WIDTH;                  //[15:13]
        jl_uint32 rsvd1:PHG_GEPHY_CP_GBCON_OFFSET_RSVD1_WIDTH;                                                            //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_GBCON_ENTRY_SIZE];
} PHG_GEPHY_CP_GBCON_t;

#define PHG_GEPHY_CPSP_CON2                                                                    ((jl_uint32)0x00244388U)
#define PHG_GEPHY_CPSP_CON2_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPSP_CON2_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_CPSP_CON2_OFFSET_RSVD0                                                                            (4)
#define PHG_GEPHY_CPSP_CON2_OFFSET_RSVD0_WIDTH                                                                     (28)
#define PHG_GEPHY_CPSP_CON2_OFFSET_COPPER_REVERSE_0_TX_POLARITY                                                     (0)
#define PHG_GEPHY_CPSP_CON2_OFFSET_COPPER_REVERSE_0_TX_POLARITY_WIDTH                                               (1)
#define PHG_GEPHY_CPSP_CON2_OFFSET_COPPER_REVERSE_1_TX_POLARITY                                                     (1)
#define PHG_GEPHY_CPSP_CON2_OFFSET_COPPER_REVERSE_1_TX_POLARITY_WIDTH                                               (1)
#define PHG_GEPHY_CPSP_CON2_OFFSET_COPPER_REVERSE_2_TX_POLARITY                                                     (2)
#define PHG_GEPHY_CPSP_CON2_OFFSET_COPPER_REVERSE_2_TX_POLARITY_WIDTH                                               (1)
#define PHG_GEPHY_CPSP_CON2_OFFSET_COPPER_REVERSE_3_TX_POLARITY                                                     (3)
#define PHG_GEPHY_CPSP_CON2_OFFSET_COPPER_REVERSE_3_TX_POLARITY_WIDTH                                               (1)
typedef union PHG_GEPHY_CPSP_CON2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 copper_reverse_0_tx_polarity:PHG_GEPHY_CPSP_CON2_OFFSET_COPPER_REVERSE_0_TX_POLARITY_WIDTH;             //[ 0: 0]
        jl_uint32 copper_reverse_1_tx_polarity:PHG_GEPHY_CPSP_CON2_OFFSET_COPPER_REVERSE_1_TX_POLARITY_WIDTH;             //[ 1: 1]
        jl_uint32 copper_reverse_2_tx_polarity:PHG_GEPHY_CPSP_CON2_OFFSET_COPPER_REVERSE_2_TX_POLARITY_WIDTH;             //[ 2: 2]
        jl_uint32 copper_reverse_3_tx_polarity:PHG_GEPHY_CPSP_CON2_OFFSET_COPPER_REVERSE_3_TX_POLARITY_WIDTH;             //[ 3: 3]
        jl_uint32 rsvd0:PHG_GEPHY_CPSP_CON2_OFFSET_RSVD0_WIDTH;                                                           //[31: 4]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPSP_CON2_ENTRY_SIZE];
} PHG_GEPHY_CPSP_CON2_t;

#define PHG_GEPHY_CPSP_RXERRCNT                                                                ((jl_uint32)0x0024438CU)
#define PHG_GEPHY_CPSP_RXERRCNT_NUM                                                            ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPSP_RXERRCNT_ENTRY_SIZE                                                                          (1)
#define PHG_GEPHY_CPSP_RXERRCNT_OFFSET_RSVD0                                                                       (16)
#define PHG_GEPHY_CPSP_RXERRCNT_OFFSET_RSVD0_WIDTH                                                                 (16)
#define PHG_GEPHY_CPSP_RXERRCNT_OFFSET_COPPER_RX_ERR_CNT                                                            (0)
#define PHG_GEPHY_CPSP_RXERRCNT_OFFSET_COPPER_RX_ERR_CNT_WIDTH                                                     (16)
typedef union PHG_GEPHY_CPSP_RXERRCNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 copper_rx_err_cnt:PHG_GEPHY_CPSP_RXERRCNT_OFFSET_COPPER_RX_ERR_CNT_WIDTH;                               //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CPSP_RXERRCNT_OFFSET_RSVD0_WIDTH;                                                       //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPSP_RXERRCNT_ENTRY_SIZE];
} PHG_GEPHY_CPSP_RXERRCNT_t;

#define PHG_GEPHY_CPPCS_EEEWAKEERRCNT                                                          ((jl_uint32)0x00244390U)
#define PHG_GEPHY_CPPCS_EEEWAKEERRCNT_NUM                                                      ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPPCS_EEEWAKEERRCNT_ENTRY_SIZE                                                                    (1)
#define PHG_GEPHY_CPPCS_EEEWAKEERRCNT_OFFSET_RSVD0                                                                 (16)
#define PHG_GEPHY_CPPCS_EEEWAKEERRCNT_OFFSET_RSVD0_WIDTH                                                           (16)
#define PHG_GEPHY_CPPCS_EEEWAKEERRCNT_OFFSET_EEE_WAKE_ERR_CNT                                                       (0)
#define PHG_GEPHY_CPPCS_EEEWAKEERRCNT_OFFSET_EEE_WAKE_ERR_CNT_WIDTH                                                (16)
typedef union PHG_GEPHY_CPPCS_EEEWAKEERRCNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 eee_wake_err_cnt:PHG_GEPHY_CPPCS_EEEWAKEERRCNT_OFFSET_EEE_WAKE_ERR_CNT_WIDTH;                           //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CPPCS_EEEWAKEERRCNT_OFFSET_RSVD0_WIDTH;                                                 //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPPCS_EEEWAKEERRCNT_ENTRY_SIZE];
} PHG_GEPHY_CPPCS_EEEWAKEERRCNT_t;

#define PHG_GEPHY_CP_GBSKEW                                                                    ((jl_uint32)0x00244394U)
#define PHG_GEPHY_CP_GBSKEW_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_GBSKEW_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_CP_GBSKEW_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_CP_GBSKEW_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_CP_GBSKEW_OFFSET_LANE_A_PAIR_SKEW                                                                 (0)
#define PHG_GEPHY_CP_GBSKEW_OFFSET_LANE_A_PAIR_SKEW_WIDTH                                                           (4)
#define PHG_GEPHY_CP_GBSKEW_OFFSET_LANE_B_PAIR_SKEW                                                                 (4)
#define PHG_GEPHY_CP_GBSKEW_OFFSET_LANE_B_PAIR_SKEW_WIDTH                                                           (4)
#define PHG_GEPHY_CP_GBSKEW_OFFSET_LANE_C_PAIR_SKEW                                                                 (8)
#define PHG_GEPHY_CP_GBSKEW_OFFSET_LANE_C_PAIR_SKEW_WIDTH                                                           (4)
#define PHG_GEPHY_CP_GBSKEW_OFFSET_LANE_D_PAIR_SKEW                                                                (12)
#define PHG_GEPHY_CP_GBSKEW_OFFSET_LANE_D_PAIR_SKEW_WIDTH                                                           (4)
typedef union PHG_GEPHY_CP_GBSKEW_u {
    struct __attribute__ ((packed)) {
        jl_uint32 lane_a_pair_skew:PHG_GEPHY_CP_GBSKEW_OFFSET_LANE_A_PAIR_SKEW_WIDTH;                                     //[ 3: 0]
        jl_uint32 lane_b_pair_skew:PHG_GEPHY_CP_GBSKEW_OFFSET_LANE_B_PAIR_SKEW_WIDTH;                                     //[ 7: 4]
        jl_uint32 lane_c_pair_skew:PHG_GEPHY_CP_GBSKEW_OFFSET_LANE_C_PAIR_SKEW_WIDTH;                                     //[11: 8]
        jl_uint32 lane_d_pair_skew:PHG_GEPHY_CP_GBSKEW_OFFSET_LANE_D_PAIR_SKEW_WIDTH;                                     //[15:12]
        jl_uint32 rsvd0:PHG_GEPHY_CP_GBSKEW_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_GBSKEW_ENTRY_SIZE];
} PHG_GEPHY_CP_GBSKEW_t;

#define PHG_GEPHY_CP_GBSWAP                                                                    ((jl_uint32)0x00244398U)
#define PHG_GEPHY_CP_GBSWAP_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_GBSWAP_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_RSVD2                                                                           (12)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_RSVD2_WIDTH                                                                     (20)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_LANE_A_POLARITY                                                                  (0)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_LANE_A_POLARITY_WIDTH                                                            (1)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_LANE_B_POLARITY                                                                  (1)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_LANE_B_POLARITY_WIDTH                                                            (1)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_LANE_C_POLARITY                                                                  (2)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_LANE_C_POLARITY_WIDTH                                                            (1)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_LANE_D_POLARITY                                                                  (3)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_LANE_D_POLARITY_WIDTH                                                            (1)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_RSVD1                                                                            (4)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_RSVD1_WIDTH                                                                      (2)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_LANE_PAIR_INFO_DV                                                                (6)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_LANE_PAIR_INFO_DV_WIDTH                                                          (1)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_RSVD0                                                                            (7)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_RSVD0_WIDTH                                                                      (1)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_SKEW_REDUC_ENH                                                                   (8)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_SKEW_REDUC_ENH_WIDTH                                                             (1)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_TX_RDY_ENH                                                                       (9)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_TX_RDY_ENH_WIDTH                                                                 (1)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_SKEW_SW_EN                                                                      (10)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_SKEW_SW_EN_WIDTH                                                                 (1)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_SKEW_SW_VAL                                                                     (11)
#define PHG_GEPHY_CP_GBSWAP_OFFSET_SKEW_SW_VAL_WIDTH                                                                (1)
typedef union PHG_GEPHY_CP_GBSWAP_u {
    struct __attribute__ ((packed)) {
        jl_uint32 lane_a_polarity:PHG_GEPHY_CP_GBSWAP_OFFSET_LANE_A_POLARITY_WIDTH;                                       //[ 0: 0]
        jl_uint32 lane_b_polarity:PHG_GEPHY_CP_GBSWAP_OFFSET_LANE_B_POLARITY_WIDTH;                                       //[ 1: 1]
        jl_uint32 lane_c_polarity:PHG_GEPHY_CP_GBSWAP_OFFSET_LANE_C_POLARITY_WIDTH;                                       //[ 2: 2]
        jl_uint32 lane_d_polarity:PHG_GEPHY_CP_GBSWAP_OFFSET_LANE_D_POLARITY_WIDTH;                                       //[ 3: 3]
        jl_uint32 rsvd1:PHG_GEPHY_CP_GBSWAP_OFFSET_RSVD1_WIDTH;                                                           //[ 5: 4]
        jl_uint32 lane_pair_info_dv:PHG_GEPHY_CP_GBSWAP_OFFSET_LANE_PAIR_INFO_DV_WIDTH;                                   //[ 6: 6]
        jl_uint32 rsvd0:PHG_GEPHY_CP_GBSWAP_OFFSET_RSVD0_WIDTH;                                                           //[ 7: 7]
        jl_uint32 skew_reduc_enh:PHG_GEPHY_CP_GBSWAP_OFFSET_SKEW_REDUC_ENH_WIDTH;                                         //[ 8: 8]
        jl_uint32 tx_rdy_enh:PHG_GEPHY_CP_GBSWAP_OFFSET_TX_RDY_ENH_WIDTH;                                                 //[ 9: 9]
        jl_uint32 skew_sw_en:PHG_GEPHY_CP_GBSWAP_OFFSET_SKEW_SW_EN_WIDTH;                                                 //[10:10]
        jl_uint32 skew_sw_val:PHG_GEPHY_CP_GBSWAP_OFFSET_SKEW_SW_VAL_WIDTH;                                               //[11:11]
        jl_uint32 rsvd2:PHG_GEPHY_CP_GBSWAP_OFFSET_RSVD2_WIDTH;                                                           //[31:12]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_GBSWAP_ENTRY_SIZE];
} PHG_GEPHY_CP_GBSWAP_t;

#define PHG_GEPHY_GCFG6                                                                        ((jl_uint32)0x0024439CU)
#define PHG_GEPHY_GCFG6_NUM                                                                    ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GCFG6_ENTRY_SIZE                                                                                  (1)
#define PHG_GEPHY_GCFG6_OFFSET_RSVD3                                                                               (15)
#define PHG_GEPHY_GCFG6_OFFSET_RSVD3_WIDTH                                                                         (17)
#define PHG_GEPHY_GCFG6_OFFSET_RSVD2                                                                                (0)
#define PHG_GEPHY_GCFG6_OFFSET_RSVD2_WIDTH                                                                          (6)
#define PHG_GEPHY_GCFG6_OFFSET_PMA_DFSE_RDY                                                                         (6)
#define PHG_GEPHY_GCFG6_OFFSET_PMA_DFSE_RDY_WIDTH                                                                   (1)
#define PHG_GEPHY_GCFG6_OFFSET_REM_UPD_ENH                                                                          (7)
#define PHG_GEPHY_GCFG6_OFFSET_REM_UPD_ENH_WIDTH                                                                    (1)
#define PHG_GEPHY_GCFG6_OFFSET_REM_LPI_REQ_ENH                                                                      (8)
#define PHG_GEPHY_GCFG6_OFFSET_REM_LPI_REQ_ENH_WIDTH                                                                (1)
#define PHG_GEPHY_GCFG6_OFFSET_REM_RCVR_STS_ENH                                                                     (9)
#define PHG_GEPHY_GCFG6_OFFSET_REM_RCVR_STS_ENH_WIDTH                                                               (1)
#define PHG_GEPHY_GCFG6_OFFSET_RSVD1                                                                               (10)
#define PHG_GEPHY_GCFG6_OFFSET_RSVD1_WIDTH                                                                          (1)
#define PHG_GEPHY_GCFG6_OFFSET_ECO_PMA_LINK_GOOD_SW                                                                (11)
#define PHG_GEPHY_GCFG6_OFFSET_ECO_PMA_LINK_GOOD_SW_WIDTH                                                           (1)
#define PHG_GEPHY_GCFG6_OFFSET_RSVD0                                                                               (12)
#define PHG_GEPHY_GCFG6_OFFSET_RSVD0_WIDTH                                                                          (1)
#define PHG_GEPHY_GCFG6_OFFSET_ECO_PMA_LINK_GOOD_SEL                                                               (13)
#define PHG_GEPHY_GCFG6_OFFSET_ECO_PMA_LINK_GOOD_SEL_WIDTH                                                          (1)
#define PHG_GEPHY_GCFG6_OFFSET_ECO_CEXT_VER2                                                                       (14)
#define PHG_GEPHY_GCFG6_OFFSET_ECO_CEXT_VER2_WIDTH                                                                  (1)
typedef union PHG_GEPHY_GCFG6_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd2:PHG_GEPHY_GCFG6_OFFSET_RSVD2_WIDTH;                                                               //[ 5: 0]
        jl_uint32 pma_dfse_rdy:PHG_GEPHY_GCFG6_OFFSET_PMA_DFSE_RDY_WIDTH;                                                 //[ 6: 6]
        jl_uint32 rem_upd_enh:PHG_GEPHY_GCFG6_OFFSET_REM_UPD_ENH_WIDTH;                                                   //[ 7: 7]
        jl_uint32 rem_lpi_req_enh:PHG_GEPHY_GCFG6_OFFSET_REM_LPI_REQ_ENH_WIDTH;                                           //[ 8: 8]
        jl_uint32 rem_rcvr_sts_enh:PHG_GEPHY_GCFG6_OFFSET_REM_RCVR_STS_ENH_WIDTH;                                         //[ 9: 9]
        jl_uint32 rsvd1:PHG_GEPHY_GCFG6_OFFSET_RSVD1_WIDTH;                                                               //[10:10]
        jl_uint32 eco_pma_link_good_sw:PHG_GEPHY_GCFG6_OFFSET_ECO_PMA_LINK_GOOD_SW_WIDTH;                                 //[11:11]
        jl_uint32 rsvd0:PHG_GEPHY_GCFG6_OFFSET_RSVD0_WIDTH;                                                               //[12:12]
        jl_uint32 eco_pma_link_good_sel:PHG_GEPHY_GCFG6_OFFSET_ECO_PMA_LINK_GOOD_SEL_WIDTH;                               //[13:13]
        jl_uint32 eco_cext_ver2:PHG_GEPHY_GCFG6_OFFSET_ECO_CEXT_VER2_WIDTH;                                               //[14:14]
        jl_uint32 rsvd3:PHG_GEPHY_GCFG6_OFFSET_RSVD3_WIDTH;                                                               //[31:15]
    } BF;
    jl_uint32 val[PHG_GEPHY_GCFG6_ENTRY_SIZE];
} PHG_GEPHY_GCFG6_t;

#define PHG_GEPHY_GCFG8                                                                        ((jl_uint32)0x002443A0U)
#define PHG_GEPHY_GCFG8_NUM                                                                    ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GCFG8_ENTRY_SIZE                                                                                  (1)
#define PHG_GEPHY_GCFG8_OFFSET_RSVD1                                                                               (13)
#define PHG_GEPHY_GCFG8_OFFSET_RSVD1_WIDTH                                                                         (19)
#define PHG_GEPHY_GCFG8_OFFSET_FORCE_POLARITY_SETTING                                                               (0)
#define PHG_GEPHY_GCFG8_OFFSET_FORCE_POLARITY_SETTING_WIDTH                                                         (4)
#define PHG_GEPHY_GCFG8_OFFSET_FORCE_RX_POLARITY                                                                    (4)
#define PHG_GEPHY_GCFG8_OFFSET_FORCE_RX_POLARITY_WIDTH                                                              (1)
#define PHG_GEPHY_GCFG8_OFFSET_RSVD0                                                                                (5)
#define PHG_GEPHY_GCFG8_OFFSET_RSVD0_WIDTH                                                                          (3)
#define PHG_GEPHY_GCFG8_OFFSET_RX_EXCEPTION_DISABLE                                                                 (8)
#define PHG_GEPHY_GCFG8_OFFSET_RX_EXCEPTION_DISABLE_WIDTH                                                           (1)
#define PHG_GEPHY_GCFG8_OFFSET_PMA_8192_DLY_SETTING                                                                 (9)
#define PHG_GEPHY_GCFG8_OFFSET_PMA_8192_DLY_SETTING_WIDTH                                                           (4)
typedef union PHG_GEPHY_GCFG8_u {
    struct __attribute__ ((packed)) {
        jl_uint32 force_polarity_setting:PHG_GEPHY_GCFG8_OFFSET_FORCE_POLARITY_SETTING_WIDTH;                             //[ 3: 0]
        jl_uint32 force_rx_polarity:PHG_GEPHY_GCFG8_OFFSET_FORCE_RX_POLARITY_WIDTH;                                       //[ 4: 4]
        jl_uint32 rsvd0:PHG_GEPHY_GCFG8_OFFSET_RSVD0_WIDTH;                                                               //[ 7: 5]
        jl_uint32 rx_exception_disable:PHG_GEPHY_GCFG8_OFFSET_RX_EXCEPTION_DISABLE_WIDTH;                                 //[ 8: 8]
        jl_uint32 pma_8192_dly_setting:PHG_GEPHY_GCFG8_OFFSET_PMA_8192_DLY_SETTING_WIDTH;                                 //[12: 9]
        jl_uint32 rsvd1:PHG_GEPHY_GCFG8_OFFSET_RSVD1_WIDTH;                                                               //[31:13]
    } BF;
    jl_uint32 val[PHG_GEPHY_GCFG8_ENTRY_SIZE];
} PHG_GEPHY_GCFG8_t;

#define PHG_GEPHY_PMA_CFG2                                                                     ((jl_uint32)0x002443A4U)
#define PHG_GEPHY_PMA_CFG2_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PMA_CFG2_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_PMA_CFG2_OFFSET_RSVD0                                                                            (16)
#define PHG_GEPHY_PMA_CFG2_OFFSET_RSVD0_WIDTH                                                                      (16)
#define PHG_GEPHY_PMA_CFG2_OFFSET_PMA_8192_CFG                                                                      (0)
#define PHG_GEPHY_PMA_CFG2_OFFSET_PMA_8192_CFG_WIDTH                                                               (16)
typedef union PHG_GEPHY_PMA_CFG2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 pma_8192_cfg:PHG_GEPHY_PMA_CFG2_OFFSET_PMA_8192_CFG_WIDTH;                                              //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PMA_CFG2_OFFSET_RSVD0_WIDTH;                                                            //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PMA_CFG2_ENTRY_SIZE];
} PHG_GEPHY_PMA_CFG2_t;

#define PHG_GEPHY_MDIX_CFG                                                                     ((jl_uint32)0x002443A8U)
#define PHG_GEPHY_MDIX_CFG_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_MDIX_CFG_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_MDIX_CFG_OFFSET_RSVD0                                                                             (4)
#define PHG_GEPHY_MDIX_CFG_OFFSET_RSVD0_WIDTH                                                                      (28)
#define PHG_GEPHY_MDIX_CFG_OFFSET_TX_MIX_EN_CD                                                                      (0)
#define PHG_GEPHY_MDIX_CFG_OFFSET_TX_MIX_EN_CD_WIDTH                                                                (1)
#define PHG_GEPHY_MDIX_CFG_OFFSET_TX_MIX_EN_AB                                                                      (1)
#define PHG_GEPHY_MDIX_CFG_OFFSET_TX_MIX_EN_AB_WIDTH                                                                (1)
#define PHG_GEPHY_MDIX_CFG_OFFSET_RX_MIX_EN_CD                                                                      (2)
#define PHG_GEPHY_MDIX_CFG_OFFSET_RX_MIX_EN_CD_WIDTH                                                                (1)
#define PHG_GEPHY_MDIX_CFG_OFFSET_RX_MIX_EN_AB                                                                      (3)
#define PHG_GEPHY_MDIX_CFG_OFFSET_RX_MIX_EN_AB_WIDTH                                                                (1)
typedef union PHG_GEPHY_MDIX_CFG_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tx_mix_en_cd:PHG_GEPHY_MDIX_CFG_OFFSET_TX_MIX_EN_CD_WIDTH;                                              //[ 0: 0]
        jl_uint32 tx_mix_en_ab:PHG_GEPHY_MDIX_CFG_OFFSET_TX_MIX_EN_AB_WIDTH;                                              //[ 1: 1]
        jl_uint32 rx_mix_en_cd:PHG_GEPHY_MDIX_CFG_OFFSET_RX_MIX_EN_CD_WIDTH;                                              //[ 2: 2]
        jl_uint32 rx_mix_en_ab:PHG_GEPHY_MDIX_CFG_OFFSET_RX_MIX_EN_AB_WIDTH;                                              //[ 3: 3]
        jl_uint32 rsvd0:PHG_GEPHY_MDIX_CFG_OFFSET_RSVD0_WIDTH;                                                            //[31: 4]
    } BF;
    jl_uint32 val[PHG_GEPHY_MDIX_CFG_ENTRY_SIZE];
} PHG_GEPHY_MDIX_CFG_t;

#define PHG_GEPHY_GB_TXSEED                                                                    ((jl_uint32)0x002443ACU)
#define PHG_GEPHY_GB_TXSEED_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GB_TXSEED_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_GB_TXSEED_OFFSET_RSVD1                                                                           (14)
#define PHG_GEPHY_GB_TXSEED_OFFSET_RSVD1_WIDTH                                                                     (18)
#define PHG_GEPHY_GB_TXSEED_OFFSET_TX_INIT_SEED                                                                     (0)
#define PHG_GEPHY_GB_TXSEED_OFFSET_TX_INIT_SEED_WIDTH                                                              (10)
#define PHG_GEPHY_GB_TXSEED_OFFSET_RSVD0                                                                           (10)
#define PHG_GEPHY_GB_TXSEED_OFFSET_RSVD0_WIDTH                                                                      (1)
#define PHG_GEPHY_GB_TXSEED_OFFSET_TX_SCR_LOAD                                                                     (11)
#define PHG_GEPHY_GB_TXSEED_OFFSET_TX_SCR_LOAD_WIDTH                                                                (1)
#define PHG_GEPHY_GB_TXSEED_OFFSET_BASET_LINK_WAY_SEL                                                              (12)
#define PHG_GEPHY_GB_TXSEED_OFFSET_BASET_LINK_WAY_SEL_WIDTH                                                         (2)
typedef union PHG_GEPHY_GB_TXSEED_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tx_init_seed:PHG_GEPHY_GB_TXSEED_OFFSET_TX_INIT_SEED_WIDTH;                                             //[ 9: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GB_TXSEED_OFFSET_RSVD0_WIDTH;                                                           //[10:10]
        jl_uint32 tx_scr_load:PHG_GEPHY_GB_TXSEED_OFFSET_TX_SCR_LOAD_WIDTH;                                               //[11:11]
        jl_uint32 baset_link_way_sel:PHG_GEPHY_GB_TXSEED_OFFSET_BASET_LINK_WAY_SEL_WIDTH;                                 //[13:12]
        jl_uint32 rsvd1:PHG_GEPHY_GB_TXSEED_OFFSET_RSVD1_WIDTH;                                                           //[31:14]
    } BF;
    jl_uint32 val[PHG_GEPHY_GB_TXSEED_ENTRY_SIZE];
} PHG_GEPHY_GB_TXSEED_t;

#define PHG_GEPHY_GB_MAXTM                                                                     ((jl_uint32)0x002443B0U)
#define PHG_GEPHY_GB_MAXTM_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GB_MAXTM_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_GB_MAXTM_OFFSET_RSVD0                                                                            (10)
#define PHG_GEPHY_GB_MAXTM_OFFSET_RSVD0_WIDTH                                                                      (22)
#define PHG_GEPHY_GB_MAXTM_OFFSET_MAXWAIT_TIMER_CFG                                                                 (0)
#define PHG_GEPHY_GB_MAXTM_OFFSET_MAXWAIT_TIMER_CFG_WIDTH                                                          (10)
typedef union PHG_GEPHY_GB_MAXTM_u {
    struct __attribute__ ((packed)) {
        jl_uint32 maxwait_timer_cfg:PHG_GEPHY_GB_MAXTM_OFFSET_MAXWAIT_TIMER_CFG_WIDTH;                                    //[ 9: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GB_MAXTM_OFFSET_RSVD0_WIDTH;                                                            //[31:10]
    } BF;
    jl_uint32 val[PHG_GEPHY_GB_MAXTM_ENTRY_SIZE];
} PHG_GEPHY_GB_MAXTM_t;

#define PHG_GEPHY_GB_MINTM                                                                     ((jl_uint32)0x002443B4U)
#define PHG_GEPHY_GB_MINTM_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GB_MINTM_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_GB_MINTM_OFFSET_RSVD0                                                                            (10)
#define PHG_GEPHY_GB_MINTM_OFFSET_RSVD0_WIDTH                                                                      (22)
#define PHG_GEPHY_GB_MINTM_OFFSET_MINWAIT_TIMER_CFG                                                                 (0)
#define PHG_GEPHY_GB_MINTM_OFFSET_MINWAIT_TIMER_CFG_WIDTH                                                          (10)
typedef union PHG_GEPHY_GB_MINTM_u {
    struct __attribute__ ((packed)) {
        jl_uint32 minwait_timer_cfg:PHG_GEPHY_GB_MINTM_OFFSET_MINWAIT_TIMER_CFG_WIDTH;                                    //[ 9: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GB_MINTM_OFFSET_RSVD0_WIDTH;                                                            //[31:10]
    } BF;
    jl_uint32 val[PHG_GEPHY_GB_MINTM_ENTRY_SIZE];
} PHG_GEPHY_GB_MINTM_t;

#define PHG_GEPHY_GB_SKEWCFG                                                                   ((jl_uint32)0x002443B8U)
#define PHG_GEPHY_GB_SKEWCFG_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GB_SKEWCFG_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_GB_SKEWCFG_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_GB_SKEWCFG_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_GB_SKEWCFG_OFFSET_FORCE_SW_SKEW_SETTING                                                           (0)
#define PHG_GEPHY_GB_SKEWCFG_OFFSET_FORCE_SW_SKEW_SETTING_WIDTH                                                    (12)
#define PHG_GEPHY_GB_SKEWCFG_OFFSET_FORCE_SW_SKEW                                                                  (12)
#define PHG_GEPHY_GB_SKEWCFG_OFFSET_FORCE_SW_SKEW_WIDTH                                                             (1)
#define PHG_GEPHY_GB_SKEWCFG_OFFSET_SKEW_SEARCH_CONFIG                                                             (13)
#define PHG_GEPHY_GB_SKEWCFG_OFFSET_SKEW_SEARCH_CONFIG_WIDTH                                                        (1)
#define PHG_GEPHY_GB_SKEWCFG_OFFSET_FORCE_SWAP_C_D                                                                 (14)
#define PHG_GEPHY_GB_SKEWCFG_OFFSET_FORCE_SWAP_C_D_WIDTH                                                            (1)
#define PHG_GEPHY_GB_SKEWCFG_OFFSET_SKEW_SEARCH_LFSR_EN                                                            (15)
#define PHG_GEPHY_GB_SKEWCFG_OFFSET_SKEW_SEARCH_LFSR_EN_WIDTH                                                       (1)
typedef union PHG_GEPHY_GB_SKEWCFG_u {
    struct __attribute__ ((packed)) {
        jl_uint32 force_sw_skew_setting:PHG_GEPHY_GB_SKEWCFG_OFFSET_FORCE_SW_SKEW_SETTING_WIDTH;                          //[11: 0]
        jl_uint32 force_sw_skew:PHG_GEPHY_GB_SKEWCFG_OFFSET_FORCE_SW_SKEW_WIDTH;                                          //[12:12]
        jl_uint32 skew_search_config:PHG_GEPHY_GB_SKEWCFG_OFFSET_SKEW_SEARCH_CONFIG_WIDTH;                                //[13:13]
        jl_uint32 force_swap_c_d:PHG_GEPHY_GB_SKEWCFG_OFFSET_FORCE_SWAP_C_D_WIDTH;                                        //[14:14]
        jl_uint32 skew_search_lfsr_en:PHG_GEPHY_GB_SKEWCFG_OFFSET_SKEW_SEARCH_LFSR_EN_WIDTH;                              //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_GB_SKEWCFG_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GB_SKEWCFG_ENTRY_SIZE];
} PHG_GEPHY_GB_SKEWCFG_t;

#define PHG_GEPHY_GB_TM_RW                                                                     ((jl_uint32)0x002443BCU)
#define PHG_GEPHY_GB_TM_RW_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GB_TM_RW_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_GB_TM_RW_OFFSET_RSVD0                                                                            (12)
#define PHG_GEPHY_GB_TM_RW_OFFSET_RSVD0_WIDTH                                                                      (20)
#define PHG_GEPHY_GB_TM_RW_OFFSET_RX_WAIT_TIMER_CFG                                                                 (0)
#define PHG_GEPHY_GB_TM_RW_OFFSET_RX_WAIT_TIMER_CFG_WIDTH                                                          (12)
typedef union PHG_GEPHY_GB_TM_RW_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_wait_timer_cfg:PHG_GEPHY_GB_TM_RW_OFFSET_RX_WAIT_TIMER_CFG_WIDTH;                                    //[11: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GB_TM_RW_OFFSET_RSVD0_WIDTH;                                                            //[31:12]
    } BF;
    jl_uint32 val[PHG_GEPHY_GB_TM_RW_ENTRY_SIZE];
} PHG_GEPHY_GB_TM_RW_t;

#define PHG_GEPHY_GB_TM_RL                                                                     ((jl_uint32)0x002443C0U)
#define PHG_GEPHY_GB_TM_RL_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GB_TM_RL_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_GB_TM_RL_OFFSET_RSVD0                                                                             (6)
#define PHG_GEPHY_GB_TM_RL_OFFSET_RSVD0_WIDTH                                                                      (26)
#define PHG_GEPHY_GB_TM_RL_OFFSET_RX_LOAD_TIMER_CFG                                                                 (0)
#define PHG_GEPHY_GB_TM_RL_OFFSET_RX_LOAD_TIMER_CFG_WIDTH                                                           (6)
typedef union PHG_GEPHY_GB_TM_RL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_load_timer_cfg:PHG_GEPHY_GB_TM_RL_OFFSET_RX_LOAD_TIMER_CFG_WIDTH;                                    //[ 5: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GB_TM_RL_OFFSET_RSVD0_WIDTH;                                                            //[31: 6]
    } BF;
    jl_uint32 val[PHG_GEPHY_GB_TM_RL_ENTRY_SIZE];
} PHG_GEPHY_GB_TM_RL_t;

#define PHG_GEPHY_GB_TM_RE                                                                     ((jl_uint32)0x002443C4U)
#define PHG_GEPHY_GB_TM_RE_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GB_TM_RE_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_GB_TM_RE_OFFSET_RSVD0                                                                            (10)
#define PHG_GEPHY_GB_TM_RE_OFFSET_RSVD0_WIDTH                                                                      (22)
#define PHG_GEPHY_GB_TM_RE_OFFSET_RX_EVAL_TIMER_CFG                                                                 (0)
#define PHG_GEPHY_GB_TM_RE_OFFSET_RX_EVAL_TIMER_CFG_WIDTH                                                          (10)
typedef union PHG_GEPHY_GB_TM_RE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_eval_timer_cfg:PHG_GEPHY_GB_TM_RE_OFFSET_RX_EVAL_TIMER_CFG_WIDTH;                                    //[ 9: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GB_TM_RE_OFFSET_RSVD0_WIDTH;                                                            //[31:10]
    } BF;
    jl_uint32 val[PHG_GEPHY_GB_TM_RE_ENTRY_SIZE];
} PHG_GEPHY_GB_TM_RE_t;

#define PHG_GEPHY_GB_TM_REF                                                                    ((jl_uint32)0x002443C8U)
#define PHG_GEPHY_GB_TM_REF_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GB_TM_REF_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_GB_TM_REF_OFFSET_RSVD0                                                                            (9)
#define PHG_GEPHY_GB_TM_REF_OFFSET_RSVD0_WIDTH                                                                     (23)
#define PHG_GEPHY_GB_TM_REF_OFFSET_RX_EVAL_FAIL_CFG                                                                 (0)
#define PHG_GEPHY_GB_TM_REF_OFFSET_RX_EVAL_FAIL_CFG_WIDTH                                                           (9)
typedef union PHG_GEPHY_GB_TM_REF_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_eval_fail_cfg:PHG_GEPHY_GB_TM_REF_OFFSET_RX_EVAL_FAIL_CFG_WIDTH;                                     //[ 8: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GB_TM_REF_OFFSET_RSVD0_WIDTH;                                                           //[31: 9]
    } BF;
    jl_uint32 val[PHG_GEPHY_GB_TM_REF_ENTRY_SIZE];
} PHG_GEPHY_GB_TM_REF_t;

#define PHG_GEPHY_GB_CNT_RLOCK                                                                 ((jl_uint32)0x002443CCU)
#define PHG_GEPHY_GB_CNT_RLOCK_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GB_CNT_RLOCK_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_GB_CNT_RLOCK_OFFSET_RSVD0                                                                         (8)
#define PHG_GEPHY_GB_CNT_RLOCK_OFFSET_RSVD0_WIDTH                                                                  (24)
#define PHG_GEPHY_GB_CNT_RLOCK_OFFSET_RX_LOCK_GOOD_CFG                                                              (0)
#define PHG_GEPHY_GB_CNT_RLOCK_OFFSET_RX_LOCK_GOOD_CFG_WIDTH                                                        (8)
typedef union PHG_GEPHY_GB_CNT_RLOCK_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_lock_good_cfg:PHG_GEPHY_GB_CNT_RLOCK_OFFSET_RX_LOCK_GOOD_CFG_WIDTH;                                  //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GB_CNT_RLOCK_OFFSET_RSVD0_WIDTH;                                                        //[31: 8]
    } BF;
    jl_uint32 val[PHG_GEPHY_GB_CNT_RLOCK_ENTRY_SIZE];
} PHG_GEPHY_GB_CNT_RLOCK_t;

#define PHG_GEPHY_GB_CNT_RDET                                                                  ((jl_uint32)0x002443D0U)
#define PHG_GEPHY_GB_CNT_RDET_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GB_CNT_RDET_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_GB_CNT_RDET_OFFSET_RSVD0                                                                          (8)
#define PHG_GEPHY_GB_CNT_RDET_OFFSET_RSVD0_WIDTH                                                                   (24)
#define PHG_GEPHY_GB_CNT_RDET_OFFSET_RX_LOCK_DET_CFG                                                                (0)
#define PHG_GEPHY_GB_CNT_RDET_OFFSET_RX_LOCK_DET_CFG_WIDTH                                                          (8)
typedef union PHG_GEPHY_GB_CNT_RDET_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_lock_det_cfg:PHG_GEPHY_GB_CNT_RDET_OFFSET_RX_LOCK_DET_CFG_WIDTH;                                     //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GB_CNT_RDET_OFFSET_RSVD0_WIDTH;                                                         //[31: 8]
    } BF;
    jl_uint32 val[PHG_GEPHY_GB_CNT_RDET_ENTRY_SIZE];
} PHG_GEPHY_GB_CNT_RDET_t;

#define PHG_GEPHY_GBLIP_TM_UPT                                                                 ((jl_uint32)0x002443D4U)
#define PHG_GEPHY_GBLIP_TM_UPT_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GBLIP_TM_UPT_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_GBLIP_TM_UPT_OFFSET_RSVD0                                                                         (9)
#define PHG_GEPHY_GBLIP_TM_UPT_OFFSET_RSVD0_WIDTH                                                                  (23)
#define PHG_GEPHY_GBLIP_TM_UPT_OFFSET_LPI_UPDATE_TIMER_CFG                                                          (0)
#define PHG_GEPHY_GBLIP_TM_UPT_OFFSET_LPI_UPDATE_TIMER_CFG_WIDTH                                                    (9)
typedef union PHG_GEPHY_GBLIP_TM_UPT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 lpi_update_timer_cfg:PHG_GEPHY_GBLIP_TM_UPT_OFFSET_LPI_UPDATE_TIMER_CFG_WIDTH;                          //[ 8: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GBLIP_TM_UPT_OFFSET_RSVD0_WIDTH;                                                        //[31: 9]
    } BF;
    jl_uint32 val[PHG_GEPHY_GBLIP_TM_UPT_ENTRY_SIZE];
} PHG_GEPHY_GBLIP_TM_UPT_t;

#define PHG_GEPHY_GBLIP_TM_POSTUPT                                                             ((jl_uint32)0x002443D8U)
#define PHG_GEPHY_GBLIP_TM_POSTUPT_NUM                                                         ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GBLIP_TM_POSTUPT_ENTRY_SIZE                                                                       (1)
#define PHG_GEPHY_GBLIP_TM_POSTUPT_OFFSET_RSVD0                                                                    (10)
#define PHG_GEPHY_GBLIP_TM_POSTUPT_OFFSET_RSVD0_WIDTH                                                              (22)
#define PHG_GEPHY_GBLIP_TM_POSTUPT_OFFSET_LPI_POSTUPDATE_TIMER_CFG                                                  (0)
#define PHG_GEPHY_GBLIP_TM_POSTUPT_OFFSET_LPI_POSTUPDATE_TIMER_CFG_WIDTH                                           (10)
typedef union PHG_GEPHY_GBLIP_TM_POSTUPT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 lpi_postupdate_timer_cfg:PHG_GEPHY_GBLIP_TM_POSTUPT_OFFSET_LPI_POSTUPDATE_TIMER_CFG_WIDTH;              //[ 9: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GBLIP_TM_POSTUPT_OFFSET_RSVD0_WIDTH;                                                    //[31:10]
    } BF;
    jl_uint32 val[PHG_GEPHY_GBLIP_TM_POSTUPT_ENTRY_SIZE];
} PHG_GEPHY_GBLIP_TM_POSTUPT_t;

#define PHG_GEPHY_GBLIP_TM_WAKE                                                                ((jl_uint32)0x002443DCU)
#define PHG_GEPHY_GBLIP_TM_WAKE_NUM                                                            ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GBLIP_TM_WAKE_ENTRY_SIZE                                                                          (1)
#define PHG_GEPHY_GBLIP_TM_WAKE_OFFSET_RSVD0                                                                       (15)
#define PHG_GEPHY_GBLIP_TM_WAKE_OFFSET_RSVD0_WIDTH                                                                 (17)
#define PHG_GEPHY_GBLIP_TM_WAKE_OFFSET_LPI_QUIET_TIMER_CFG                                                          (0)
#define PHG_GEPHY_GBLIP_TM_WAKE_OFFSET_LPI_QUIET_TIMER_CFG_WIDTH                                                    (5)
#define PHG_GEPHY_GBLIP_TM_WAKE_OFFSET_LPI_WAITWQ_TIMER_CFG                                                         (5)
#define PHG_GEPHY_GBLIP_TM_WAKE_OFFSET_LPI_WAITWQ_TIMER_CFG_WIDTH                                                   (5)
#define PHG_GEPHY_GBLIP_TM_WAKE_OFFSET_LPI_WAKE_TIMER_CFG                                                          (10)
#define PHG_GEPHY_GBLIP_TM_WAKE_OFFSET_LPI_WAKE_TIMER_CFG_WIDTH                                                     (5)
typedef union PHG_GEPHY_GBLIP_TM_WAKE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 lpi_quiet_timer_cfg:PHG_GEPHY_GBLIP_TM_WAKE_OFFSET_LPI_QUIET_TIMER_CFG_WIDTH;                           //[ 4: 0]
        jl_uint32 lpi_waitwq_timer_cfg:PHG_GEPHY_GBLIP_TM_WAKE_OFFSET_LPI_WAITWQ_TIMER_CFG_WIDTH;                         //[ 9: 5]
        jl_uint32 lpi_wake_timer_cfg:PHG_GEPHY_GBLIP_TM_WAKE_OFFSET_LPI_WAKE_TIMER_CFG_WIDTH;                             //[14:10]
        jl_uint32 rsvd0:PHG_GEPHY_GBLIP_TM_WAKE_OFFSET_RSVD0_WIDTH;                                                       //[31:15]
    } BF;
    jl_uint32 val[PHG_GEPHY_GBLIP_TM_WAKE_ENTRY_SIZE];
} PHG_GEPHY_GBLIP_TM_WAKE_t;

#define PHG_GEPHY_GBLIP_TM_WAITTX                                                              ((jl_uint32)0x002443E0U)
#define PHG_GEPHY_GBLIP_TM_WAITTX_NUM                                                          ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GBLIP_TM_WAITTX_ENTRY_SIZE                                                                        (1)
#define PHG_GEPHY_GBLIP_TM_WAITTX_OFFSET_RSVD0                                                                      (9)
#define PHG_GEPHY_GBLIP_TM_WAITTX_OFFSET_RSVD0_WIDTH                                                               (23)
#define PHG_GEPHY_GBLIP_TM_WAITTX_OFFSET_LPI_WAKETX_TIMER_CFG                                                       (0)
#define PHG_GEPHY_GBLIP_TM_WAITTX_OFFSET_LPI_WAKETX_TIMER_CFG_WIDTH                                                 (9)
typedef union PHG_GEPHY_GBLIP_TM_WAITTX_u {
    struct __attribute__ ((packed)) {
        jl_uint32 lpi_waketx_timer_cfg:PHG_GEPHY_GBLIP_TM_WAITTX_OFFSET_LPI_WAKETX_TIMER_CFG_WIDTH;                       //[ 8: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GBLIP_TM_WAITTX_OFFSET_RSVD0_WIDTH;                                                     //[31: 9]
    } BF;
    jl_uint32 val[PHG_GEPHY_GBLIP_TM_WAITTX_ENTRY_SIZE];
} PHG_GEPHY_GBLIP_TM_WAITTX_t;

#define PHG_GEPHY_GBLIP_TM_WAKEMZ                                                              ((jl_uint32)0x002443E4U)
#define PHG_GEPHY_GBLIP_TM_WAKEMZ_NUM                                                          ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GBLIP_TM_WAKEMZ_ENTRY_SIZE                                                                        (1)
#define PHG_GEPHY_GBLIP_TM_WAKEMZ_OFFSET_RSVD0                                                                     (10)
#define PHG_GEPHY_GBLIP_TM_WAKEMZ_OFFSET_RSVD0_WIDTH                                                               (22)
#define PHG_GEPHY_GBLIP_TM_WAKEMZ_OFFSET_LPI_WAKEMZ_TIMER_CFG                                                       (0)
#define PHG_GEPHY_GBLIP_TM_WAKEMZ_OFFSET_LPI_WAKEMZ_TIMER_CFG_WIDTH                                                (10)
typedef union PHG_GEPHY_GBLIP_TM_WAKEMZ_u {
    struct __attribute__ ((packed)) {
        jl_uint32 lpi_wakemz_timer_cfg:PHG_GEPHY_GBLIP_TM_WAKEMZ_OFFSET_LPI_WAKEMZ_TIMER_CFG_WIDTH;                       //[ 9: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GBLIP_TM_WAKEMZ_OFFSET_RSVD0_WIDTH;                                                     //[31:10]
    } BF;
    jl_uint32 val[PHG_GEPHY_GBLIP_TM_WAKEMZ_ENTRY_SIZE];
} PHG_GEPHY_GBLIP_TM_WAKEMZ_t;

#define PHG_GEPHY_GBLIP_TM_LINKFAIL                                                            ((jl_uint32)0x002443E8U)
#define PHG_GEPHY_GBLIP_TM_LINKFAIL_NUM                                                        ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GBLIP_TM_LINKFAIL_ENTRY_SIZE                                                                      (1)
#define PHG_GEPHY_GBLIP_TM_LINKFAIL_OFFSET_RSVD0                                                                    (8)
#define PHG_GEPHY_GBLIP_TM_LINKFAIL_OFFSET_RSVD0_WIDTH                                                             (24)
#define PHG_GEPHY_GBLIP_TM_LINKFAIL_OFFSET_LPI_LINK_FAIL_TIMER_CFG                                                  (0)
#define PHG_GEPHY_GBLIP_TM_LINKFAIL_OFFSET_LPI_LINK_FAIL_TIMER_CFG_WIDTH                                            (8)
typedef union PHG_GEPHY_GBLIP_TM_LINKFAIL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 lpi_link_fail_timer_cfg:PHG_GEPHY_GBLIP_TM_LINKFAIL_OFFSET_LPI_LINK_FAIL_TIMER_CFG_WIDTH;               //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GBLIP_TM_LINKFAIL_OFFSET_RSVD0_WIDTH;                                                   //[31: 8]
    } BF;
    jl_uint32 val[PHG_GEPHY_GBLIP_TM_LINKFAIL_ENTRY_SIZE];
} PHG_GEPHY_GBLIP_TM_LINKFAIL_t;

#define PHG_GEPHY_GBLPI_ANACFG                                                                 ((jl_uint32)0x002443ECU)
#define PHG_GEPHY_GBLPI_ANACFG_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GBLPI_ANACFG_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_GBLPI_ANACFG_OFFSET_RSVD0                                                                        (10)
#define PHG_GEPHY_GBLPI_ANACFG_OFFSET_RSVD0_WIDTH                                                                  (22)
#define PHG_GEPHY_GBLPI_ANACFG_OFFSET_LPI_ANALOG_TX_ACTIVE_TIMER_CFG                                                (0)
#define PHG_GEPHY_GBLPI_ANACFG_OFFSET_LPI_ANALOG_TX_ACTIVE_TIMER_CFG_WIDTH                                          (5)
#define PHG_GEPHY_GBLPI_ANACFG_OFFSET_LPI_ANALOG_RX_ACTIVE_TIMER_CFG                                                (5)
#define PHG_GEPHY_GBLPI_ANACFG_OFFSET_LPI_ANALOG_RX_ACTIVE_TIMER_CFG_WIDTH                                          (5)
typedef union PHG_GEPHY_GBLPI_ANACFG_u {
    struct __attribute__ ((packed)) {
        jl_uint32 lpi_analog_tx_active_timer_cfg:PHG_GEPHY_GBLPI_ANACFG_OFFSET_LPI_ANALOG_TX_ACTIVE_TIMER_CFG_WIDTH;      //[ 4: 0]
        jl_uint32 lpi_analog_rx_active_timer_cfg:PHG_GEPHY_GBLPI_ANACFG_OFFSET_LPI_ANALOG_RX_ACTIVE_TIMER_CFG_WIDTH;      //[ 9: 5]
        jl_uint32 rsvd0:PHG_GEPHY_GBLPI_ANACFG_OFFSET_RSVD0_WIDTH;                                                        //[31:10]
    } BF;
    jl_uint32 val[PHG_GEPHY_GBLPI_ANACFG_ENTRY_SIZE];
} PHG_GEPHY_GBLPI_ANACFG_t;

#define PHG_GEPHY_GB_FSM_RX                                                                    ((jl_uint32)0x002443F0U)
#define PHG_GEPHY_GB_FSM_RX_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GB_FSM_RX_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_GB_FSM_RX_OFFSET_RSVD1                                                                           (15)
#define PHG_GEPHY_GB_FSM_RX_OFFSET_RSVD1_WIDTH                                                                     (17)
#define PHG_GEPHY_GB_FSM_RX_OFFSET_RX_LOCK_STATE_MACHINE_STATUS                                                     (0)
#define PHG_GEPHY_GB_FSM_RX_OFFSET_RX_LOCK_STATE_MACHINE_STATUS_WIDTH                                               (6)
#define PHG_GEPHY_GB_FSM_RX_OFFSET_RSVD0                                                                            (6)
#define PHG_GEPHY_GB_FSM_RX_OFFSET_RSVD0_WIDTH                                                                      (2)
#define PHG_GEPHY_GB_FSM_RX_OFFSET_CONTROL_STATE_MACHINE_STATUS                                                     (8)
#define PHG_GEPHY_GB_FSM_RX_OFFSET_CONTROL_STATE_MACHINE_STATUS_WIDTH                                               (7)
typedef union PHG_GEPHY_GB_FSM_RX_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_lock_state_machine_status:PHG_GEPHY_GB_FSM_RX_OFFSET_RX_LOCK_STATE_MACHINE_STATUS_WIDTH;             //[ 5: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GB_FSM_RX_OFFSET_RSVD0_WIDTH;                                                           //[ 7: 6]
        jl_uint32 control_state_machine_status:PHG_GEPHY_GB_FSM_RX_OFFSET_CONTROL_STATE_MACHINE_STATUS_WIDTH;             //[14: 8]
        jl_uint32 rsvd1:PHG_GEPHY_GB_FSM_RX_OFFSET_RSVD1_WIDTH;                                                           //[31:15]
    } BF;
    jl_uint32 val[PHG_GEPHY_GB_FSM_RX_ENTRY_SIZE];
} PHG_GEPHY_GB_FSM_RX_t;

#define PHG_GEPHY_GB_FSM_EEE                                                                   ((jl_uint32)0x002443F4U)
#define PHG_GEPHY_GB_FSM_EEE_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GB_FSM_EEE_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_GB_FSM_EEE_OFFSET_RSVD0                                                                           (8)
#define PHG_GEPHY_GB_FSM_EEE_OFFSET_RSVD0_WIDTH                                                                    (24)
#define PHG_GEPHY_GB_FSM_EEE_OFFSET_EEE_STATE_MACHINE_STATUS                                                        (0)
#define PHG_GEPHY_GB_FSM_EEE_OFFSET_EEE_STATE_MACHINE_STATUS_WIDTH                                                  (8)
typedef union PHG_GEPHY_GB_FSM_EEE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 eee_state_machine_status:PHG_GEPHY_GB_FSM_EEE_OFFSET_EEE_STATE_MACHINE_STATUS_WIDTH;                    //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GB_FSM_EEE_OFFSET_RSVD0_WIDTH;                                                          //[31: 8]
    } BF;
    jl_uint32 val[PHG_GEPHY_GB_FSM_EEE_ENTRY_SIZE];
} PHG_GEPHY_GB_FSM_EEE_t;

#define PHG_GEPHY_CPUINT_DIS                                                                   ((jl_uint32)0x002443F8U)
#define PHG_GEPHY_CPUINT_DIS_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPUINT_DIS_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_CPUINT_DIS_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_CPUINT_DIS_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_CPUINT_DIS_OFFSET_BASET_RX_STATUS                                                                 (0)
#define PHG_GEPHY_CPUINT_DIS_OFFSET_BASET_RX_STATUS_WIDTH                                                          (16)
typedef union PHG_GEPHY_CPUINT_DIS_u {
    struct __attribute__ ((packed)) {
        jl_uint32 baset_rx_status:PHG_GEPHY_CPUINT_DIS_OFFSET_BASET_RX_STATUS_WIDTH;                                      //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CPUINT_DIS_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPUINT_DIS_ENTRY_SIZE];
} PHG_GEPHY_CPUINT_DIS_t;

#define PHG_GEPHY_BASET1000_RX_DBG0                                                            ((jl_uint32)0x002443FCU)
#define PHG_GEPHY_BASET1000_RX_DBG0_NUM                                                        ((jl_uint32)0x00000001U)
#define PHG_GEPHY_BASET1000_RX_DBG0_ENTRY_SIZE                                                                      (1)
#define PHG_GEPHY_BASET1000_RX_DBG0_OFFSET_RSVD1                                                                   (16)
#define PHG_GEPHY_BASET1000_RX_DBG0_OFFSET_RSVD1_WIDTH                                                             (16)
#define PHG_GEPHY_BASET1000_RX_DBG0_OFFSET_BASET_RX_DBG0                                                            (0)
#define PHG_GEPHY_BASET1000_RX_DBG0_OFFSET_BASET_RX_DBG0_WIDTH                                                      (8)
#define PHG_GEPHY_BASET1000_RX_DBG0_OFFSET_RSVD0                                                                    (8)
#define PHG_GEPHY_BASET1000_RX_DBG0_OFFSET_RSVD0_WIDTH                                                              (5)
#define PHG_GEPHY_BASET1000_RX_DBG0_OFFSET_PMA_8192_SW_DONE                                                        (13)
#define PHG_GEPHY_BASET1000_RX_DBG0_OFFSET_PMA_8192_SW_DONE_WIDTH                                                   (1)
#define PHG_GEPHY_BASET1000_RX_DBG0_OFFSET_BASET_RX_SKEW_PLUS_EN                                                   (14)
#define PHG_GEPHY_BASET1000_RX_DBG0_OFFSET_BASET_RX_SKEW_PLUS_EN_WIDTH                                              (1)
#define PHG_GEPHY_BASET1000_RX_DBG0_OFFSET_BASET_RX_USE_CFG_LGD                                                    (15)
#define PHG_GEPHY_BASET1000_RX_DBG0_OFFSET_BASET_RX_USE_CFG_LGD_WIDTH                                               (1)
typedef union PHG_GEPHY_BASET1000_RX_DBG0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 baset_rx_dbg0:PHG_GEPHY_BASET1000_RX_DBG0_OFFSET_BASET_RX_DBG0_WIDTH;                                   //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_BASET1000_RX_DBG0_OFFSET_RSVD0_WIDTH;                                                   //[12: 8]
        jl_uint32 pma_8192_sw_done:PHG_GEPHY_BASET1000_RX_DBG0_OFFSET_PMA_8192_SW_DONE_WIDTH;                             //[13:13]
        jl_uint32 baset_rx_skew_plus_en:PHG_GEPHY_BASET1000_RX_DBG0_OFFSET_BASET_RX_SKEW_PLUS_EN_WIDTH;                   //[14:14]
        jl_uint32 baset_rx_use_cfg_lgd:PHG_GEPHY_BASET1000_RX_DBG0_OFFSET_BASET_RX_USE_CFG_LGD_WIDTH;                     //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_BASET1000_RX_DBG0_OFFSET_RSVD1_WIDTH;                                                   //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_BASET1000_RX_DBG0_ENTRY_SIZE];
} PHG_GEPHY_BASET1000_RX_DBG0_t;

#define PHG_GEPHY_BASET1000_RX_DBG1                                                            ((jl_uint32)0x00244400U)
#define PHG_GEPHY_BASET1000_RX_DBG1_NUM                                                        ((jl_uint32)0x00000001U)
#define PHG_GEPHY_BASET1000_RX_DBG1_ENTRY_SIZE                                                                      (1)
#define PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_RSVD1                                                                   (16)
#define PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_RSVD1_WIDTH                                                             (16)
#define PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_SCR_CH0_LOCK                                                             (0)
#define PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_SCR_CH0_LOCK_WIDTH                                                       (1)
#define PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_FG_EEE_UPDATE                                                            (1)
#define PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_FG_EEE_UPDATE_WIDTH                                                      (1)
#define PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_FG_EEE                                                                   (2)
#define PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_FG_EEE_WIDTH                                                             (1)
#define PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_RSVD0                                                                    (3)
#define PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_RSVD0_WIDTH                                                             (10)
#define PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_MAP_RX_DV_SCR_LOAD_EN                                                   (13)
#define PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_MAP_RX_DV_SCR_LOAD_EN_WIDTH                                              (1)
#define PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_EEE_RE_SCAN_MASTER_EN                                                   (14)
#define PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_EEE_RE_SCAN_MASTER_EN_WIDTH                                              (1)
#define PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_EEE_RE_SCAN_SLAVE_EN                                                    (15)
#define PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_EEE_RE_SCAN_SLAVE_EN_WIDTH                                               (1)
typedef union PHG_GEPHY_BASET1000_RX_DBG1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 scr_ch0_lock:PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_SCR_CH0_LOCK_WIDTH;                                     //[ 0: 0]
        jl_uint32 fg_eee_update:PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_FG_EEE_UPDATE_WIDTH;                                   //[ 1: 1]
        jl_uint32 fg_eee:PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_FG_EEE_WIDTH;                                                 //[ 2: 2]
        jl_uint32 rsvd0:PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_RSVD0_WIDTH;                                                   //[12: 3]
        jl_uint32 map_rx_dv_scr_load_en:PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_MAP_RX_DV_SCR_LOAD_EN_WIDTH;                   //[13:13]
        jl_uint32 eee_re_scan_master_en:PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_EEE_RE_SCAN_MASTER_EN_WIDTH;                   //[14:14]
        jl_uint32 eee_re_scan_slave_en:PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_EEE_RE_SCAN_SLAVE_EN_WIDTH;                     //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_BASET1000_RX_DBG1_OFFSET_RSVD1_WIDTH;                                                   //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_BASET1000_RX_DBG1_ENTRY_SIZE];
} PHG_GEPHY_BASET1000_RX_DBG1_t;

#define PHG_GEPHY_BASET1000_RXDV_TIMEOUT_CFG                                                   ((jl_uint32)0x00244404U)
#define PHG_GEPHY_BASET1000_RXDV_TIMEOUT_CFG_NUM                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_BASET1000_RXDV_TIMEOUT_CFG_ENTRY_SIZE                                                             (1)
#define PHG_GEPHY_BASET1000_RXDV_TIMEOUT_CFG_OFFSET_RSVD0                                                          (16)
#define PHG_GEPHY_BASET1000_RXDV_TIMEOUT_CFG_OFFSET_RSVD0_WIDTH                                                    (16)
#define PHG_GEPHY_BASET1000_RXDV_TIMEOUT_CFG_OFFSET_BASET_RXDV_TIMEOUT_CFG                                          (0)
#define PHG_GEPHY_BASET1000_RXDV_TIMEOUT_CFG_OFFSET_BASET_RXDV_TIMEOUT_CFG_WIDTH                                   (16)
typedef union PHG_GEPHY_BASET1000_RXDV_TIMEOUT_CFG_u {
    struct __attribute__ ((packed)) {
        jl_uint32 baset_rxdv_timeout_cfg:PHG_GEPHY_BASET1000_RXDV_TIMEOUT_CFG_OFFSET_BASET_RXDV_TIMEOUT_CFG_WIDTH;        //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_BASET1000_RXDV_TIMEOUT_CFG_OFFSET_RSVD0_WIDTH;                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_BASET1000_RXDV_TIMEOUT_CFG_ENTRY_SIZE];
} PHG_GEPHY_BASET1000_RXDV_TIMEOUT_CFG_t;

#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL0                                             ((jl_uint32)0x00244408U)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL0_NUM                                         ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL0_ENTRY_SIZE                                                       (1)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL0_OFFSET_RSVD0                                                     (4)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL0_OFFSET_RSVD0_WIDTH                                              (28)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL0_OFFSET_BASE1000T_TRIG_SRC                                        (0)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL0_OFFSET_BASE1000T_TRIG_SRC_WIDTH                                  (4)
typedef union PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 base1000t_trig_src:PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL0_OFFSET_BASE1000T_TRIG_SRC_WIDTH;          //[ 3: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL0_OFFSET_RSVD0_WIDTH;                                    //[31: 4]
    } BF;
    jl_uint32 val[PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL0_ENTRY_SIZE];
} PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL0_t;

#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL1                                             ((jl_uint32)0x0024440CU)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL1_NUM                                         ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL1_ENTRY_SIZE                                                       (1)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL1_OFFSET_RSVD0                                                    (16)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL1_OFFSET_RSVD0_WIDTH                                              (16)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL1_OFFSET_BASE1000T_TRIG_PMA_WADDR                                  (0)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL1_OFFSET_BASE1000T_TRIG_PMA_WADDR_WIDTH                           (16)
typedef union PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 base1000t_trig_pma_waddr:PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL1_OFFSET_BASE1000T_TRIG_PMA_WADDR_WIDTH;  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL1_OFFSET_RSVD0_WIDTH;                                    //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL1_ENTRY_SIZE];
} PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL1_t;

#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL2                                             ((jl_uint32)0x00244410U)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL2_NUM                                         ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL2_ENTRY_SIZE                                                       (1)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL2_OFFSET_RSVD0                                                    (16)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL2_OFFSET_RSVD0_WIDTH                                              (16)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL2_OFFSET_BASE1000T_TRIG_PMA_WDATA                                  (0)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL2_OFFSET_BASE1000T_TRIG_PMA_WDATA_WIDTH                           (16)
typedef union PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 base1000t_trig_pma_wdata:PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL2_OFFSET_BASE1000T_TRIG_PMA_WDATA_WIDTH;  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL2_OFFSET_RSVD0_WIDTH;                                    //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL2_ENTRY_SIZE];
} PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL2_t;

#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL3                                             ((jl_uint32)0x00244414U)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL3_NUM                                         ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL3_ENTRY_SIZE                                                       (1)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL3_OFFSET_RSVD0                                                    (16)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL3_OFFSET_RSVD0_WIDTH                                              (16)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL3_OFFSET_BASE1000T_TRIG_PMA_WMASK                                  (0)
#define PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL3_OFFSET_BASE1000T_TRIG_PMA_WMASK_WIDTH                           (16)
typedef union PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 base1000t_trig_pma_wmask:PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL3_OFFSET_BASE1000T_TRIG_PMA_WMASK_WIDTH;  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL3_OFFSET_RSVD0_WIDTH;                                    //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL3_ENTRY_SIZE];
} PHG_GEPHY_DBG_BASE1000T_PCS_PMA_TRIG_CTRL3_t;

#define PHG_GEPHY_BASET_SKEW_SWITCH_CTRL                                                       ((jl_uint32)0x00244418U)
#define PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_NUM                                                   ((jl_uint32)0x00000001U)
#define PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_ENTRY_SIZE                                                                 (1)
#define PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_OFFSET_RSVD1                                                              (16)
#define PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_OFFSET_RSVD1_WIDTH                                                        (16)
#define PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_OFFSET_SKEW8192_PERIOD_CFG                                                 (0)
#define PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_OFFSET_SKEW8192_PERIOD_CFG_WIDTH                                          (11)
#define PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_OFFSET_RSVD0                                                              (11)
#define PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_OFFSET_RSVD0_WIDTH                                                         (2)
#define PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_OFFSET_FORCE_SLAVE_REM_RCVR                                               (13)
#define PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_OFFSET_FORCE_SLAVE_REM_RCVR_WIDTH                                          (1)
#define PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_OFFSET_FORCE_MASTER_REM_RCVR                                              (14)
#define PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_OFFSET_FORCE_MASTER_REM_RCVR_WIDTH                                         (1)
#define PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_OFFSET_DISABLE_SKEW8192                                                   (15)
#define PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_OFFSET_DISABLE_SKEW8192_WIDTH                                              (1)
typedef union PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 skew8192_period_cfg:PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_OFFSET_SKEW8192_PERIOD_CFG_WIDTH;                  //[10: 0]
        jl_uint32 rsvd0:PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_OFFSET_RSVD0_WIDTH;                                              //[12:11]
        jl_uint32 force_slave_rem_rcvr:PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_OFFSET_FORCE_SLAVE_REM_RCVR_WIDTH;                //[13:13]
        jl_uint32 force_master_rem_rcvr:PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_OFFSET_FORCE_MASTER_REM_RCVR_WIDTH;              //[14:14]
        jl_uint32 disable_skew8192:PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_OFFSET_DISABLE_SKEW8192_WIDTH;                        //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_OFFSET_RSVD1_WIDTH;                                              //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_ENTRY_SIZE];
} PHG_GEPHY_BASET_SKEW_SWITCH_CTRL_t;

#define PHG_GEPHY_CP_EEE_DELAY_RX_CNT_CFG                                                      ((jl_uint32)0x0024441CU)
#define PHG_GEPHY_CP_EEE_DELAY_RX_CNT_CFG_NUM                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_EEE_DELAY_RX_CNT_CFG_ENTRY_SIZE                                                                (1)
#define PHG_GEPHY_CP_EEE_DELAY_RX_CNT_CFG_OFFSET_RSVD0                                                             (11)
#define PHG_GEPHY_CP_EEE_DELAY_RX_CNT_CFG_OFFSET_RSVD0_WIDTH                                                       (21)
#define PHG_GEPHY_CP_EEE_DELAY_RX_CNT_CFG_OFFSET_EEE_DELAY_RX_CNT_CFG                                               (0)
#define PHG_GEPHY_CP_EEE_DELAY_RX_CNT_CFG_OFFSET_EEE_DELAY_RX_CNT_CFG_WIDTH                                        (11)
typedef union PHG_GEPHY_CP_EEE_DELAY_RX_CNT_CFG_u {
    struct __attribute__ ((packed)) {
        jl_uint32 eee_delay_rx_cnt_cfg:PHG_GEPHY_CP_EEE_DELAY_RX_CNT_CFG_OFFSET_EEE_DELAY_RX_CNT_CFG_WIDTH;               //[10: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CP_EEE_DELAY_RX_CNT_CFG_OFFSET_RSVD0_WIDTH;                                             //[31:11]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_EEE_DELAY_RX_CNT_CFG_ENTRY_SIZE];
} PHG_GEPHY_CP_EEE_DELAY_RX_CNT_CFG_t;

#define PHG_GEPHY_CP_EEE_DELAY_RX_EYE_CNT_CFG                                                  ((jl_uint32)0x00244420U)
#define PHG_GEPHY_CP_EEE_DELAY_RX_EYE_CNT_CFG_NUM                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_EEE_DELAY_RX_EYE_CNT_CFG_ENTRY_SIZE                                                            (1)
#define PHG_GEPHY_CP_EEE_DELAY_RX_EYE_CNT_CFG_OFFSET_RSVD0                                                         (13)
#define PHG_GEPHY_CP_EEE_DELAY_RX_EYE_CNT_CFG_OFFSET_RSVD0_WIDTH                                                   (19)
#define PHG_GEPHY_CP_EEE_DELAY_RX_EYE_CNT_CFG_OFFSET_EEE_DELAY_RX_EYE_CNT_CFG                                       (0)
#define PHG_GEPHY_CP_EEE_DELAY_RX_EYE_CNT_CFG_OFFSET_EEE_DELAY_RX_EYE_CNT_CFG_WIDTH                                (13)
typedef union PHG_GEPHY_CP_EEE_DELAY_RX_EYE_CNT_CFG_u {
    struct __attribute__ ((packed)) {
        jl_uint32 eee_delay_rx_eye_cnt_cfg:PHG_GEPHY_CP_EEE_DELAY_RX_EYE_CNT_CFG_OFFSET_EEE_DELAY_RX_EYE_CNT_CFG_WIDTH;   //[12: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CP_EEE_DELAY_RX_EYE_CNT_CFG_OFFSET_RSVD0_WIDTH;                                         //[31:13]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_EEE_DELAY_RX_EYE_CNT_CFG_ENTRY_SIZE];
} PHG_GEPHY_CP_EEE_DELAY_RX_EYE_CNT_CFG_t;

#define PHG_GEPHY_CP_TX_LANE_DELAY_CFG                                                         ((jl_uint32)0x00244424U)
#define PHG_GEPHY_CP_TX_LANE_DELAY_CFG_NUM                                                     ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_TX_LANE_DELAY_CFG_ENTRY_SIZE                                                                   (1)
#define PHG_GEPHY_CP_TX_LANE_DELAY_CFG_OFFSET_RSVD0                                                                (16)
#define PHG_GEPHY_CP_TX_LANE_DELAY_CFG_OFFSET_RSVD0_WIDTH                                                          (16)
#define PHG_GEPHY_CP_TX_LANE_DELAY_CFG_OFFSET_COPPER_TX_LANE_A_DLY                                                  (0)
#define PHG_GEPHY_CP_TX_LANE_DELAY_CFG_OFFSET_COPPER_TX_LANE_A_DLY_WIDTH                                            (4)
#define PHG_GEPHY_CP_TX_LANE_DELAY_CFG_OFFSET_COPPER_TX_LANE_B_DLY                                                  (4)
#define PHG_GEPHY_CP_TX_LANE_DELAY_CFG_OFFSET_COPPER_TX_LANE_B_DLY_WIDTH                                            (4)
#define PHG_GEPHY_CP_TX_LANE_DELAY_CFG_OFFSET_COPPER_TX_LANE_C_DLY                                                  (8)
#define PHG_GEPHY_CP_TX_LANE_DELAY_CFG_OFFSET_COPPER_TX_LANE_C_DLY_WIDTH                                            (4)
#define PHG_GEPHY_CP_TX_LANE_DELAY_CFG_OFFSET_COPPER_TX_LANE_D_DLY                                                 (12)
#define PHG_GEPHY_CP_TX_LANE_DELAY_CFG_OFFSET_COPPER_TX_LANE_D_DLY_WIDTH                                            (4)
typedef union PHG_GEPHY_CP_TX_LANE_DELAY_CFG_u {
    struct __attribute__ ((packed)) {
        jl_uint32 copper_tx_lane_a_dly:PHG_GEPHY_CP_TX_LANE_DELAY_CFG_OFFSET_COPPER_TX_LANE_A_DLY_WIDTH;                  //[ 3: 0]
        jl_uint32 copper_tx_lane_b_dly:PHG_GEPHY_CP_TX_LANE_DELAY_CFG_OFFSET_COPPER_TX_LANE_B_DLY_WIDTH;                  //[ 7: 4]
        jl_uint32 copper_tx_lane_c_dly:PHG_GEPHY_CP_TX_LANE_DELAY_CFG_OFFSET_COPPER_TX_LANE_C_DLY_WIDTH;                  //[11: 8]
        jl_uint32 copper_tx_lane_d_dly:PHG_GEPHY_CP_TX_LANE_DELAY_CFG_OFFSET_COPPER_TX_LANE_D_DLY_WIDTH;                  //[15:12]
        jl_uint32 rsvd0:PHG_GEPHY_CP_TX_LANE_DELAY_CFG_OFFSET_RSVD0_WIDTH;                                                //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_TX_LANE_DELAY_CFG_ENTRY_SIZE];
} PHG_GEPHY_CP_TX_LANE_DELAY_CFG_t;

#define PHG_GEPHY_CP_EEE_DBG_CFG1                                                              ((jl_uint32)0x00244428U)
#define PHG_GEPHY_CP_EEE_DBG_CFG1_NUM                                                          ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_EEE_DBG_CFG1_ENTRY_SIZE                                                                        (1)
#define PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_RSVD1                                                                     (16)
#define PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_RSVD1_WIDTH                                                               (16)
#define PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_EEE_UPDATE_EN                                                          (0)
#define PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_EEE_UPDATE_EN_WIDTH                                                    (1)
#define PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_EEE_QUIET_EN                                                           (1)
#define PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_EEE_QUIET_EN_WIDTH                                                     (1)
#define PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_EEE_WAKE_EN                                                            (2)
#define PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_EEE_WAKE_EN_WIDTH                                                      (1)
#define PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_EEE_WAKE_SILENT_EN                                                     (3)
#define PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_EEE_WAKE_SILENT_EN_WIDTH                                               (1)
#define PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_EEE_WAKE_TRAIN_EN                                                      (4)
#define PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_EEE_WAKE_TRAIN_EN_WIDTH                                                (1)
#define PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_EEE_SIGDET_SWITCH_EN                                                   (5)
#define PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_EEE_SIGDET_SWITCH_EN_WIDTH                                             (1)
#define PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_RSVD0                                                                      (6)
#define PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_RSVD0_WIDTH                                                                (9)
#define PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_FORCE_LPI_REQ                                                         (15)
#define PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_FORCE_LPI_REQ_WIDTH                                                    (1)
typedef union PHG_GEPHY_CP_EEE_DBG_CFG1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_eee_update_en:PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_EEE_UPDATE_EN_WIDTH;                             //[ 0: 0]
        jl_uint32 dbg_eee_quiet_en:PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_EEE_QUIET_EN_WIDTH;                               //[ 1: 1]
        jl_uint32 dbg_eee_wake_en:PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_EEE_WAKE_EN_WIDTH;                                 //[ 2: 2]
        jl_uint32 dbg_eee_wake_silent_en:PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_EEE_WAKE_SILENT_EN_WIDTH;                   //[ 3: 3]
        jl_uint32 dbg_eee_wake_train_en:PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_EEE_WAKE_TRAIN_EN_WIDTH;                     //[ 4: 4]
        jl_uint32 dbg_eee_sigdet_switch_en:PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_EEE_SIGDET_SWITCH_EN_WIDTH;               //[ 5: 5]
        jl_uint32 rsvd0:PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_RSVD0_WIDTH;                                                     //[14: 6]
        jl_uint32 dbg_force_lpi_req:PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_DBG_FORCE_LPI_REQ_WIDTH;                             //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_CP_EEE_DBG_CFG1_OFFSET_RSVD1_WIDTH;                                                     //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_EEE_DBG_CFG1_ENTRY_SIZE];
} PHG_GEPHY_CP_EEE_DBG_CFG1_t;

#define PHG_GEPHY_CP_EEE_DBG_CFG2                                                              ((jl_uint32)0x0024442CU)
#define PHG_GEPHY_CP_EEE_DBG_CFG2_NUM                                                          ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_EEE_DBG_CFG2_ENTRY_SIZE                                                                        (1)
#define PHG_GEPHY_CP_EEE_DBG_CFG2_OFFSET_RSVD0                                                                      (7)
#define PHG_GEPHY_CP_EEE_DBG_CFG2_OFFSET_RSVD0_WIDTH                                                               (25)
#define PHG_GEPHY_CP_EEE_DBG_CFG2_OFFSET_DBG_EEE_SIGDET_THRESH                                                      (0)
#define PHG_GEPHY_CP_EEE_DBG_CFG2_OFFSET_DBG_EEE_SIGDET_THRESH_WIDTH                                                (7)
typedef union PHG_GEPHY_CP_EEE_DBG_CFG2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_eee_sigdet_thresh:PHG_GEPHY_CP_EEE_DBG_CFG2_OFFSET_DBG_EEE_SIGDET_THRESH_WIDTH;                     //[ 6: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CP_EEE_DBG_CFG2_OFFSET_RSVD0_WIDTH;                                                     //[31: 7]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_EEE_DBG_CFG2_ENTRY_SIZE];
} PHG_GEPHY_CP_EEE_DBG_CFG2_t;

#define PHG_GEPHY_CP_EEE_DBG_CFG3                                                              ((jl_uint32)0x00244430U)
#define PHG_GEPHY_CP_EEE_DBG_CFG3_NUM                                                          ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_EEE_DBG_CFG3_ENTRY_SIZE                                                                        (1)
#define PHG_GEPHY_CP_EEE_DBG_CFG3_OFFSET_RSVD1                                                                     (16)
#define PHG_GEPHY_CP_EEE_DBG_CFG3_OFFSET_RSVD1_WIDTH                                                               (16)
#define PHG_GEPHY_CP_EEE_DBG_CFG3_OFFSET_DBG_EEE_REM_LPI_WAIT_CFG                                                   (0)
#define PHG_GEPHY_CP_EEE_DBG_CFG3_OFFSET_DBG_EEE_REM_LPI_WAIT_CFG_WIDTH                                            (10)
#define PHG_GEPHY_CP_EEE_DBG_CFG3_OFFSET_RSVD0                                                                     (10)
#define PHG_GEPHY_CP_EEE_DBG_CFG3_OFFSET_RSVD0_WIDTH                                                                (5)
#define PHG_GEPHY_CP_EEE_DBG_CFG3_OFFSET_DBG_EEE_REM_LPI_WAIT_DISABLE                                              (15)
#define PHG_GEPHY_CP_EEE_DBG_CFG3_OFFSET_DBG_EEE_REM_LPI_WAIT_DISABLE_WIDTH                                         (1)
typedef union PHG_GEPHY_CP_EEE_DBG_CFG3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_eee_rem_lpi_wait_cfg:PHG_GEPHY_CP_EEE_DBG_CFG3_OFFSET_DBG_EEE_REM_LPI_WAIT_CFG_WIDTH;               //[ 9: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CP_EEE_DBG_CFG3_OFFSET_RSVD0_WIDTH;                                                     //[14:10]
        jl_uint32 dbg_eee_rem_lpi_wait_disable:PHG_GEPHY_CP_EEE_DBG_CFG3_OFFSET_DBG_EEE_REM_LPI_WAIT_DISABLE_WIDTH;       //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_CP_EEE_DBG_CFG3_OFFSET_RSVD1_WIDTH;                                                     //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_EEE_DBG_CFG3_ENTRY_SIZE];
} PHG_GEPHY_CP_EEE_DBG_CFG3_t;

#define PHG_GEPHY_LINK_TIMEOUT_CFG_HIGH                                                        ((jl_uint32)0x00244434U)
#define PHG_GEPHY_LINK_TIMEOUT_CFG_HIGH_NUM                                                    ((jl_uint32)0x00000001U)
#define PHG_GEPHY_LINK_TIMEOUT_CFG_HIGH_ENTRY_SIZE                                                                  (1)
#define PHG_GEPHY_LINK_TIMEOUT_CFG_HIGH_OFFSET_RSVD0                                                               (16)
#define PHG_GEPHY_LINK_TIMEOUT_CFG_HIGH_OFFSET_RSVD0_WIDTH                                                         (16)
#define PHG_GEPHY_LINK_TIMEOUT_CFG_HIGH_OFFSET_CFG_LINK_SIGNAL_TIMEOUT_HIGH                                         (0)
#define PHG_GEPHY_LINK_TIMEOUT_CFG_HIGH_OFFSET_CFG_LINK_SIGNAL_TIMEOUT_HIGH_WIDTH                                  (16)
typedef union PHG_GEPHY_LINK_TIMEOUT_CFG_HIGH_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_link_signal_timeout_high:PHG_GEPHY_LINK_TIMEOUT_CFG_HIGH_OFFSET_CFG_LINK_SIGNAL_TIMEOUT_HIGH_WIDTH;  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_LINK_TIMEOUT_CFG_HIGH_OFFSET_RSVD0_WIDTH;                                               //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_LINK_TIMEOUT_CFG_HIGH_ENTRY_SIZE];
} PHG_GEPHY_LINK_TIMEOUT_CFG_HIGH_t;

#define PHG_GEPHY_LINK_TIMEOUT_CFG_LOW                                                         ((jl_uint32)0x00244438U)
#define PHG_GEPHY_LINK_TIMEOUT_CFG_LOW_NUM                                                     ((jl_uint32)0x00000001U)
#define PHG_GEPHY_LINK_TIMEOUT_CFG_LOW_ENTRY_SIZE                                                                   (1)
#define PHG_GEPHY_LINK_TIMEOUT_CFG_LOW_OFFSET_RSVD0                                                                (16)
#define PHG_GEPHY_LINK_TIMEOUT_CFG_LOW_OFFSET_RSVD0_WIDTH                                                          (16)
#define PHG_GEPHY_LINK_TIMEOUT_CFG_LOW_OFFSET_CFG_LINK_SIGNAL_TIMEOUT_LOW                                           (0)
#define PHG_GEPHY_LINK_TIMEOUT_CFG_LOW_OFFSET_CFG_LINK_SIGNAL_TIMEOUT_LOW_WIDTH                                    (16)
typedef union PHG_GEPHY_LINK_TIMEOUT_CFG_LOW_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_link_signal_timeout_low:PHG_GEPHY_LINK_TIMEOUT_CFG_LOW_OFFSET_CFG_LINK_SIGNAL_TIMEOUT_LOW_WIDTH;    //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_LINK_TIMEOUT_CFG_LOW_OFFSET_RSVD0_WIDTH;                                                //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_LINK_TIMEOUT_CFG_LOW_ENTRY_SIZE];
} PHG_GEPHY_LINK_TIMEOUT_CFG_LOW_t;

#define PHG_GEPHY_LINK_SIGNAL_TIMEOUT                                                          ((jl_uint32)0x0024443CU)
#define PHG_GEPHY_LINK_SIGNAL_TIMEOUT_NUM                                                      ((jl_uint32)0x00000001U)
#define PHG_GEPHY_LINK_SIGNAL_TIMEOUT_ENTRY_SIZE                                                                    (1)
#define PHG_GEPHY_LINK_SIGNAL_TIMEOUT_OFFSET_RSVD0                                                                  (1)
#define PHG_GEPHY_LINK_SIGNAL_TIMEOUT_OFFSET_RSVD0_WIDTH                                                           (31)
#define PHG_GEPHY_LINK_SIGNAL_TIMEOUT_OFFSET_LINK_SIGNAL_TIMEOUT                                                    (0)
#define PHG_GEPHY_LINK_SIGNAL_TIMEOUT_OFFSET_LINK_SIGNAL_TIMEOUT_WIDTH                                              (1)
typedef union PHG_GEPHY_LINK_SIGNAL_TIMEOUT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 link_signal_timeout:PHG_GEPHY_LINK_SIGNAL_TIMEOUT_OFFSET_LINK_SIGNAL_TIMEOUT_WIDTH;                     //[ 0: 0]
        jl_uint32 rsvd0:PHG_GEPHY_LINK_SIGNAL_TIMEOUT_OFFSET_RSVD0_WIDTH;                                                 //[31: 1]
    } BF;
    jl_uint32 val[PHG_GEPHY_LINK_SIGNAL_TIMEOUT_ENTRY_SIZE];
} PHG_GEPHY_LINK_SIGNAL_TIMEOUT_t;

#define PHG_GEPHY_LINK_SIGNAL_CNT                                                              ((jl_uint32)0x00244440U)
#define PHG_GEPHY_LINK_SIGNAL_CNT_NUM                                                          ((jl_uint32)0x00000001U)
#define PHG_GEPHY_LINK_SIGNAL_CNT_ENTRY_SIZE                                                                        (1)
#define PHG_GEPHY_LINK_SIGNAL_CNT_OFFSET_RSVD1                                                                     (16)
#define PHG_GEPHY_LINK_SIGNAL_CNT_OFFSET_RSVD1_WIDTH                                                               (16)
#define PHG_GEPHY_LINK_SIGNAL_CNT_OFFSET_CFG_EEE_ZERO_CNT                                                           (0)
#define PHG_GEPHY_LINK_SIGNAL_CNT_OFFSET_CFG_EEE_ZERO_CNT_WIDTH                                                    (11)
#define PHG_GEPHY_LINK_SIGNAL_CNT_OFFSET_RSVD0                                                                     (11)
#define PHG_GEPHY_LINK_SIGNAL_CNT_OFFSET_RSVD0_WIDTH                                                                (4)
#define PHG_GEPHY_LINK_SIGNAL_CNT_OFFSET_EEE_ZERO_CNT_EN                                                           (15)
#define PHG_GEPHY_LINK_SIGNAL_CNT_OFFSET_EEE_ZERO_CNT_EN_WIDTH                                                      (1)
typedef union PHG_GEPHY_LINK_SIGNAL_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_eee_zero_cnt:PHG_GEPHY_LINK_SIGNAL_CNT_OFFSET_CFG_EEE_ZERO_CNT_WIDTH;                               //[10: 0]
        jl_uint32 rsvd0:PHG_GEPHY_LINK_SIGNAL_CNT_OFFSET_RSVD0_WIDTH;                                                     //[14:11]
        jl_uint32 eee_zero_cnt_en:PHG_GEPHY_LINK_SIGNAL_CNT_OFFSET_EEE_ZERO_CNT_EN_WIDTH;                                 //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_LINK_SIGNAL_CNT_OFFSET_RSVD1_WIDTH;                                                     //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_LINK_SIGNAL_CNT_ENTRY_SIZE];
} PHG_GEPHY_LINK_SIGNAL_CNT_t;

#define PHG_GEPHY_SRSVD_6                                                                      ((jl_uint32)0x00244444U)
#define PHG_GEPHY_SRSVD_6_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_SRSVD_6_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_SRSVD_6_OFFSET_RSVD1                                                                             (16)
#define PHG_GEPHY_SRSVD_6_OFFSET_RSVD1_WIDTH                                                                       (16)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_SKEW_TIMEOUT                                                                   (0)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_SKEW_TIMEOUT_WIDTH                                                             (1)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_PCS_RDY_SW_RD                                                                  (1)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_PCS_RDY_SW_RD_WIDTH                                                            (1)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_RXDV_TIMEOUT                                                                   (2)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_RXDV_TIMEOUT_WIDTH                                                             (1)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_REM_RCVR_STATUS                                                                (3)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_REM_RCVR_STATUS_WIDTH                                                          (1)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_BASE1000T_PMA_LINK_GOOD                                                        (4)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_BASE1000T_PMA_LINK_GOOD_WIDTH                                                  (1)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_REM_CNT_TIMEOUT                                                                (5)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_REM_CNT_TIMEOUT_WIDTH                                                          (1)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_GMII_RX_ENH1                                                                   (6)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_GMII_RX_ENH1_WIDTH                                                             (1)
#define PHG_GEPHY_SRSVD_6_OFFSET_RSVD0                                                                              (7)
#define PHG_GEPHY_SRSVD_6_OFFSET_RSVD0_WIDTH                                                                        (4)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_SKEW_TIMEOUT_CLR                                                              (11)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_SKEW_TIMEOUT_CLR_WIDTH                                                         (1)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_RX_SM_CLR                                                                     (12)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_RX_SM_CLR_WIDTH                                                                (1)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_PCS_RDY_SW_WR                                                                 (13)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_PCS_RDY_SW_WR_WIDTH                                                            (1)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_RXDV_TIMEOUT_EN                                                               (14)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_RXDV_TIMEOUT_EN_WIDTH                                                          (1)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_CEXT_DISABLE                                                                  (15)
#define PHG_GEPHY_SRSVD_6_OFFSET_ECO_CEXT_DISABLE_WIDTH                                                             (1)
typedef union PHG_GEPHY_SRSVD_6_u {
    struct __attribute__ ((packed)) {
        jl_uint32 eco_skew_timeout:PHG_GEPHY_SRSVD_6_OFFSET_ECO_SKEW_TIMEOUT_WIDTH;                                       //[ 0: 0]
        jl_uint32 eco_pcs_rdy_sw_rd:PHG_GEPHY_SRSVD_6_OFFSET_ECO_PCS_RDY_SW_RD_WIDTH;                                     //[ 1: 1]
        jl_uint32 eco_rxdv_timeout:PHG_GEPHY_SRSVD_6_OFFSET_ECO_RXDV_TIMEOUT_WIDTH;                                       //[ 2: 2]
        jl_uint32 eco_rem_rcvr_status:PHG_GEPHY_SRSVD_6_OFFSET_ECO_REM_RCVR_STATUS_WIDTH;                                 //[ 3: 3]
        jl_uint32 eco_base1000t_pma_link_good:PHG_GEPHY_SRSVD_6_OFFSET_ECO_BASE1000T_PMA_LINK_GOOD_WIDTH;                 //[ 4: 4]
        jl_uint32 eco_rem_cnt_timeout:PHG_GEPHY_SRSVD_6_OFFSET_ECO_REM_CNT_TIMEOUT_WIDTH;                                 //[ 5: 5]
        jl_uint32 eco_gmii_rx_enh1:PHG_GEPHY_SRSVD_6_OFFSET_ECO_GMII_RX_ENH1_WIDTH;                                       //[ 6: 6]
        jl_uint32 rsvd0:PHG_GEPHY_SRSVD_6_OFFSET_RSVD0_WIDTH;                                                             //[10: 7]
        jl_uint32 eco_skew_timeout_clr:PHG_GEPHY_SRSVD_6_OFFSET_ECO_SKEW_TIMEOUT_CLR_WIDTH;                               //[11:11]
        jl_uint32 eco_rx_sm_clr:PHG_GEPHY_SRSVD_6_OFFSET_ECO_RX_SM_CLR_WIDTH;                                             //[12:12]
        jl_uint32 eco_pcs_rdy_sw_wr:PHG_GEPHY_SRSVD_6_OFFSET_ECO_PCS_RDY_SW_WR_WIDTH;                                     //[13:13]
        jl_uint32 eco_rxdv_timeout_en:PHG_GEPHY_SRSVD_6_OFFSET_ECO_RXDV_TIMEOUT_EN_WIDTH;                                 //[14:14]
        jl_uint32 eco_cext_disable:PHG_GEPHY_SRSVD_6_OFFSET_ECO_CEXT_DISABLE_WIDTH;                                       //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_SRSVD_6_OFFSET_RSVD1_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_SRSVD_6_ENTRY_SIZE];
} PHG_GEPHY_SRSVD_6_t;

#define PHG_GEPHY_SRSVD_9                                                                      ((jl_uint32)0x00244448U)
#define PHG_GEPHY_SRSVD_9_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_SRSVD_9_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_SRSVD_9_OFFSET_RSVD0                                                                             (16)
#define PHG_GEPHY_SRSVD_9_OFFSET_RSVD0_WIDTH                                                                       (16)
#define PHG_GEPHY_SRSVD_9_OFFSET_ECO_CFG_REM_CNT                                                                    (0)
#define PHG_GEPHY_SRSVD_9_OFFSET_ECO_CFG_REM_CNT_WIDTH                                                             (16)
typedef union PHG_GEPHY_SRSVD_9_u {
    struct __attribute__ ((packed)) {
        jl_uint32 eco_cfg_rem_cnt:PHG_GEPHY_SRSVD_9_OFFSET_ECO_CFG_REM_CNT_WIDTH;                                         //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_SRSVD_9_OFFSET_RSVD0_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_SRSVD_9_ENTRY_SIZE];
} PHG_GEPHY_SRSVD_9_t;

#define PHG_GEPHY_DBG_CTRL0                                                                    ((jl_uint32)0x0024444CU)
#define PHG_GEPHY_DBG_CTRL0_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DBG_CTRL0_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DBG_CTRL0_OFFSET_RSVD1                                                                           (16)
#define PHG_GEPHY_DBG_CTRL0_OFFSET_RSVD1_WIDTH                                                                     (16)
#define PHG_GEPHY_DBG_CTRL0_OFFSET_RSVD0                                                                            (0)
#define PHG_GEPHY_DBG_CTRL0_OFFSET_RSVD0_WIDTH                                                                     (15)
#define PHG_GEPHY_DBG_CTRL0_OFFSET_DBG_ENABLE                                                                      (15)
#define PHG_GEPHY_DBG_CTRL0_OFFSET_DBG_ENABLE_WIDTH                                                                 (1)
typedef union PHG_GEPHY_DBG_CTRL0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd0:PHG_GEPHY_DBG_CTRL0_OFFSET_RSVD0_WIDTH;                                                           //[14: 0]
        jl_uint32 dbg_enable:PHG_GEPHY_DBG_CTRL0_OFFSET_DBG_ENABLE_WIDTH;                                                 //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_DBG_CTRL0_OFFSET_RSVD1_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DBG_CTRL0_ENTRY_SIZE];
} PHG_GEPHY_DBG_CTRL0_t;

#define PHG_GEPHY_DBG_CTRL1                                                                    ((jl_uint32)0x00244450U)
#define PHG_GEPHY_DBG_CTRL1_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DBG_CTRL1_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DBG_CTRL1_OFFSET_RSVD1                                                                           (16)
#define PHG_GEPHY_DBG_CTRL1_OFFSET_RSVD1_WIDTH                                                                     (16)
#define PHG_GEPHY_DBG_CTRL1_OFFSET_CPU_ADDR                                                                         (0)
#define PHG_GEPHY_DBG_CTRL1_OFFSET_CPU_ADDR_WIDTH                                                                   (8)
#define PHG_GEPHY_DBG_CTRL1_OFFSET_RSVD0                                                                            (8)
#define PHG_GEPHY_DBG_CTRL1_OFFSET_RSVD0_WIDTH                                                                      (5)
#define PHG_GEPHY_DBG_CTRL1_OFFSET_CPU_READY                                                                       (13)
#define PHG_GEPHY_DBG_CTRL1_OFFSET_CPU_READY_WIDTH                                                                  (1)
#define PHG_GEPHY_DBG_CTRL1_OFFSET_CPU_WE                                                                          (14)
#define PHG_GEPHY_DBG_CTRL1_OFFSET_CPU_WE_WIDTH                                                                     (1)
#define PHG_GEPHY_DBG_CTRL1_OFFSET_CPU_VALID                                                                       (15)
#define PHG_GEPHY_DBG_CTRL1_OFFSET_CPU_VALID_WIDTH                                                                  (1)
typedef union PHG_GEPHY_DBG_CTRL1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cpu_addr:PHG_GEPHY_DBG_CTRL1_OFFSET_CPU_ADDR_WIDTH;                                                     //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DBG_CTRL1_OFFSET_RSVD0_WIDTH;                                                           //[12: 8]
        jl_uint32 cpu_ready:PHG_GEPHY_DBG_CTRL1_OFFSET_CPU_READY_WIDTH;                                                   //[13:13]
        jl_uint32 cpu_we:PHG_GEPHY_DBG_CTRL1_OFFSET_CPU_WE_WIDTH;                                                         //[14:14]
        jl_uint32 cpu_valid:PHG_GEPHY_DBG_CTRL1_OFFSET_CPU_VALID_WIDTH;                                                   //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_DBG_CTRL1_OFFSET_RSVD1_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DBG_CTRL1_ENTRY_SIZE];
} PHG_GEPHY_DBG_CTRL1_t;

#define PHG_GEPHY_DBG_CTRL2                                                                    ((jl_uint32)0x00244454U)
#define PHG_GEPHY_DBG_CTRL2_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DBG_CTRL2_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DBG_CTRL2_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_DBG_CTRL2_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_DBG_CTRL2_OFFSET_CPU_RDATA                                                                        (0)
#define PHG_GEPHY_DBG_CTRL2_OFFSET_CPU_RDATA_WIDTH                                                                 (16)
typedef union PHG_GEPHY_DBG_CTRL2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cpu_rdata:PHG_GEPHY_DBG_CTRL2_OFFSET_CPU_RDATA_WIDTH;                                                   //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DBG_CTRL2_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DBG_CTRL2_ENTRY_SIZE];
} PHG_GEPHY_DBG_CTRL2_t;

#define PHG_GEPHY_DBG_CTRL3                                                                    ((jl_uint32)0x00244458U)
#define PHG_GEPHY_DBG_CTRL3_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DBG_CTRL3_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DBG_CTRL3_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_DBG_CTRL3_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_DBG_CTRL3_OFFSET_CPU_WDATA                                                                        (0)
#define PHG_GEPHY_DBG_CTRL3_OFFSET_CPU_WDATA_WIDTH                                                                 (16)
typedef union PHG_GEPHY_DBG_CTRL3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cpu_wdata:PHG_GEPHY_DBG_CTRL3_OFFSET_CPU_WDATA_WIDTH;                                                   //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DBG_CTRL3_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DBG_CTRL3_ENTRY_SIZE];
} PHG_GEPHY_DBG_CTRL3_t;

#define PHG_GEPHY_GWATCH_CFG1                                                                  ((jl_uint32)0x0024445CU)
#define PHG_GEPHY_GWATCH_CFG1_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GWATCH_CFG1_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_GWATCH_CFG1_OFFSET_RSVD1                                                                         (16)
#define PHG_GEPHY_GWATCH_CFG1_OFFSET_RSVD1_WIDTH                                                                   (16)
#define PHG_GEPHY_GWATCH_CFG1_OFFSET_WATCHDOG_CFG_SECOND                                                            (0)
#define PHG_GEPHY_GWATCH_CFG1_OFFSET_WATCHDOG_CFG_SECOND_WIDTH                                                     (12)
#define PHG_GEPHY_GWATCH_CFG1_OFFSET_RSVD0                                                                         (12)
#define PHG_GEPHY_GWATCH_CFG1_OFFSET_RSVD0_WIDTH                                                                    (3)
#define PHG_GEPHY_GWATCH_CFG1_OFFSET_WATCHDOG_START                                                                (15)
#define PHG_GEPHY_GWATCH_CFG1_OFFSET_WATCHDOG_START_WIDTH                                                           (1)
typedef union PHG_GEPHY_GWATCH_CFG1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 watchdog_cfg_second:PHG_GEPHY_GWATCH_CFG1_OFFSET_WATCHDOG_CFG_SECOND_WIDTH;                             //[11: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GWATCH_CFG1_OFFSET_RSVD0_WIDTH;                                                         //[14:12]
        jl_uint32 watchdog_start:PHG_GEPHY_GWATCH_CFG1_OFFSET_WATCHDOG_START_WIDTH;                                       //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_GWATCH_CFG1_OFFSET_RSVD1_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GWATCH_CFG1_ENTRY_SIZE];
} PHG_GEPHY_GWATCH_CFG1_t;

#define PHG_GEPHY_GWATCH_CFG2                                                                  ((jl_uint32)0x00244460U)
#define PHG_GEPHY_GWATCH_CFG2_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GWATCH_CFG2_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_GWATCH_CFG2_OFFSET_RSVD0                                                                         (10)
#define PHG_GEPHY_GWATCH_CFG2_OFFSET_RSVD0_WIDTH                                                                   (22)
#define PHG_GEPHY_GWATCH_CFG2_OFFSET_WATCHDOG_CFG_MILISECOND                                                        (0)
#define PHG_GEPHY_GWATCH_CFG2_OFFSET_WATCHDOG_CFG_MILISECOND_WIDTH                                                 (10)
typedef union PHG_GEPHY_GWATCH_CFG2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 watchdog_cfg_milisecond:PHG_GEPHY_GWATCH_CFG2_OFFSET_WATCHDOG_CFG_MILISECOND_WIDTH;                     //[ 9: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GWATCH_CFG2_OFFSET_RSVD0_WIDTH;                                                         //[31:10]
    } BF;
    jl_uint32 val[PHG_GEPHY_GWATCH_CFG2_ENTRY_SIZE];
} PHG_GEPHY_GWATCH_CFG2_t;

#define PHG_GEPHY_GWATCH_CFG3                                                                  ((jl_uint32)0x00244464U)
#define PHG_GEPHY_GWATCH_CFG3_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GWATCH_CFG3_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_GWATCH_CFG3_OFFSET_RSVD0                                                                         (10)
#define PHG_GEPHY_GWATCH_CFG3_OFFSET_RSVD0_WIDTH                                                                   (22)
#define PHG_GEPHY_GWATCH_CFG3_OFFSET_WATCHDOG_CFG_MICROSECOND                                                       (0)
#define PHG_GEPHY_GWATCH_CFG3_OFFSET_WATCHDOG_CFG_MICROSECOND_WIDTH                                                (10)
typedef union PHG_GEPHY_GWATCH_CFG3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 watchdog_cfg_microsecond:PHG_GEPHY_GWATCH_CFG3_OFFSET_WATCHDOG_CFG_MICROSECOND_WIDTH;                   //[ 9: 0]
        jl_uint32 rsvd0:PHG_GEPHY_GWATCH_CFG3_OFFSET_RSVD0_WIDTH;                                                         //[31:10]
    } BF;
    jl_uint32 val[PHG_GEPHY_GWATCH_CFG3_ENTRY_SIZE];
} PHG_GEPHY_GWATCH_CFG3_t;

#define PHG_GEPHY_GB_INTST_2                                                                   ((jl_uint32)0x00244468U)
#define PHG_GEPHY_GB_INTST_2_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GB_INTST_2_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_GB_INTST_2_OFFSET_RSVD0                                                                           (3)
#define PHG_GEPHY_GB_INTST_2_OFFSET_RSVD0_WIDTH                                                                    (29)
#define PHG_GEPHY_GB_INTST_2_OFFSET_SKEW_TIMEOUT_EN                                                                 (0)
#define PHG_GEPHY_GB_INTST_2_OFFSET_SKEW_TIMEOUT_EN_WIDTH                                                           (1)
#define PHG_GEPHY_GB_INTST_2_OFFSET_WATCHDOG_TIMEOUT                                                                (1)
#define PHG_GEPHY_GB_INTST_2_OFFSET_WATCHDOG_TIMEOUT_WIDTH                                                          (1)
#define PHG_GEPHY_GB_INTST_2_OFFSET_MAXWAIT_TIMER_TIMEOUT                                                           (2)
#define PHG_GEPHY_GB_INTST_2_OFFSET_MAXWAIT_TIMER_TIMEOUT_WIDTH                                                     (1)
typedef union PHG_GEPHY_GB_INTST_2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 skew_timeout_en:PHG_GEPHY_GB_INTST_2_OFFSET_SKEW_TIMEOUT_EN_WIDTH;                                      //[ 0: 0]
        jl_uint32 watchdog_timeout:PHG_GEPHY_GB_INTST_2_OFFSET_WATCHDOG_TIMEOUT_WIDTH;                                    //[ 1: 1]
        jl_uint32 maxwait_timer_timeout:PHG_GEPHY_GB_INTST_2_OFFSET_MAXWAIT_TIMER_TIMEOUT_WIDTH;                          //[ 2: 2]
        jl_uint32 rsvd0:PHG_GEPHY_GB_INTST_2_OFFSET_RSVD0_WIDTH;                                                          //[31: 3]
    } BF;
    jl_uint32 val[PHG_GEPHY_GB_INTST_2_ENTRY_SIZE];
} PHG_GEPHY_GB_INTST_2_t;

#define PHG_GEPHY_GB_INTCLR_2                                                                  ((jl_uint32)0x0024446CU)
#define PHG_GEPHY_GB_INTCLR_2_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_GB_INTCLR_2_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_GB_INTCLR_2_OFFSET_RSVD1                                                                         (16)
#define PHG_GEPHY_GB_INTCLR_2_OFFSET_RSVD1_WIDTH                                                                   (16)
#define PHG_GEPHY_GB_INTCLR_2_OFFSET_SKEW_TIMEOUT_CLR                                                               (0)
#define PHG_GEPHY_GB_INTCLR_2_OFFSET_SKEW_TIMEOUT_CLR_WIDTH                                                         (1)
#define PHG_GEPHY_GB_INTCLR_2_OFFSET_WATCHDOG_CLR                                                                   (1)
#define PHG_GEPHY_GB_INTCLR_2_OFFSET_WATCHDOG_CLR_WIDTH                                                             (1)
#define PHG_GEPHY_GB_INTCLR_2_OFFSET_MAXWAIT_TIMER_TIMEOUT_CLR                                                      (2)
#define PHG_GEPHY_GB_INTCLR_2_OFFSET_MAXWAIT_TIMER_TIMEOUT_CLR_WIDTH                                                (1)
#define PHG_GEPHY_GB_INTCLR_2_OFFSET_RSVD0                                                                          (3)
#define PHG_GEPHY_GB_INTCLR_2_OFFSET_RSVD0_WIDTH                                                                   (11)
#define PHG_GEPHY_GB_INTCLR_2_OFFSET_PHY_EEE_CFG                                                                   (14)
#define PHG_GEPHY_GB_INTCLR_2_OFFSET_PHY_EEE_CFG_WIDTH                                                              (1)
#define PHG_GEPHY_GB_INTCLR_2_OFFSET_PHY_CFG                                                                       (15)
#define PHG_GEPHY_GB_INTCLR_2_OFFSET_PHY_CFG_WIDTH                                                                  (1)
typedef union PHG_GEPHY_GB_INTCLR_2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 skew_timeout_clr:PHG_GEPHY_GB_INTCLR_2_OFFSET_SKEW_TIMEOUT_CLR_WIDTH;                                   //[ 0: 0]
        jl_uint32 watchdog_clr:PHG_GEPHY_GB_INTCLR_2_OFFSET_WATCHDOG_CLR_WIDTH;                                           //[ 1: 1]
        jl_uint32 maxwait_timer_timeout_clr:PHG_GEPHY_GB_INTCLR_2_OFFSET_MAXWAIT_TIMER_TIMEOUT_CLR_WIDTH;                 //[ 2: 2]
        jl_uint32 rsvd0:PHG_GEPHY_GB_INTCLR_2_OFFSET_RSVD0_WIDTH;                                                         //[13: 3]
        jl_uint32 phy_eee_cfg:PHG_GEPHY_GB_INTCLR_2_OFFSET_PHY_EEE_CFG_WIDTH;                                             //[14:14]
        jl_uint32 phy_cfg:PHG_GEPHY_GB_INTCLR_2_OFFSET_PHY_CFG_WIDTH;                                                     //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_GB_INTCLR_2_OFFSET_RSVD1_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_GB_INTCLR_2_ENTRY_SIZE];
} PHG_GEPHY_GB_INTCLR_2_t;

#define PHG_GEPHY_CPSP_CON3                                                                    ((jl_uint32)0x00244470U)
#define PHG_GEPHY_CPSP_CON3_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPSP_CON3_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_CPSP_CON3_OFFSET_RSVD3                                                                           (15)
#define PHG_GEPHY_CPSP_CON3_OFFSET_RSVD3_WIDTH                                                                     (17)
#define PHG_GEPHY_CPSP_CON3_OFFSET_ECO_YD_SEL                                                                       (0)
#define PHG_GEPHY_CPSP_CON3_OFFSET_ECO_YD_SEL_WIDTH                                                                 (1)
#define PHG_GEPHY_CPSP_CON3_OFFSET_RSVD2                                                                            (1)
#define PHG_GEPHY_CPSP_CON3_OFFSET_RSVD2_WIDTH                                                                      (2)
#define PHG_GEPHY_CPSP_CON3_OFFSET_COPPER_STUB_TEST_EN                                                              (3)
#define PHG_GEPHY_CPSP_CON3_OFFSET_COPPER_STUB_TEST_EN_WIDTH                                                        (1)
#define PHG_GEPHY_CPSP_CON3_OFFSET_RSVD1                                                                            (4)
#define PHG_GEPHY_CPSP_CON3_OFFSET_RSVD1_WIDTH                                                                      (3)
#define PHG_GEPHY_CPSP_CON3_OFFSET_COPPER_COLLISION_TEST_STATUS                                                     (7)
#define PHG_GEPHY_CPSP_CON3_OFFSET_COPPER_COLLISION_TEST_STATUS_WIDTH                                               (1)
#define PHG_GEPHY_CPSP_CON3_OFFSET_RSVD0                                                                            (8)
#define PHG_GEPHY_CPSP_CON3_OFFSET_RSVD0_WIDTH                                                                      (6)
#define PHG_GEPHY_CPSP_CON3_OFFSET_ECO_GMII_TXEN_SEL                                                               (14)
#define PHG_GEPHY_CPSP_CON3_OFFSET_ECO_GMII_TXEN_SEL_WIDTH                                                          (1)
typedef union PHG_GEPHY_CPSP_CON3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 eco_yd_sel:PHG_GEPHY_CPSP_CON3_OFFSET_ECO_YD_SEL_WIDTH;                                                 //[ 0: 0]
        jl_uint32 rsvd2:PHG_GEPHY_CPSP_CON3_OFFSET_RSVD2_WIDTH;                                                           //[ 2: 1]
        jl_uint32 copper_stub_test_en:PHG_GEPHY_CPSP_CON3_OFFSET_COPPER_STUB_TEST_EN_WIDTH;                               //[ 3: 3]
        jl_uint32 rsvd1:PHG_GEPHY_CPSP_CON3_OFFSET_RSVD1_WIDTH;                                                           //[ 6: 4]
        jl_uint32 copper_collision_test_status:PHG_GEPHY_CPSP_CON3_OFFSET_COPPER_COLLISION_TEST_STATUS_WIDTH;             //[ 7: 7]
        jl_uint32 rsvd0:PHG_GEPHY_CPSP_CON3_OFFSET_RSVD0_WIDTH;                                                           //[13: 8]
        jl_uint32 eco_gmii_txen_sel:PHG_GEPHY_CPSP_CON3_OFFSET_ECO_GMII_TXEN_SEL_WIDTH;                                   //[14:14]
        jl_uint32 rsvd3:PHG_GEPHY_CPSP_CON3_OFFSET_RSVD3_WIDTH;                                                           //[31:15]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPSP_CON3_ENTRY_SIZE];
} PHG_GEPHY_CPSP_CON3_t;

#define PHG_GEPHY_CRC_CHK_CONFIG                                                               ((jl_uint32)0x00244474U)
#define PHG_GEPHY_CRC_CHK_CONFIG_NUM                                                           ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CRC_CHK_CONFIG_ENTRY_SIZE                                                                         (1)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_RSVD0                                                                      (12)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_RSVD0_WIDTH                                                                (20)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_CRC_OK_CNT_LOW_CLR                                                          (0)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_CRC_OK_CNT_LOW_CLR_WIDTH                                                    (1)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_CRC_OK_CNT_HIGH_CLR                                                         (1)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_CRC_OK_CNT_HIGH_CLR_WIDTH                                                   (1)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_CRC_ERR_CNT_CLR                                                             (2)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_CRC_ERR_CNT_CLR_WIDTH                                                       (1)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_LPI_CNT_CLR                                                             (3)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_LPI_CNT_CLR_WIDTH                                                       (1)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_RSVD_CNT_CLR                                                            (4)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_RSVD_CNT_CLR_WIDTH                                                      (1)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_FALSE_CARRIER_CNT_CLR                                                   (5)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_FALSE_CARRIER_CNT_CLR_WIDTH                                             (1)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_CARRIER_CNT_CLR                                                         (6)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_CARRIER_CNT_CLR_WIDTH                                                   (1)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_CARRIER_ERR_CNT_CLR                                                     (7)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_CARRIER_ERR_CNT_CLR_WIDTH                                               (1)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_DATA_ERR_CNT_CLR                                                        (8)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_DATA_ERR_CNT_CLR_WIDTH                                                  (1)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_IDLE_CNT_CLR                                                            (9)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_IDLE_CNT_CLR_WIDTH                                                      (1)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_PREAMBLE_CNT_CLR                                                       (10)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_PREAMBLE_CNT_CLR_WIDTH                                                  (1)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_SFD_CNT_CLR                                                            (11)
#define PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_SFD_CNT_CLR_WIDTH                                                       (1)
typedef union PHG_GEPHY_CRC_CHK_CONFIG_u {
    struct __attribute__ ((packed)) {
        jl_uint32 crc_ok_cnt_low_clr:PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_CRC_OK_CNT_LOW_CLR_WIDTH;                            //[ 0: 0]
        jl_uint32 crc_ok_cnt_high_clr:PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_CRC_OK_CNT_HIGH_CLR_WIDTH;                          //[ 1: 1]
        jl_uint32 crc_err_cnt_clr:PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_CRC_ERR_CNT_CLR_WIDTH;                                  //[ 2: 2]
        jl_uint32 err_lpi_cnt_clr:PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_LPI_CNT_CLR_WIDTH;                                  //[ 3: 3]
        jl_uint32 err_rsvd_cnt_clr:PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_RSVD_CNT_CLR_WIDTH;                                //[ 4: 4]
        jl_uint32 err_false_carrier_cnt_clr:PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_FALSE_CARRIER_CNT_CLR_WIDTH;              //[ 5: 5]
        jl_uint32 err_carrier_cnt_clr:PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_CARRIER_CNT_CLR_WIDTH;                          //[ 6: 6]
        jl_uint32 err_carrier_err_cnt_clr:PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_CARRIER_ERR_CNT_CLR_WIDTH;                  //[ 7: 7]
        jl_uint32 err_data_err_cnt_clr:PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_DATA_ERR_CNT_CLR_WIDTH;                        //[ 8: 8]
        jl_uint32 err_idle_cnt_clr:PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_IDLE_CNT_CLR_WIDTH;                                //[ 9: 9]
        jl_uint32 err_preamble_cnt_clr:PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_PREAMBLE_CNT_CLR_WIDTH;                        //[10:10]
        jl_uint32 err_sfd_cnt_clr:PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_ERR_SFD_CNT_CLR_WIDTH;                                  //[11:11]
        jl_uint32 rsvd0:PHG_GEPHY_CRC_CHK_CONFIG_OFFSET_RSVD0_WIDTH;                                                      //[31:12]
    } BF;
    jl_uint32 val[PHG_GEPHY_CRC_CHK_CONFIG_ENTRY_SIZE];
} PHG_GEPHY_CRC_CHK_CONFIG_t;

#define PHG_GEPHY_CRC_OK_CNT_LOW                                                               ((jl_uint32)0x00244478U)
#define PHG_GEPHY_CRC_OK_CNT_LOW_NUM                                                           ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CRC_OK_CNT_LOW_ENTRY_SIZE                                                                         (1)
#define PHG_GEPHY_CRC_OK_CNT_LOW_OFFSET_RSVD0                                                                       (8)
#define PHG_GEPHY_CRC_OK_CNT_LOW_OFFSET_RSVD0_WIDTH                                                                (24)
#define PHG_GEPHY_CRC_OK_CNT_LOW_OFFSET_CRC_OK_CNT_LOW                                                              (0)
#define PHG_GEPHY_CRC_OK_CNT_LOW_OFFSET_CRC_OK_CNT_LOW_WIDTH                                                        (8)
typedef union PHG_GEPHY_CRC_OK_CNT_LOW_u {
    struct __attribute__ ((packed)) {
        jl_uint32 crc_ok_cnt_low:PHG_GEPHY_CRC_OK_CNT_LOW_OFFSET_CRC_OK_CNT_LOW_WIDTH;                                    //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CRC_OK_CNT_LOW_OFFSET_RSVD0_WIDTH;                                                      //[31: 8]
    } BF;
    jl_uint32 val[PHG_GEPHY_CRC_OK_CNT_LOW_ENTRY_SIZE];
} PHG_GEPHY_CRC_OK_CNT_LOW_t;

#define PHG_GEPHY_CRC_OK_CNT_HIGH                                                              ((jl_uint32)0x0024447CU)
#define PHG_GEPHY_CRC_OK_CNT_HIGH_NUM                                                          ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CRC_OK_CNT_HIGH_ENTRY_SIZE                                                                        (1)
#define PHG_GEPHY_CRC_OK_CNT_HIGH_OFFSET_RSVD0                                                                      (8)
#define PHG_GEPHY_CRC_OK_CNT_HIGH_OFFSET_RSVD0_WIDTH                                                               (24)
#define PHG_GEPHY_CRC_OK_CNT_HIGH_OFFSET_CRC_OK_CNT_HIGH                                                            (0)
#define PHG_GEPHY_CRC_OK_CNT_HIGH_OFFSET_CRC_OK_CNT_HIGH_WIDTH                                                      (8)
typedef union PHG_GEPHY_CRC_OK_CNT_HIGH_u {
    struct __attribute__ ((packed)) {
        jl_uint32 crc_ok_cnt_high:PHG_GEPHY_CRC_OK_CNT_HIGH_OFFSET_CRC_OK_CNT_HIGH_WIDTH;                                 //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CRC_OK_CNT_HIGH_OFFSET_RSVD0_WIDTH;                                                     //[31: 8]
    } BF;
    jl_uint32 val[PHG_GEPHY_CRC_OK_CNT_HIGH_ENTRY_SIZE];
} PHG_GEPHY_CRC_OK_CNT_HIGH_t;

#define PHG_GEPHY_CRC_ERR_CNT                                                                  ((jl_uint32)0x00244480U)
#define PHG_GEPHY_CRC_ERR_CNT_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CRC_ERR_CNT_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_CRC_ERR_CNT_OFFSET_RSVD0                                                                          (8)
#define PHG_GEPHY_CRC_ERR_CNT_OFFSET_RSVD0_WIDTH                                                                   (24)
#define PHG_GEPHY_CRC_ERR_CNT_OFFSET_CRC_ERR_CNT                                                                    (0)
#define PHG_GEPHY_CRC_ERR_CNT_OFFSET_CRC_ERR_CNT_WIDTH                                                              (8)
typedef union PHG_GEPHY_CRC_ERR_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 crc_err_cnt:PHG_GEPHY_CRC_ERR_CNT_OFFSET_CRC_ERR_CNT_WIDTH;                                             //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CRC_ERR_CNT_OFFSET_RSVD0_WIDTH;                                                         //[31: 8]
    } BF;
    jl_uint32 val[PHG_GEPHY_CRC_ERR_CNT_ENTRY_SIZE];
} PHG_GEPHY_CRC_ERR_CNT_t;

#define PHG_GEPHY_ERR_LPI_CNT                                                                  ((jl_uint32)0x00244484U)
#define PHG_GEPHY_ERR_LPI_CNT_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ERR_LPI_CNT_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_ERR_LPI_CNT_OFFSET_RSVD0                                                                          (8)
#define PHG_GEPHY_ERR_LPI_CNT_OFFSET_RSVD0_WIDTH                                                                   (24)
#define PHG_GEPHY_ERR_LPI_CNT_OFFSET_ERR_LPI_CNT                                                                    (0)
#define PHG_GEPHY_ERR_LPI_CNT_OFFSET_ERR_LPI_CNT_WIDTH                                                              (8)
typedef union PHG_GEPHY_ERR_LPI_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 err_lpi_cnt:PHG_GEPHY_ERR_LPI_CNT_OFFSET_ERR_LPI_CNT_WIDTH;                                             //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_ERR_LPI_CNT_OFFSET_RSVD0_WIDTH;                                                         //[31: 8]
    } BF;
    jl_uint32 val[PHG_GEPHY_ERR_LPI_CNT_ENTRY_SIZE];
} PHG_GEPHY_ERR_LPI_CNT_t;

#define PHG_GEPHY_ERR_RSVD_CNT                                                                 ((jl_uint32)0x00244488U)
#define PHG_GEPHY_ERR_RSVD_CNT_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ERR_RSVD_CNT_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_ERR_RSVD_CNT_OFFSET_RSVD0                                                                         (8)
#define PHG_GEPHY_ERR_RSVD_CNT_OFFSET_RSVD0_WIDTH                                                                  (24)
#define PHG_GEPHY_ERR_RSVD_CNT_OFFSET_ERR_RSVD_CNT                                                                  (0)
#define PHG_GEPHY_ERR_RSVD_CNT_OFFSET_ERR_RSVD_CNT_WIDTH                                                            (8)
typedef union PHG_GEPHY_ERR_RSVD_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 err_rsvd_cnt:PHG_GEPHY_ERR_RSVD_CNT_OFFSET_ERR_RSVD_CNT_WIDTH;                                          //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_ERR_RSVD_CNT_OFFSET_RSVD0_WIDTH;                                                        //[31: 8]
    } BF;
    jl_uint32 val[PHG_GEPHY_ERR_RSVD_CNT_ENTRY_SIZE];
} PHG_GEPHY_ERR_RSVD_CNT_t;

#define PHG_GEPHY_ERR_FALSE_CARRIER_CNT                                                        ((jl_uint32)0x0024448CU)
#define PHG_GEPHY_ERR_FALSE_CARRIER_CNT_NUM                                                    ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ERR_FALSE_CARRIER_CNT_ENTRY_SIZE                                                                  (1)
#define PHG_GEPHY_ERR_FALSE_CARRIER_CNT_OFFSET_RSVD0                                                                (8)
#define PHG_GEPHY_ERR_FALSE_CARRIER_CNT_OFFSET_RSVD0_WIDTH                                                         (24)
#define PHG_GEPHY_ERR_FALSE_CARRIER_CNT_OFFSET_ERR_FALSE_CARRIER_CNT                                                (0)
#define PHG_GEPHY_ERR_FALSE_CARRIER_CNT_OFFSET_ERR_FALSE_CARRIER_CNT_WIDTH                                          (8)
typedef union PHG_GEPHY_ERR_FALSE_CARRIER_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 err_false_carrier_cnt:PHG_GEPHY_ERR_FALSE_CARRIER_CNT_OFFSET_ERR_FALSE_CARRIER_CNT_WIDTH;               //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_ERR_FALSE_CARRIER_CNT_OFFSET_RSVD0_WIDTH;                                               //[31: 8]
    } BF;
    jl_uint32 val[PHG_GEPHY_ERR_FALSE_CARRIER_CNT_ENTRY_SIZE];
} PHG_GEPHY_ERR_FALSE_CARRIER_CNT_t;

#define PHG_GEPHY_ERR_CARRIER_CNT                                                              ((jl_uint32)0x00244490U)
#define PHG_GEPHY_ERR_CARRIER_CNT_NUM                                                          ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ERR_CARRIER_CNT_ENTRY_SIZE                                                                        (1)
#define PHG_GEPHY_ERR_CARRIER_CNT_OFFSET_RSVD0                                                                      (8)
#define PHG_GEPHY_ERR_CARRIER_CNT_OFFSET_RSVD0_WIDTH                                                               (24)
#define PHG_GEPHY_ERR_CARRIER_CNT_OFFSET_ERR_CARRIER_CNT                                                            (0)
#define PHG_GEPHY_ERR_CARRIER_CNT_OFFSET_ERR_CARRIER_CNT_WIDTH                                                      (8)
typedef union PHG_GEPHY_ERR_CARRIER_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 err_carrier_cnt:PHG_GEPHY_ERR_CARRIER_CNT_OFFSET_ERR_CARRIER_CNT_WIDTH;                                 //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_ERR_CARRIER_CNT_OFFSET_RSVD0_WIDTH;                                                     //[31: 8]
    } BF;
    jl_uint32 val[PHG_GEPHY_ERR_CARRIER_CNT_ENTRY_SIZE];
} PHG_GEPHY_ERR_CARRIER_CNT_t;

#define PHG_GEPHY_ERR_CARRIER_ERR_CNT                                                          ((jl_uint32)0x00244494U)
#define PHG_GEPHY_ERR_CARRIER_ERR_CNT_NUM                                                      ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ERR_CARRIER_ERR_CNT_ENTRY_SIZE                                                                    (1)
#define PHG_GEPHY_ERR_CARRIER_ERR_CNT_OFFSET_RSVD0                                                                  (8)
#define PHG_GEPHY_ERR_CARRIER_ERR_CNT_OFFSET_RSVD0_WIDTH                                                           (24)
#define PHG_GEPHY_ERR_CARRIER_ERR_CNT_OFFSET_ERR_CARRIER_ERR_CNT                                                    (0)
#define PHG_GEPHY_ERR_CARRIER_ERR_CNT_OFFSET_ERR_CARRIER_ERR_CNT_WIDTH                                              (8)
typedef union PHG_GEPHY_ERR_CARRIER_ERR_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 err_carrier_err_cnt:PHG_GEPHY_ERR_CARRIER_ERR_CNT_OFFSET_ERR_CARRIER_ERR_CNT_WIDTH;                     //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_ERR_CARRIER_ERR_CNT_OFFSET_RSVD0_WIDTH;                                                 //[31: 8]
    } BF;
    jl_uint32 val[PHG_GEPHY_ERR_CARRIER_ERR_CNT_ENTRY_SIZE];
} PHG_GEPHY_ERR_CARRIER_ERR_CNT_t;

#define PHG_GEPHY_ERR_DATA_ERR_CNT                                                             ((jl_uint32)0x00244498U)
#define PHG_GEPHY_ERR_DATA_ERR_CNT_NUM                                                         ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ERR_DATA_ERR_CNT_ENTRY_SIZE                                                                       (1)
#define PHG_GEPHY_ERR_DATA_ERR_CNT_OFFSET_RSVD0                                                                     (8)
#define PHG_GEPHY_ERR_DATA_ERR_CNT_OFFSET_RSVD0_WIDTH                                                              (24)
#define PHG_GEPHY_ERR_DATA_ERR_CNT_OFFSET_ERR_DATA_ERR_CNT                                                          (0)
#define PHG_GEPHY_ERR_DATA_ERR_CNT_OFFSET_ERR_DATA_ERR_CNT_WIDTH                                                    (8)
typedef union PHG_GEPHY_ERR_DATA_ERR_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 err_data_err_cnt:PHG_GEPHY_ERR_DATA_ERR_CNT_OFFSET_ERR_DATA_ERR_CNT_WIDTH;                              //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_ERR_DATA_ERR_CNT_OFFSET_RSVD0_WIDTH;                                                    //[31: 8]
    } BF;
    jl_uint32 val[PHG_GEPHY_ERR_DATA_ERR_CNT_ENTRY_SIZE];
} PHG_GEPHY_ERR_DATA_ERR_CNT_t;

#define PHG_GEPHY_ERR_IDLE_CNT                                                                 ((jl_uint32)0x0024449CU)
#define PHG_GEPHY_ERR_IDLE_CNT_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ERR_IDLE_CNT_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_ERR_IDLE_CNT_OFFSET_RSVD0                                                                         (8)
#define PHG_GEPHY_ERR_IDLE_CNT_OFFSET_RSVD0_WIDTH                                                                  (24)
#define PHG_GEPHY_ERR_IDLE_CNT_OFFSET_ERR_IDLE_CNT                                                                  (0)
#define PHG_GEPHY_ERR_IDLE_CNT_OFFSET_ERR_IDLE_CNT_WIDTH                                                            (8)
typedef union PHG_GEPHY_ERR_IDLE_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 err_idle_cnt:PHG_GEPHY_ERR_IDLE_CNT_OFFSET_ERR_IDLE_CNT_WIDTH;                                          //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_ERR_IDLE_CNT_OFFSET_RSVD0_WIDTH;                                                        //[31: 8]
    } BF;
    jl_uint32 val[PHG_GEPHY_ERR_IDLE_CNT_ENTRY_SIZE];
} PHG_GEPHY_ERR_IDLE_CNT_t;

#define PHG_GEPHY_ERR_PREAMBLE_CNT                                                             ((jl_uint32)0x002444A0U)
#define PHG_GEPHY_ERR_PREAMBLE_CNT_NUM                                                         ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ERR_PREAMBLE_CNT_ENTRY_SIZE                                                                       (1)
#define PHG_GEPHY_ERR_PREAMBLE_CNT_OFFSET_RSVD0                                                                     (8)
#define PHG_GEPHY_ERR_PREAMBLE_CNT_OFFSET_RSVD0_WIDTH                                                              (24)
#define PHG_GEPHY_ERR_PREAMBLE_CNT_OFFSET_ERR_PREAMBLE_CNT                                                          (0)
#define PHG_GEPHY_ERR_PREAMBLE_CNT_OFFSET_ERR_PREAMBLE_CNT_WIDTH                                                    (8)
typedef union PHG_GEPHY_ERR_PREAMBLE_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 err_preamble_cnt:PHG_GEPHY_ERR_PREAMBLE_CNT_OFFSET_ERR_PREAMBLE_CNT_WIDTH;                              //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_ERR_PREAMBLE_CNT_OFFSET_RSVD0_WIDTH;                                                    //[31: 8]
    } BF;
    jl_uint32 val[PHG_GEPHY_ERR_PREAMBLE_CNT_ENTRY_SIZE];
} PHG_GEPHY_ERR_PREAMBLE_CNT_t;

#define PHG_GEPHY_ERR_SFD_CNT                                                                  ((jl_uint32)0x002444A4U)
#define PHG_GEPHY_ERR_SFD_CNT_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ERR_SFD_CNT_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_ERR_SFD_CNT_OFFSET_RSVD0                                                                          (8)
#define PHG_GEPHY_ERR_SFD_CNT_OFFSET_RSVD0_WIDTH                                                                   (24)
#define PHG_GEPHY_ERR_SFD_CNT_OFFSET_ERR_SFD_CNT                                                                    (0)
#define PHG_GEPHY_ERR_SFD_CNT_OFFSET_ERR_SFD_CNT_WIDTH                                                              (8)
typedef union PHG_GEPHY_ERR_SFD_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 err_sfd_cnt:PHG_GEPHY_ERR_SFD_CNT_OFFSET_ERR_SFD_CNT_WIDTH;                                             //[ 7: 0]
        jl_uint32 rsvd0:PHG_GEPHY_ERR_SFD_CNT_OFFSET_RSVD0_WIDTH;                                                         //[31: 8]
    } BF;
    jl_uint32 val[PHG_GEPHY_ERR_SFD_CNT_ENTRY_SIZE];
} PHG_GEPHY_ERR_SFD_CNT_t;

#define PHG_GEPHY_BASET1000T_PCS_RSVD0                                                         ((jl_uint32)0x002444A8U)
#define PHG_GEPHY_BASET1000T_PCS_RSVD0_NUM                                                     ((jl_uint32)0x00000001U)
#define PHG_GEPHY_BASET1000T_PCS_RSVD0_ENTRY_SIZE                                                                   (1)
#define PHG_GEPHY_BASET1000T_PCS_RSVD0_OFFSET_RSVD0                                                                (16)
#define PHG_GEPHY_BASET1000T_PCS_RSVD0_OFFSET_RSVD0_WIDTH                                                          (16)
#define PHG_GEPHY_BASET1000T_PCS_RSVD0_OFFSET_BASET1000T_PCS_RSVD0                                                  (0)
#define PHG_GEPHY_BASET1000T_PCS_RSVD0_OFFSET_BASET1000T_PCS_RSVD0_WIDTH                                           (16)
typedef union PHG_GEPHY_BASET1000T_PCS_RSVD0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 baset1000t_pcs_rsvd0:PHG_GEPHY_BASET1000T_PCS_RSVD0_OFFSET_BASET1000T_PCS_RSVD0_WIDTH;                  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_BASET1000T_PCS_RSVD0_OFFSET_RSVD0_WIDTH;                                                //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_BASET1000T_PCS_RSVD0_ENTRY_SIZE];
} PHG_GEPHY_BASET1000T_PCS_RSVD0_t;

#define PHG_GEPHY_BASET1000T_PCS_RSVD1                                                         ((jl_uint32)0x002444ACU)
#define PHG_GEPHY_BASET1000T_PCS_RSVD1_NUM                                                     ((jl_uint32)0x00000001U)
#define PHG_GEPHY_BASET1000T_PCS_RSVD1_ENTRY_SIZE                                                                   (1)
#define PHG_GEPHY_BASET1000T_PCS_RSVD1_OFFSET_RSVD0                                                                (16)
#define PHG_GEPHY_BASET1000T_PCS_RSVD1_OFFSET_RSVD0_WIDTH                                                          (16)
#define PHG_GEPHY_BASET1000T_PCS_RSVD1_OFFSET_BASET1000T_PCS_RSVD1                                                  (0)
#define PHG_GEPHY_BASET1000T_PCS_RSVD1_OFFSET_BASET1000T_PCS_RSVD1_WIDTH                                           (16)
typedef union PHG_GEPHY_BASET1000T_PCS_RSVD1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 baset1000t_pcs_rsvd1:PHG_GEPHY_BASET1000T_PCS_RSVD1_OFFSET_BASET1000T_PCS_RSVD1_WIDTH;                  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_BASET1000T_PCS_RSVD1_OFFSET_RSVD0_WIDTH;                                                //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_BASET1000T_PCS_RSVD1_ENTRY_SIZE];
} PHG_GEPHY_BASET1000T_PCS_RSVD1_t;

#define PHG_GEPHY_DBG_MEM_EMA                                                                  ((jl_uint32)0x002444B0U)
#define PHG_GEPHY_DBG_MEM_EMA_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DBG_MEM_EMA_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_DBG_MEM_EMA_OFFSET_RSVD0                                                                          (3)
#define PHG_GEPHY_DBG_MEM_EMA_OFFSET_RSVD0_WIDTH                                                                   (29)
#define PHG_GEPHY_DBG_MEM_EMA_OFFSET_CFG_MEM_EMA                                                                    (0)
#define PHG_GEPHY_DBG_MEM_EMA_OFFSET_CFG_MEM_EMA_WIDTH                                                              (3)
typedef union PHG_GEPHY_DBG_MEM_EMA_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_mem_ema:PHG_GEPHY_DBG_MEM_EMA_OFFSET_CFG_MEM_EMA_WIDTH;                                             //[ 2: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DBG_MEM_EMA_OFFSET_RSVD0_WIDTH;                                                         //[31: 3]
    } BF;
    jl_uint32 val[PHG_GEPHY_DBG_MEM_EMA_ENTRY_SIZE];
} PHG_GEPHY_DBG_MEM_EMA_t;

#define PHG_GEPHY_CP_EEE_MASTER_DELAY_CNT_CFG                                                  ((jl_uint32)0x002444B4U)
#define PHG_GEPHY_CP_EEE_MASTER_DELAY_CNT_CFG_NUM                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_EEE_MASTER_DELAY_CNT_CFG_ENTRY_SIZE                                                            (1)
#define PHG_GEPHY_CP_EEE_MASTER_DELAY_CNT_CFG_OFFSET_RSVD0                                                         (14)
#define PHG_GEPHY_CP_EEE_MASTER_DELAY_CNT_CFG_OFFSET_RSVD0_WIDTH                                                   (18)
#define PHG_GEPHY_CP_EEE_MASTER_DELAY_CNT_CFG_OFFSET_EEE_MASTER_DELAY_CNT_CFG                                       (0)
#define PHG_GEPHY_CP_EEE_MASTER_DELAY_CNT_CFG_OFFSET_EEE_MASTER_DELAY_CNT_CFG_WIDTH                                (14)
typedef union PHG_GEPHY_CP_EEE_MASTER_DELAY_CNT_CFG_u {
    struct __attribute__ ((packed)) {
        jl_uint32 eee_master_delay_cnt_cfg:PHG_GEPHY_CP_EEE_MASTER_DELAY_CNT_CFG_OFFSET_EEE_MASTER_DELAY_CNT_CFG_WIDTH;   //[13: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CP_EEE_MASTER_DELAY_CNT_CFG_OFFSET_RSVD0_WIDTH;                                         //[31:14]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_EEE_MASTER_DELAY_CNT_CFG_ENTRY_SIZE];
} PHG_GEPHY_CP_EEE_MASTER_DELAY_CNT_CFG_t;

#define PHG_GEPHY_DSPU_CON1                                                                    ((jl_uint32)0x00244580U)
#define PHG_GEPHY_DSPU_CON1_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DSPU_CON1_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DSPU_CON1_OFFSET_RSVD0                                                                            (5)
#define PHG_GEPHY_DSPU_CON1_OFFSET_RSVD0_WIDTH                                                                     (27)
#define PHG_GEPHY_DSPU_CON1_OFFSET_SQI                                                                              (0)
#define PHG_GEPHY_DSPU_CON1_OFFSET_SQI_WIDTH                                                                        (5)
typedef union PHG_GEPHY_DSPU_CON1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sqi:PHG_GEPHY_DSPU_CON1_OFFSET_SQI_WIDTH;                                                               //[ 4: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DSPU_CON1_OFFSET_RSVD0_WIDTH;                                                           //[31: 5]
    } BF;
    jl_uint32 val[PHG_GEPHY_DSPU_CON1_ENTRY_SIZE];
} PHG_GEPHY_DSPU_CON1_t;

#define PHG_GEPHY_AN_RXLCW                                                                     ((jl_uint32)0x00244584U)
#define PHG_GEPHY_AN_RXLCW_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_AN_RXLCW_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_AN_RXLCW_OFFSET_RSVD0                                                                            (16)
#define PHG_GEPHY_AN_RXLCW_OFFSET_RSVD0_WIDTH                                                                      (16)
#define PHG_GEPHY_AN_RXLCW_OFFSET_AN_RX_LCW_0                                                                       (0)
#define PHG_GEPHY_AN_RXLCW_OFFSET_AN_RX_LCW_0_WIDTH                                                                (16)
typedef union PHG_GEPHY_AN_RXLCW_u {
    struct __attribute__ ((packed)) {
        jl_uint32 an_rx_lcw_0:PHG_GEPHY_AN_RXLCW_OFFSET_AN_RX_LCW_0_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_AN_RXLCW_OFFSET_RSVD0_WIDTH;                                                            //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_AN_RXLCW_ENTRY_SIZE];
} PHG_GEPHY_AN_RXLCW_t;

#define PHG_GEPHY_AN_TXLCW                                                                     ((jl_uint32)0x00244588U)
#define PHG_GEPHY_AN_TXLCW_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_AN_TXLCW_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_AN_TXLCW_OFFSET_RSVD0                                                                            (16)
#define PHG_GEPHY_AN_TXLCW_OFFSET_RSVD0_WIDTH                                                                      (16)
#define PHG_GEPHY_AN_TXLCW_OFFSET_AN_TX_LCW_0                                                                       (0)
#define PHG_GEPHY_AN_TXLCW_OFFSET_AN_TX_LCW_0_WIDTH                                                                (16)
typedef union PHG_GEPHY_AN_TXLCW_u {
    struct __attribute__ ((packed)) {
        jl_uint32 an_tx_lcw_0:PHG_GEPHY_AN_TXLCW_OFFSET_AN_TX_LCW_0_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_AN_TXLCW_OFFSET_RSVD0_WIDTH;                                                            //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_AN_TXLCW_ENTRY_SIZE];
} PHG_GEPHY_AN_TXLCW_t;

#define PHG_GEPHY_AN_ST                                                                        ((jl_uint32)0x0024458CU)
#define PHG_GEPHY_AN_ST_NUM                                                                    ((jl_uint32)0x00000001U)
#define PHG_GEPHY_AN_ST_ENTRY_SIZE                                                                                  (1)
#define PHG_GEPHY_AN_ST_OFFSET_RSVD0                                                                               (16)
#define PHG_GEPHY_AN_ST_OFFSET_RSVD0_WIDTH                                                                         (16)
#define PHG_GEPHY_AN_ST_OFFSET_AN_RX_BIT_CNT                                                                        (0)
#define PHG_GEPHY_AN_ST_OFFSET_AN_RX_BIT_CNT_WIDTH                                                                  (6)
#define PHG_GEPHY_AN_ST_OFFSET_AN_RX_DONE                                                                           (6)
#define PHG_GEPHY_AN_ST_OFFSET_AN_RX_DONE_WIDTH                                                                     (1)
#define PHG_GEPHY_AN_ST_OFFSET_AN_FLP_RECEIVE_IDLE                                                                  (7)
#define PHG_GEPHY_AN_ST_OFFSET_AN_FLP_RECEIVE_IDLE_WIDTH                                                            (1)
#define PHG_GEPHY_AN_ST_OFFSET_AN_NLP_LINK_STATUS                                                                   (8)
#define PHG_GEPHY_AN_ST_OFFSET_AN_NLP_LINK_STATUS_WIDTH                                                             (2)
#define PHG_GEPHY_AN_ST_OFFSET_AN_NLP_TEST_SIGDET_SRC                                                              (10)
#define PHG_GEPHY_AN_ST_OFFSET_AN_NLP_TEST_SIGDET_SRC_WIDTH                                                         (1)
#define PHG_GEPHY_AN_ST_OFFSET_AN_NLP_T_PULSE_DONE                                                                 (11)
#define PHG_GEPHY_AN_ST_OFFSET_AN_NLP_T_PULSE_DONE_WIDTH                                                            (1)
#define PHG_GEPHY_AN_ST_OFFSET_AN_NLP_T_PULSE_PENDING                                                              (12)
#define PHG_GEPHY_AN_ST_OFFSET_AN_NLP_T_PULSE_PENDING_WIDTH                                                         (1)
#define PHG_GEPHY_AN_ST_OFFSET_AN_NLP_LINK_DET_CLR                                                                 (13)
#define PHG_GEPHY_AN_ST_OFFSET_AN_NLP_LINK_DET_CLR_WIDTH                                                            (1)
#define PHG_GEPHY_AN_ST_OFFSET_AN_NLP_LINK_DET                                                                     (14)
#define PHG_GEPHY_AN_ST_OFFSET_AN_NLP_LINK_DET_WIDTH                                                                (1)
#define PHG_GEPHY_AN_ST_OFFSET_AN_ACK_FINISHED                                                                     (15)
#define PHG_GEPHY_AN_ST_OFFSET_AN_ACK_FINISHED_WIDTH                                                                (1)
typedef union PHG_GEPHY_AN_ST_u {
    struct __attribute__ ((packed)) {
        jl_uint32 an_rx_bit_cnt:PHG_GEPHY_AN_ST_OFFSET_AN_RX_BIT_CNT_WIDTH;                                               //[ 5: 0]
        jl_uint32 an_rx_done:PHG_GEPHY_AN_ST_OFFSET_AN_RX_DONE_WIDTH;                                                     //[ 6: 6]
        jl_uint32 an_flp_receive_idle:PHG_GEPHY_AN_ST_OFFSET_AN_FLP_RECEIVE_IDLE_WIDTH;                                   //[ 7: 7]
        jl_uint32 an_nlp_link_status:PHG_GEPHY_AN_ST_OFFSET_AN_NLP_LINK_STATUS_WIDTH;                                     //[ 9: 8]
        jl_uint32 an_nlp_test_sigdet_src:PHG_GEPHY_AN_ST_OFFSET_AN_NLP_TEST_SIGDET_SRC_WIDTH;                             //[10:10]
        jl_uint32 an_nlp_t_pulse_done:PHG_GEPHY_AN_ST_OFFSET_AN_NLP_T_PULSE_DONE_WIDTH;                                   //[11:11]
        jl_uint32 an_nlp_t_pulse_pending:PHG_GEPHY_AN_ST_OFFSET_AN_NLP_T_PULSE_PENDING_WIDTH;                             //[12:12]
        jl_uint32 an_nlp_link_det_clr:PHG_GEPHY_AN_ST_OFFSET_AN_NLP_LINK_DET_CLR_WIDTH;                                   //[13:13]
        jl_uint32 an_nlp_link_det:PHG_GEPHY_AN_ST_OFFSET_AN_NLP_LINK_DET_WIDTH;                                           //[14:14]
        jl_uint32 an_ack_finished:PHG_GEPHY_AN_ST_OFFSET_AN_ACK_FINISHED_WIDTH;                                           //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_AN_ST_OFFSET_RSVD0_WIDTH;                                                               //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_AN_ST_ENTRY_SIZE];
} PHG_GEPHY_AN_ST_t;

#define PHG_GEPHY_AN_CON0                                                                      ((jl_uint32)0x00244590U)
#define PHG_GEPHY_AN_CON0_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_AN_CON0_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_AN_CON0_OFFSET_RSVD2                                                                             (16)
#define PHG_GEPHY_AN_CON0_OFFSET_RSVD2_WIDTH                                                                       (16)
#define PHG_GEPHY_AN_CON0_OFFSET_AN_RX_BIT_CNT_CHK                                                                  (0)
#define PHG_GEPHY_AN_CON0_OFFSET_AN_RX_BIT_CNT_CHK_WIDTH                                                            (6)
#define PHG_GEPHY_AN_CON0_OFFSET_RSVD1                                                                              (6)
#define PHG_GEPHY_AN_CON0_OFFSET_RSVD1_WIDTH                                                                        (1)
#define PHG_GEPHY_AN_CON0_OFFSET_AN_RX_EN                                                                           (7)
#define PHG_GEPHY_AN_CON0_OFFSET_AN_RX_EN_WIDTH                                                                     (1)
#define PHG_GEPHY_AN_CON0_OFFSET_AN_TX_ACK_CNT_DONE                                                                 (8)
#define PHG_GEPHY_AN_CON0_OFFSET_AN_TX_ACK_CNT_DONE_WIDTH                                                           (6)
#define PHG_GEPHY_AN_CON0_OFFSET_RSVD0                                                                             (14)
#define PHG_GEPHY_AN_CON0_OFFSET_RSVD0_WIDTH                                                                        (1)
#define PHG_GEPHY_AN_CON0_OFFSET_AN_TX_EN                                                                          (15)
#define PHG_GEPHY_AN_CON0_OFFSET_AN_TX_EN_WIDTH                                                                     (1)
typedef union PHG_GEPHY_AN_CON0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 an_rx_bit_cnt_chk:PHG_GEPHY_AN_CON0_OFFSET_AN_RX_BIT_CNT_CHK_WIDTH;                                     //[ 5: 0]
        jl_uint32 rsvd1:PHG_GEPHY_AN_CON0_OFFSET_RSVD1_WIDTH;                                                             //[ 6: 6]
        jl_uint32 an_rx_en:PHG_GEPHY_AN_CON0_OFFSET_AN_RX_EN_WIDTH;                                                       //[ 7: 7]
        jl_uint32 an_tx_ack_cnt_done:PHG_GEPHY_AN_CON0_OFFSET_AN_TX_ACK_CNT_DONE_WIDTH;                                   //[13: 8]
        jl_uint32 rsvd0:PHG_GEPHY_AN_CON0_OFFSET_RSVD0_WIDTH;                                                             //[14:14]
        jl_uint32 an_tx_en:PHG_GEPHY_AN_CON0_OFFSET_AN_TX_EN_WIDTH;                                                       //[15:15]
        jl_uint32 rsvd2:PHG_GEPHY_AN_CON0_OFFSET_RSVD2_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_AN_CON0_ENTRY_SIZE];
} PHG_GEPHY_AN_CON0_t;

#define PHG_GEPHY_AN_CON1                                                                      ((jl_uint32)0x00244594U)
#define PHG_GEPHY_AN_CON1_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_AN_CON1_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_AN_CON1_OFFSET_RSVD2                                                                             (16)
#define PHG_GEPHY_AN_CON1_OFFSET_RSVD2_WIDTH                                                                       (16)
#define PHG_GEPHY_AN_CON1_OFFSET_AN_TX_BIT_CNT                                                                      (0)
#define PHG_GEPHY_AN_CON1_OFFSET_AN_TX_BIT_CNT_WIDTH                                                                (6)
#define PHG_GEPHY_AN_CON1_OFFSET_AN_COMPLETE_ACK                                                                    (6)
#define PHG_GEPHY_AN_CON1_OFFSET_AN_COMPLETE_ACK_WIDTH                                                              (1)
#define PHG_GEPHY_AN_CON1_OFFSET_AN_TRANSMIT_ABILITY                                                                (7)
#define PHG_GEPHY_AN_CON1_OFFSET_AN_TRANSMIT_ABILITY_WIDTH                                                          (1)
#define PHG_GEPHY_AN_CON1_OFFSET_RSVD1                                                                              (8)
#define PHG_GEPHY_AN_CON1_OFFSET_RSVD1_WIDTH                                                                        (1)
#define PHG_GEPHY_AN_CON1_OFFSET_AN_NLP_LINK_CONTROL                                                                (9)
#define PHG_GEPHY_AN_CON1_OFFSET_AN_NLP_LINK_CONTROL_WIDTH                                                          (2)
#define PHG_GEPHY_AN_CON1_OFFSET_RSVD0                                                                             (11)
#define PHG_GEPHY_AN_CON1_OFFSET_RSVD0_WIDTH                                                                        (2)
#define PHG_GEPHY_AN_CON1_OFFSET_AN_ACK_FINISHED_CLR                                                               (13)
#define PHG_GEPHY_AN_CON1_OFFSET_AN_ACK_FINISHED_CLR_WIDTH                                                          (1)
#define PHG_GEPHY_AN_CON1_OFFSET_AN_RX_DONE_CLR                                                                    (14)
#define PHG_GEPHY_AN_CON1_OFFSET_AN_RX_DONE_CLR_WIDTH                                                               (1)
#define PHG_GEPHY_AN_CON1_OFFSET_AN_FLP_RECEIVE_IDLE_CLR                                                           (15)
#define PHG_GEPHY_AN_CON1_OFFSET_AN_FLP_RECEIVE_IDLE_CLR_WIDTH                                                      (1)
typedef union PHG_GEPHY_AN_CON1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 an_tx_bit_cnt:PHG_GEPHY_AN_CON1_OFFSET_AN_TX_BIT_CNT_WIDTH;                                             //[ 5: 0]
        jl_uint32 an_complete_ack:PHG_GEPHY_AN_CON1_OFFSET_AN_COMPLETE_ACK_WIDTH;                                         //[ 6: 6]
        jl_uint32 an_transmit_ability:PHG_GEPHY_AN_CON1_OFFSET_AN_TRANSMIT_ABILITY_WIDTH;                                 //[ 7: 7]
        jl_uint32 rsvd1:PHG_GEPHY_AN_CON1_OFFSET_RSVD1_WIDTH;                                                             //[ 8: 8]
        jl_uint32 an_nlp_link_control:PHG_GEPHY_AN_CON1_OFFSET_AN_NLP_LINK_CONTROL_WIDTH;                                 //[10: 9]
        jl_uint32 rsvd0:PHG_GEPHY_AN_CON1_OFFSET_RSVD0_WIDTH;                                                             //[12:11]
        jl_uint32 an_ack_finished_clr:PHG_GEPHY_AN_CON1_OFFSET_AN_ACK_FINISHED_CLR_WIDTH;                                 //[13:13]
        jl_uint32 an_rx_done_clr:PHG_GEPHY_AN_CON1_OFFSET_AN_RX_DONE_CLR_WIDTH;                                           //[14:14]
        jl_uint32 an_flp_receive_idle_clr:PHG_GEPHY_AN_CON1_OFFSET_AN_FLP_RECEIVE_IDLE_CLR_WIDTH;                         //[15:15]
        jl_uint32 rsvd2:PHG_GEPHY_AN_CON1_OFFSET_RSVD2_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_AN_CON1_ENTRY_SIZE];
} PHG_GEPHY_AN_CON1_t;

#define PHG_GEPHY_AN_TM                                                                        ((jl_uint32)0x00244598U)
#define PHG_GEPHY_AN_TM_NUM                                                                    ((jl_uint32)0x00000001U)
#define PHG_GEPHY_AN_TM_ENTRY_SIZE                                                                                  (1)
#define PHG_GEPHY_AN_TM_OFFSET_RSVD0                                                                               (11)
#define PHG_GEPHY_AN_TM_OFFSET_RSVD0_WIDTH                                                                         (21)
#define PHG_GEPHY_AN_TM_OFFSET_AN_TIMER0_MATCH                                                                      (0)
#define PHG_GEPHY_AN_TM_OFFSET_AN_TIMER0_MATCH_WIDTH                                                                (4)
#define PHG_GEPHY_AN_TM_OFFSET_AN_TIMER0_CNT                                                                        (4)
#define PHG_GEPHY_AN_TM_OFFSET_AN_TIMER0_CNT_WIDTH                                                                  (4)
#define PHG_GEPHY_AN_TM_OFFSET_AN_TIMER0_CLR                                                                        (8)
#define PHG_GEPHY_AN_TM_OFFSET_AN_TIMER0_CLR_WIDTH                                                                  (1)
#define PHG_GEPHY_AN_TM_OFFSET_AN_TIMER0_EN                                                                         (9)
#define PHG_GEPHY_AN_TM_OFFSET_AN_TIMER0_EN_WIDTH                                                                   (1)
#define PHG_GEPHY_AN_TM_OFFSET_AN_TIMER0_DONE                                                                      (10)
#define PHG_GEPHY_AN_TM_OFFSET_AN_TIMER0_DONE_WIDTH                                                                 (1)
typedef union PHG_GEPHY_AN_TM_u {
    struct __attribute__ ((packed)) {
        jl_uint32 an_timer0_match:PHG_GEPHY_AN_TM_OFFSET_AN_TIMER0_MATCH_WIDTH;                                           //[ 3: 0]
        jl_uint32 an_timer0_cnt:PHG_GEPHY_AN_TM_OFFSET_AN_TIMER0_CNT_WIDTH;                                               //[ 7: 4]
        jl_uint32 an_timer0_clr:PHG_GEPHY_AN_TM_OFFSET_AN_TIMER0_CLR_WIDTH;                                               //[ 8: 8]
        jl_uint32 an_timer0_en:PHG_GEPHY_AN_TM_OFFSET_AN_TIMER0_EN_WIDTH;                                                 //[ 9: 9]
        jl_uint32 an_timer0_done:PHG_GEPHY_AN_TM_OFFSET_AN_TIMER0_DONE_WIDTH;                                             //[10:10]
        jl_uint32 rsvd0:PHG_GEPHY_AN_TM_OFFSET_RSVD0_WIDTH;                                                               //[31:11]
    } BF;
    jl_uint32 val[PHG_GEPHY_AN_TM_ENTRY_SIZE];
} PHG_GEPHY_AN_TM_t;

#define PHG_GEPHY_AN_MISC                                                                      ((jl_uint32)0x0024459CU)
#define PHG_GEPHY_AN_MISC_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_AN_MISC_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_AN_MISC_OFFSET_RSVD0                                                                             (11)
#define PHG_GEPHY_AN_MISC_OFFSET_RSVD0_WIDTH                                                                       (21)
#define PHG_GEPHY_AN_MISC_OFFSET_AN_FLP_CNT_DONE                                                                    (0)
#define PHG_GEPHY_AN_MISC_OFFSET_AN_FLP_CNT_DONE_WIDTH                                                              (6)
#define PHG_GEPHY_AN_MISC_OFFSET_AN_TX_PLS_WIDTH                                                                    (6)
#define PHG_GEPHY_AN_MISC_OFFSET_AN_TX_PLS_WIDTH_WIDTH                                                              (5)
typedef union PHG_GEPHY_AN_MISC_u {
    struct __attribute__ ((packed)) {
        jl_uint32 an_flp_cnt_done:PHG_GEPHY_AN_MISC_OFFSET_AN_FLP_CNT_DONE_WIDTH;                                         //[ 5: 0]
        jl_uint32 an_tx_pls_width:PHG_GEPHY_AN_MISC_OFFSET_AN_TX_PLS_WIDTH_WIDTH;                                         //[10: 6]
        jl_uint32 rsvd0:PHG_GEPHY_AN_MISC_OFFSET_RSVD0_WIDTH;                                                             //[31:11]
    } BF;
    jl_uint32 val[PHG_GEPHY_AN_MISC_ENTRY_SIZE];
} PHG_GEPHY_AN_MISC_t;

#define PHG_GEPHY_DIG_PU                                                                       ((jl_uint32)0x002445A0U)
#define PHG_GEPHY_DIG_PU_NUM                                                                   ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DIG_PU_ENTRY_SIZE                                                                                 (1)
#define PHG_GEPHY_DIG_PU_OFFSET_RSVD1                                                                              (16)
#define PHG_GEPHY_DIG_PU_OFFSET_RSVD1_WIDTH                                                                        (16)
#define PHG_GEPHY_DIG_PU_OFFSET_DAC_OUT_SEL                                                                         (0)
#define PHG_GEPHY_DIG_PU_OFFSET_DAC_OUT_SEL_WIDTH                                                                   (2)
#define PHG_GEPHY_DIG_PU_OFFSET_RSVD0                                                                               (2)
#define PHG_GEPHY_DIG_PU_OFFSET_RSVD0_WIDTH                                                                         (8)
#define PHG_GEPHY_DIG_PU_OFFSET_PMD_TD_NEXT_RX_DLY_EN                                                              (10)
#define PHG_GEPHY_DIG_PU_OFFSET_PMD_TD_NEXT_RX_DLY_EN_WIDTH                                                         (1)
#define PHG_GEPHY_DIG_PU_OFFSET_PMD_TD_NEXT_TX_DLY_EN                                                              (11)
#define PHG_GEPHY_DIG_PU_OFFSET_PMD_TD_NEXT_TX_DLY_EN_WIDTH                                                         (1)
#define PHG_GEPHY_DIG_PU_OFFSET_FAST_SFD_EN                                                                        (12)
#define PHG_GEPHY_DIG_PU_OFFSET_FAST_SFD_EN_WIDTH                                                                   (1)
#define PHG_GEPHY_DIG_PU_OFFSET_AUTO_POLARITY                                                                      (13)
#define PHG_GEPHY_DIG_PU_OFFSET_AUTO_POLARITY_WIDTH                                                                 (1)
#define PHG_GEPHY_DIG_PU_OFFSET_NLP_DISABLE                                                                        (14)
#define PHG_GEPHY_DIG_PU_OFFSET_NLP_DISABLE_WIDTH                                                                   (1)
#define PHG_GEPHY_DIG_PU_OFFSET_FORCE_LINK                                                                         (15)
#define PHG_GEPHY_DIG_PU_OFFSET_FORCE_LINK_WIDTH                                                                    (1)
typedef union PHG_GEPHY_DIG_PU_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dac_out_sel:PHG_GEPHY_DIG_PU_OFFSET_DAC_OUT_SEL_WIDTH;                                                  //[ 1: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DIG_PU_OFFSET_RSVD0_WIDTH;                                                              //[ 9: 2]
        jl_uint32 pmd_td_next_rx_dly_en:PHG_GEPHY_DIG_PU_OFFSET_PMD_TD_NEXT_RX_DLY_EN_WIDTH;                              //[10:10]
        jl_uint32 pmd_td_next_tx_dly_en:PHG_GEPHY_DIG_PU_OFFSET_PMD_TD_NEXT_TX_DLY_EN_WIDTH;                              //[11:11]
        jl_uint32 fast_sfd_en:PHG_GEPHY_DIG_PU_OFFSET_FAST_SFD_EN_WIDTH;                                                  //[12:12]
        jl_uint32 auto_polarity:PHG_GEPHY_DIG_PU_OFFSET_AUTO_POLARITY_WIDTH;                                              //[13:13]
        jl_uint32 nlp_disable:PHG_GEPHY_DIG_PU_OFFSET_NLP_DISABLE_WIDTH;                                                  //[14:14]
        jl_uint32 force_link:PHG_GEPHY_DIG_PU_OFFSET_FORCE_LINK_WIDTH;                                                    //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_DIG_PU_OFFSET_RSVD1_WIDTH;                                                              //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DIG_PU_ENTRY_SIZE];
} PHG_GEPHY_DIG_PU_t;

#define PHG_GEPHY_PCSU_CON0                                                                    ((jl_uint32)0x002445A4U)
#define PHG_GEPHY_PCSU_CON0_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PCSU_CON0_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_PCSU_CON0_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_PCSU_CON0_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_PCSU_CON0_OFFSET_LINK_CONTROL_U                                                                   (0)
#define PHG_GEPHY_PCSU_CON0_OFFSET_LINK_CONTROL_U_WIDTH                                                             (2)
#define PHG_GEPHY_PCSU_CON0_OFFSET_SIG_STAT_SRC                                                                     (2)
#define PHG_GEPHY_PCSU_CON0_OFFSET_SIG_STAT_SRC_WIDTH                                                               (1)
#define PHG_GEPHY_PCSU_CON0_OFFSET_TX_PMA_FIBER_EN                                                                  (3)
#define PHG_GEPHY_PCSU_CON0_OFFSET_TX_PMA_FIBER_EN_WIDTH                                                            (1)
#define PHG_GEPHY_PCSU_CON0_OFFSET_RX_PMA_FIBER_EN                                                                  (4)
#define PHG_GEPHY_PCSU_CON0_OFFSET_RX_PMA_FIBER_EN_WIDTH                                                            (1)
#define PHG_GEPHY_PCSU_CON0_OFFSET_TX_PCS_EEE_EN                                                                    (5)
#define PHG_GEPHY_PCSU_CON0_OFFSET_TX_PCS_EEE_EN_WIDTH                                                              (1)
#define PHG_GEPHY_PCSU_CON0_OFFSET_RX_PCS_EEE_EN                                                                    (6)
#define PHG_GEPHY_PCSU_CON0_OFFSET_RX_PCS_EEE_EN_WIDTH                                                              (1)
#define PHG_GEPHY_PCSU_CON0_OFFSET_DESCRAMBLER_LOCKED                                                               (7)
#define PHG_GEPHY_PCSU_CON0_OFFSET_DESCRAMBLER_LOCKED_WIDTH                                                         (1)
#define PHG_GEPHY_PCSU_CON0_OFFSET_DESCR_TESTMODE                                                                   (8)
#define PHG_GEPHY_PCSU_CON0_OFFSET_DESCR_TESTMODE_WIDTH                                                             (1)
#define PHG_GEPHY_PCSU_CON0_OFFSET_DESCR_LOAD_CFG                                                                   (9)
#define PHG_GEPHY_PCSU_CON0_OFFSET_DESCR_LOAD_CFG_WIDTH                                                             (1)
#define PHG_GEPHY_PCSU_CON0_OFFSET_DESCR_SDCD_CTRL                                                                 (10)
#define PHG_GEPHY_PCSU_CON0_OFFSET_DESCR_SDCD_CTRL_WIDTH                                                            (1)
#define PHG_GEPHY_PCSU_CON0_OFFSET_DESCR_SDCD_FORCE                                                                (11)
#define PHG_GEPHY_PCSU_CON0_OFFSET_DESCR_SDCD_FORCE_WIDTH                                                           (1)
#define PHG_GEPHY_PCSU_CON0_OFFSET_DESCR_RSTN                                                                      (12)
#define PHG_GEPHY_PCSU_CON0_OFFSET_DESCR_RSTN_WIDTH                                                                 (1)
#define PHG_GEPHY_PCSU_CON0_OFFSET_DESCR_SDCD_RX_QUIET                                                             (13)
#define PHG_GEPHY_PCSU_CON0_OFFSET_DESCR_SDCD_RX_QUIET_WIDTH                                                        (1)
#define PHG_GEPHY_PCSU_CON0_OFFSET_LINK_STATUS_FORCE                                                               (14)
#define PHG_GEPHY_PCSU_CON0_OFFSET_LINK_STATUS_FORCE_WIDTH                                                          (1)
#define PHG_GEPHY_PCSU_CON0_OFFSET_LINK_STATUS_FORCE_VAL                                                           (15)
#define PHG_GEPHY_PCSU_CON0_OFFSET_LINK_STATUS_FORCE_VAL_WIDTH                                                      (1)
typedef union PHG_GEPHY_PCSU_CON0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 link_control_u:PHG_GEPHY_PCSU_CON0_OFFSET_LINK_CONTROL_U_WIDTH;                                         //[ 1: 0]
        jl_uint32 sig_stat_src:PHG_GEPHY_PCSU_CON0_OFFSET_SIG_STAT_SRC_WIDTH;                                             //[ 2: 2]
        jl_uint32 tx_pma_fiber_en:PHG_GEPHY_PCSU_CON0_OFFSET_TX_PMA_FIBER_EN_WIDTH;                                       //[ 3: 3]
        jl_uint32 rx_pma_fiber_en:PHG_GEPHY_PCSU_CON0_OFFSET_RX_PMA_FIBER_EN_WIDTH;                                       //[ 4: 4]
        jl_uint32 tx_pcs_eee_en:PHG_GEPHY_PCSU_CON0_OFFSET_TX_PCS_EEE_EN_WIDTH;                                           //[ 5: 5]
        jl_uint32 rx_pcs_eee_en:PHG_GEPHY_PCSU_CON0_OFFSET_RX_PCS_EEE_EN_WIDTH;                                           //[ 6: 6]
        jl_uint32 descrambler_locked:PHG_GEPHY_PCSU_CON0_OFFSET_DESCRAMBLER_LOCKED_WIDTH;                                 //[ 7: 7]
        jl_uint32 descr_testmode:PHG_GEPHY_PCSU_CON0_OFFSET_DESCR_TESTMODE_WIDTH;                                         //[ 8: 8]
        jl_uint32 descr_load_cfg:PHG_GEPHY_PCSU_CON0_OFFSET_DESCR_LOAD_CFG_WIDTH;                                         //[ 9: 9]
        jl_uint32 descr_sdcd_ctrl:PHG_GEPHY_PCSU_CON0_OFFSET_DESCR_SDCD_CTRL_WIDTH;                                       //[10:10]
        jl_uint32 descr_sdcd_force:PHG_GEPHY_PCSU_CON0_OFFSET_DESCR_SDCD_FORCE_WIDTH;                                     //[11:11]
        jl_uint32 descr_rstn:PHG_GEPHY_PCSU_CON0_OFFSET_DESCR_RSTN_WIDTH;                                                 //[12:12]
        jl_uint32 descr_sdcd_rx_quiet:PHG_GEPHY_PCSU_CON0_OFFSET_DESCR_SDCD_RX_QUIET_WIDTH;                               //[13:13]
        jl_uint32 link_status_force:PHG_GEPHY_PCSU_CON0_OFFSET_LINK_STATUS_FORCE_WIDTH;                                   //[14:14]
        jl_uint32 link_status_force_val:PHG_GEPHY_PCSU_CON0_OFFSET_LINK_STATUS_FORCE_VAL_WIDTH;                           //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_PCSU_CON0_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PCSU_CON0_ENTRY_SIZE];
} PHG_GEPHY_PCSU_CON0_t;

#define PHG_GEPHY_PCSU_CON1                                                                    ((jl_uint32)0x002445A8U)
#define PHG_GEPHY_PCSU_CON1_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PCSU_CON1_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_PCSU_CON1_OFFSET_RSVD0                                                                           (13)
#define PHG_GEPHY_PCSU_CON1_OFFSET_RSVD0_WIDTH                                                                     (19)
#define PHG_GEPHY_PCSU_CON1_OFFSET_LINK_STATUS_U                                                                    (0)
#define PHG_GEPHY_PCSU_CON1_OFFSET_LINK_STATUS_U_WIDTH                                                              (2)
#define PHG_GEPHY_PCSU_CON1_OFFSET_PU_PI_FORCE                                                                      (2)
#define PHG_GEPHY_PCSU_CON1_OFFSET_PU_PI_FORCE_WIDTH                                                                (1)
#define PHG_GEPHY_PCSU_CON1_OFFSET_PU_PI_VAL                                                                        (3)
#define PHG_GEPHY_PCSU_CON1_OFFSET_PU_PI_VAL_WIDTH                                                                  (1)
#define PHG_GEPHY_PCSU_CON1_OFFSET_LINK_MONITOR_PERIOD_SEL                                                          (4)
#define PHG_GEPHY_PCSU_CON1_OFFSET_LINK_MONITOR_PERIOD_SEL_WIDTH                                                    (2)
#define PHG_GEPHY_PCSU_CON1_OFFSET_SPEED                                                                            (6)
#define PHG_GEPHY_PCSU_CON1_OFFSET_SPEED_WIDTH                                                                      (1)
#define PHG_GEPHY_PCSU_CON1_OFFSET_DUPLEX                                                                           (7)
#define PHG_GEPHY_PCSU_CON1_OFFSET_DUPLEX_WIDTH                                                                     (1)
#define PHG_GEPHY_PCSU_CON1_OFFSET_RX_FAR_END_FAULTING                                                              (8)
#define PHG_GEPHY_PCSU_CON1_OFFSET_RX_FAR_END_FAULTING_WIDTH                                                        (1)
#define PHG_GEPHY_PCSU_CON1_OFFSET_RX_FAR_END_FAULTING_CLR                                                          (9)
#define PHG_GEPHY_PCSU_CON1_OFFSET_RX_FAR_END_FAULTING_CLR_WIDTH                                                    (1)
#define PHG_GEPHY_PCSU_CON1_OFFSET_RX_FAR_END_FAULT_DETECT_EN                                                      (10)
#define PHG_GEPHY_PCSU_CON1_OFFSET_RX_FAR_END_FAULT_DETECT_EN_WIDTH                                                 (1)
#define PHG_GEPHY_PCSU_CON1_OFFSET_TX_FAR_END_FAULT_GEN_EN                                                         (11)
#define PHG_GEPHY_PCSU_CON1_OFFSET_TX_FAR_END_FAULT_GEN_EN_WIDTH                                                    (1)
#define PHG_GEPHY_PCSU_CON1_OFFSET_LINK_MON_SIG_STAT_SRC                                                           (12)
#define PHG_GEPHY_PCSU_CON1_OFFSET_LINK_MON_SIG_STAT_SRC_WIDTH                                                      (1)
typedef union PHG_GEPHY_PCSU_CON1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 link_status_u:PHG_GEPHY_PCSU_CON1_OFFSET_LINK_STATUS_U_WIDTH;                                           //[ 1: 0]
        jl_uint32 pu_pi_force:PHG_GEPHY_PCSU_CON1_OFFSET_PU_PI_FORCE_WIDTH;                                               //[ 2: 2]
        jl_uint32 pu_pi_val:PHG_GEPHY_PCSU_CON1_OFFSET_PU_PI_VAL_WIDTH;                                                   //[ 3: 3]
        jl_uint32 link_monitor_period_sel:PHG_GEPHY_PCSU_CON1_OFFSET_LINK_MONITOR_PERIOD_SEL_WIDTH;                       //[ 5: 4]
        jl_uint32 speed:PHG_GEPHY_PCSU_CON1_OFFSET_SPEED_WIDTH;                                                           //[ 6: 6]
        jl_uint32 duplex:PHG_GEPHY_PCSU_CON1_OFFSET_DUPLEX_WIDTH;                                                         //[ 7: 7]
        jl_uint32 rx_far_end_faulting:PHG_GEPHY_PCSU_CON1_OFFSET_RX_FAR_END_FAULTING_WIDTH;                               //[ 8: 8]
        jl_uint32 rx_far_end_faulting_clr:PHG_GEPHY_PCSU_CON1_OFFSET_RX_FAR_END_FAULTING_CLR_WIDTH;                       //[ 9: 9]
        jl_uint32 rx_far_end_fault_detect_en:PHG_GEPHY_PCSU_CON1_OFFSET_RX_FAR_END_FAULT_DETECT_EN_WIDTH;                 //[10:10]
        jl_uint32 tx_far_end_fault_gen_en:PHG_GEPHY_PCSU_CON1_OFFSET_TX_FAR_END_FAULT_GEN_EN_WIDTH;                       //[11:11]
        jl_uint32 link_mon_sig_stat_src:PHG_GEPHY_PCSU_CON1_OFFSET_LINK_MON_SIG_STAT_SRC_WIDTH;                           //[12:12]
        jl_uint32 rsvd0:PHG_GEPHY_PCSU_CON1_OFFSET_RSVD0_WIDTH;                                                           //[31:13]
    } BF;
    jl_uint32 val[PHG_GEPHY_PCSU_CON1_ENTRY_SIZE];
} PHG_GEPHY_PCSU_CON1_t;

#define PHG_GEPHY_DSPI_CON0                                                                    ((jl_uint32)0x002445ACU)
#define PHG_GEPHY_DSPI_CON0_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DSPI_CON0_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DSPI_CON0_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_DSPI_CON0_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_DSPI_CON0_OFFSET_DSP_RX_NOISE_THRE                                                                (0)
#define PHG_GEPHY_DSPI_CON0_OFFSET_DSP_RX_NOISE_THRE_WIDTH                                                          (4)
#define PHG_GEPHY_DSPI_CON0_OFFSET_DSP_RX_FG_POLAR                                                                  (4)
#define PHG_GEPHY_DSPI_CON0_OFFSET_DSP_RX_FG_POLAR_WIDTH                                                            (1)
#define PHG_GEPHY_DSPI_CON0_OFFSET_DSP_RX_POLAR_SEL                                                                 (5)
#define PHG_GEPHY_DSPI_CON0_OFFSET_DSP_RX_POLAR_SEL_WIDTH                                                           (1)
#define PHG_GEPHY_DSPI_CON0_OFFSET_DSP_RX_AMP2                                                                      (6)
#define PHG_GEPHY_DSPI_CON0_OFFSET_DSP_RX_AMP2_WIDTH                                                                (6)
#define PHG_GEPHY_DSPI_CON0_OFFSET_DSP_RX_AMP1                                                                     (12)
#define PHG_GEPHY_DSPI_CON0_OFFSET_DSP_RX_AMP1_WIDTH                                                                (4)
typedef union PHG_GEPHY_DSPI_CON0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dsp_rx_noise_thre:PHG_GEPHY_DSPI_CON0_OFFSET_DSP_RX_NOISE_THRE_WIDTH;                                   //[ 3: 0]
        jl_uint32 dsp_rx_fg_polar:PHG_GEPHY_DSPI_CON0_OFFSET_DSP_RX_FG_POLAR_WIDTH;                                       //[ 4: 4]
        jl_uint32 dsp_rx_polar_sel:PHG_GEPHY_DSPI_CON0_OFFSET_DSP_RX_POLAR_SEL_WIDTH;                                     //[ 5: 5]
        jl_uint32 dsp_rx_amp2:PHG_GEPHY_DSPI_CON0_OFFSET_DSP_RX_AMP2_WIDTH;                                               //[11: 6]
        jl_uint32 dsp_rx_amp1:PHG_GEPHY_DSPI_CON0_OFFSET_DSP_RX_AMP1_WIDTH;                                               //[15:12]
        jl_uint32 rsvd0:PHG_GEPHY_DSPI_CON0_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DSPI_CON0_ENTRY_SIZE];
} PHG_GEPHY_DSPI_CON0_t;

#define PHG_GEPHY_PCSI_CON0                                                                    ((jl_uint32)0x002445B0U)
#define PHG_GEPHY_PCSI_CON0_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PCSI_CON0_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_PCSI_CON0_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_PCSI_CON0_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_PCSI_CON0_OFFSET_TPIDL_WIDTH                                                                      (0)
#define PHG_GEPHY_PCSI_CON0_OFFSET_TPIDL_WIDTH_WIDTH                                                                (4)
#define PHG_GEPHY_PCSI_CON0_OFFSET_NLP_WIDTH                                                                        (4)
#define PHG_GEPHY_PCSI_CON0_OFFSET_NLP_WIDTH_WIDTH                                                                  (4)
#define PHG_GEPHY_PCSI_CON0_OFFSET_SQE_TEST_ENABLE                                                                  (8)
#define PHG_GEPHY_PCSI_CON0_OFFSET_SQE_TEST_ENABLE_WIDTH                                                            (1)
#define PHG_GEPHY_PCSI_CON0_OFFSET_JABBER_ENABLE                                                                    (9)
#define PHG_GEPHY_PCSI_CON0_OFFSET_JABBER_ENABLE_WIDTH                                                              (1)
#define PHG_GEPHY_PCSI_CON0_OFFSET_CRS_TX_ENABLE                                                                   (10)
#define PHG_GEPHY_PCSI_CON0_OFFSET_CRS_TX_ENABLE_WIDTH                                                              (1)
#define PHG_GEPHY_PCSI_CON0_OFFSET_CRS_RX_ENABLE                                                                   (11)
#define PHG_GEPHY_PCSI_CON0_OFFSET_CRS_RX_ENABLE_WIDTH                                                              (1)
#define PHG_GEPHY_PCSI_CON0_OFFSET_LPBK_ENABLE                                                                     (12)
#define PHG_GEPHY_PCSI_CON0_OFFSET_LPBK_ENABLE_WIDTH                                                                (1)
#define PHG_GEPHY_PCSI_CON0_OFFSET_FORCE_LOOPBACK                                                                  (13)
#define PHG_GEPHY_PCSI_CON0_OFFSET_FORCE_LOOPBACK_WIDTH                                                             (1)
#define PHG_GEPHY_PCSI_CON0_OFFSET_TPIDL_AUTOWIDTH                                                                 (14)
#define PHG_GEPHY_PCSI_CON0_OFFSET_TPIDL_AUTOWIDTH_WIDTH                                                            (1)
#define PHG_GEPHY_PCSI_CON0_OFFSET_LINK_MON_FORCE_LINK_STAT_OK                                                     (15)
#define PHG_GEPHY_PCSI_CON0_OFFSET_LINK_MON_FORCE_LINK_STAT_OK_WIDTH                                                (1)
typedef union PHG_GEPHY_PCSI_CON0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tpidl_width:PHG_GEPHY_PCSI_CON0_OFFSET_TPIDL_WIDTH_WIDTH;                                               //[ 3: 0]
        jl_uint32 nlp_width:PHG_GEPHY_PCSI_CON0_OFFSET_NLP_WIDTH_WIDTH;                                                   //[ 7: 4]
        jl_uint32 sqe_test_enable:PHG_GEPHY_PCSI_CON0_OFFSET_SQE_TEST_ENABLE_WIDTH;                                       //[ 8: 8]
        jl_uint32 jabber_enable:PHG_GEPHY_PCSI_CON0_OFFSET_JABBER_ENABLE_WIDTH;                                           //[ 9: 9]
        jl_uint32 crs_tx_enable:PHG_GEPHY_PCSI_CON0_OFFSET_CRS_TX_ENABLE_WIDTH;                                           //[10:10]
        jl_uint32 crs_rx_enable:PHG_GEPHY_PCSI_CON0_OFFSET_CRS_RX_ENABLE_WIDTH;                                           //[11:11]
        jl_uint32 lpbk_enable:PHG_GEPHY_PCSI_CON0_OFFSET_LPBK_ENABLE_WIDTH;                                               //[12:12]
        jl_uint32 force_loopback:PHG_GEPHY_PCSI_CON0_OFFSET_FORCE_LOOPBACK_WIDTH;                                         //[13:13]
        jl_uint32 tpidl_autowidth:PHG_GEPHY_PCSI_CON0_OFFSET_TPIDL_AUTOWIDTH_WIDTH;                                       //[14:14]
        jl_uint32 link_mon_force_link_stat_ok:PHG_GEPHY_PCSI_CON0_OFFSET_LINK_MON_FORCE_LINK_STAT_OK_WIDTH;               //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_PCSI_CON0_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PCSI_CON0_ENTRY_SIZE];
} PHG_GEPHY_PCSI_CON0_t;

#define PHG_GEPHY_PCSI_CON1                                                                    ((jl_uint32)0x002445B4U)
#define PHG_GEPHY_PCSI_CON1_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PCSI_CON1_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_PCSI_CON1_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_PCSI_CON1_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_PCSI_CON1_OFFSET_ERR_CNT_10M                                                                      (0)
#define PHG_GEPHY_PCSI_CON1_OFFSET_ERR_CNT_10M_WIDTH                                                                (6)
#define PHG_GEPHY_PCSI_CON1_OFFSET_ERR_CNT_10M_CLR                                                                  (6)
#define PHG_GEPHY_PCSI_CON1_OFFSET_ERR_CNT_10M_CLR_WIDTH                                                            (1)
#define PHG_GEPHY_PCSI_CON1_OFFSET_JABBER_DETECT_10M                                                                (7)
#define PHG_GEPHY_PCSI_CON1_OFFSET_JABBER_DETECT_10M_WIDTH                                                          (1)
#define PHG_GEPHY_PCSI_CON1_OFFSET_JABBER_CLR_10M                                                                   (8)
#define PHG_GEPHY_PCSI_CON1_OFFSET_JABBER_CLR_10M_WIDTH                                                             (1)
#define PHG_GEPHY_PCSI_CON1_OFFSET_SIG_DET_THR_10M                                                                  (9)
#define PHG_GEPHY_PCSI_CON1_OFFSET_SIG_DET_THR_10M_WIDTH                                                            (4)
#define PHG_GEPHY_PCSI_CON1_OFFSET_CARRIER_SENSE_RX_EN                                                             (13)
#define PHG_GEPHY_PCSI_CON1_OFFSET_CARRIER_SENSE_RX_EN_WIDTH                                                        (1)
#define PHG_GEPHY_PCSI_CON1_OFFSET_CARRIER_SENSE_TX_EN                                                             (14)
#define PHG_GEPHY_PCSI_CON1_OFFSET_CARRIER_SENSE_TX_EN_WIDTH                                                        (1)
#define PHG_GEPHY_PCSI_CON1_OFFSET_PMD_LOOPBACK_U                                                                  (15)
#define PHG_GEPHY_PCSI_CON1_OFFSET_PMD_LOOPBACK_U_WIDTH                                                             (1)
typedef union PHG_GEPHY_PCSI_CON1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 err_cnt_10m:PHG_GEPHY_PCSI_CON1_OFFSET_ERR_CNT_10M_WIDTH;                                               //[ 5: 0]
        jl_uint32 err_cnt_10m_clr:PHG_GEPHY_PCSI_CON1_OFFSET_ERR_CNT_10M_CLR_WIDTH;                                       //[ 6: 6]
        jl_uint32 jabber_detect_10m:PHG_GEPHY_PCSI_CON1_OFFSET_JABBER_DETECT_10M_WIDTH;                                   //[ 7: 7]
        jl_uint32 jabber_clr_10m:PHG_GEPHY_PCSI_CON1_OFFSET_JABBER_CLR_10M_WIDTH;                                         //[ 8: 8]
        jl_uint32 sig_det_thr_10m:PHG_GEPHY_PCSI_CON1_OFFSET_SIG_DET_THR_10M_WIDTH;                                       //[12: 9]
        jl_uint32 carrier_sense_rx_en:PHG_GEPHY_PCSI_CON1_OFFSET_CARRIER_SENSE_RX_EN_WIDTH;                               //[13:13]
        jl_uint32 carrier_sense_tx_en:PHG_GEPHY_PCSI_CON1_OFFSET_CARRIER_SENSE_TX_EN_WIDTH;                               //[14:14]
        jl_uint32 pmd_loopback_u:PHG_GEPHY_PCSI_CON1_OFFSET_PMD_LOOPBACK_U_WIDTH;                                         //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_PCSI_CON1_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PCSI_CON1_ENTRY_SIZE];
} PHG_GEPHY_PCSI_CON1_t;

#define PHG_GEPHY_PCSU_CON2                                                                    ((jl_uint32)0x002445B8U)
#define PHG_GEPHY_PCSU_CON2_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PCSU_CON2_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_PCSU_CON2_OFFSET_RSVD1                                                                           (16)
#define PHG_GEPHY_PCSU_CON2_OFFSET_RSVD1_WIDTH                                                                     (16)
#define PHG_GEPHY_PCSU_CON2_OFFSET_RSVD0                                                                            (0)
#define PHG_GEPHY_PCSU_CON2_OFFSET_RSVD0_WIDTH                                                                     (15)
#define PHG_GEPHY_PCSU_CON2_OFFSET_TX_FIBER_SCRAMBLER_EN                                                           (15)
#define PHG_GEPHY_PCSU_CON2_OFFSET_TX_FIBER_SCRAMBLER_EN_WIDTH                                                      (1)
typedef union PHG_GEPHY_PCSU_CON2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd0:PHG_GEPHY_PCSU_CON2_OFFSET_RSVD0_WIDTH;                                                           //[14: 0]
        jl_uint32 tx_fiber_scrambler_en:PHG_GEPHY_PCSU_CON2_OFFSET_TX_FIBER_SCRAMBLER_EN_WIDTH;                           //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_PCSU_CON2_OFFSET_RSVD1_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PCSU_CON2_ENTRY_SIZE];
} PHG_GEPHY_PCSU_CON2_t;

#define PHG_GEPHY_PCSU_CON3                                                                    ((jl_uint32)0x002445BCU)
#define PHG_GEPHY_PCSU_CON3_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PCSU_CON3_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_PCSU_CON3_OFFSET_RSVD1                                                                           (16)
#define PHG_GEPHY_PCSU_CON3_OFFSET_RSVD1_WIDTH                                                                     (16)
#define PHG_GEPHY_PCSU_CON3_OFFSET_RSVD0                                                                            (0)
#define PHG_GEPHY_PCSU_CON3_OFFSET_RSVD0_WIDTH                                                                     (12)
#define PHG_GEPHY_PCSU_CON3_OFFSET_DSP_TX_U_AMP                                                                    (12)
#define PHG_GEPHY_PCSU_CON3_OFFSET_DSP_TX_U_AMP_WIDTH                                                               (4)
typedef union PHG_GEPHY_PCSU_CON3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd0:PHG_GEPHY_PCSU_CON3_OFFSET_RSVD0_WIDTH;                                                           //[11: 0]
        jl_uint32 dsp_tx_u_amp:PHG_GEPHY_PCSU_CON3_OFFSET_DSP_TX_U_AMP_WIDTH;                                             //[15:12]
        jl_uint32 rsvd1:PHG_GEPHY_PCSU_CON3_OFFSET_RSVD1_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PCSU_CON3_ENTRY_SIZE];
} PHG_GEPHY_PCSU_CON3_t;

#define PHG_GEPHY_DSPI_CON1                                                                    ((jl_uint32)0x002445C0U)
#define PHG_GEPHY_DSPI_CON1_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DSPI_CON1_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DSPI_CON1_OFFSET_RSVD0                                                                           (13)
#define PHG_GEPHY_DSPI_CON1_OFFSET_RSVD0_WIDTH                                                                     (19)
#define PHG_GEPHY_DSPI_CON1_OFFSET_DSP_RX_SIG_CNT                                                                   (0)
#define PHG_GEPHY_DSPI_CON1_OFFSET_DSP_RX_SIG_CNT_WIDTH                                                             (5)
#define PHG_GEPHY_DSPI_CON1_OFFSET_DSP_RX_PREA_CNT                                                                  (5)
#define PHG_GEPHY_DSPI_CON1_OFFSET_DSP_RX_PREA_CNT_WIDTH                                                            (7)
#define PHG_GEPHY_DSPI_CON1_OFFSET_DSP_RX_MU_SEL                                                                   (12)
#define PHG_GEPHY_DSPI_CON1_OFFSET_DSP_RX_MU_SEL_WIDTH                                                              (1)
typedef union PHG_GEPHY_DSPI_CON1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dsp_rx_sig_cnt:PHG_GEPHY_DSPI_CON1_OFFSET_DSP_RX_SIG_CNT_WIDTH;                                         //[ 4: 0]
        jl_uint32 dsp_rx_prea_cnt:PHG_GEPHY_DSPI_CON1_OFFSET_DSP_RX_PREA_CNT_WIDTH;                                       //[11: 5]
        jl_uint32 dsp_rx_mu_sel:PHG_GEPHY_DSPI_CON1_OFFSET_DSP_RX_MU_SEL_WIDTH;                                           //[12:12]
        jl_uint32 rsvd0:PHG_GEPHY_DSPI_CON1_OFFSET_RSVD0_WIDTH;                                                           //[31:13]
    } BF;
    jl_uint32 val[PHG_GEPHY_DSPI_CON1_ENTRY_SIZE];
} PHG_GEPHY_DSPI_CON1_t;

#define PHG_GEPHY_DSPI_CON2                                                                    ((jl_uint32)0x002445C4U)
#define PHG_GEPHY_DSPI_CON2_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DSPI_CON2_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DSPI_CON2_OFFSET_RSVD1                                                                           (16)
#define PHG_GEPHY_DSPI_CON2_OFFSET_RSVD1_WIDTH                                                                     (16)
#define PHG_GEPHY_DSPI_CON2_OFFSET_DSP_RX_EYE_ERR_CNT                                                               (0)
#define PHG_GEPHY_DSPI_CON2_OFFSET_DSP_RX_EYE_ERR_CNT_WIDTH                                                         (4)
#define PHG_GEPHY_DSPI_CON2_OFFSET_DSP_RX_THRE_SEL                                                                  (4)
#define PHG_GEPHY_DSPI_CON2_OFFSET_DSP_RX_THRE_SEL_WIDTH                                                            (2)
#define PHG_GEPHY_DSPI_CON2_OFFSET_SIGNAL_STATUS_U_LATCH_LOW                                                        (6)
#define PHG_GEPHY_DSPI_CON2_OFFSET_SIGNAL_STATUS_U_LATCH_LOW_WIDTH                                                  (1)
#define PHG_GEPHY_DSPI_CON2_OFFSET_SIGNAL_STATUS_U_LATCH_LOW_SRC                                                    (7)
#define PHG_GEPHY_DSPI_CON2_OFFSET_SIGNAL_STATUS_U_LATCH_LOW_SRC_WIDTH                                              (1)
#define PHG_GEPHY_DSPI_CON2_OFFSET_RX_PCS_IDLE_N_DESCR_LOCK                                                         (8)
#define PHG_GEPHY_DSPI_CON2_OFFSET_RX_PCS_IDLE_N_DESCR_LOCK_WIDTH                                                   (1)
#define PHG_GEPHY_DSPI_CON2_OFFSET_RSVD0                                                                            (9)
#define PHG_GEPHY_DSPI_CON2_OFFSET_RSVD0_WIDTH                                                                      (5)
#define PHG_GEPHY_DSPI_CON2_OFFSET_RX_QUIET                                                                        (14)
#define PHG_GEPHY_DSPI_CON2_OFFSET_RX_QUIET_WIDTH                                                                   (1)
#define PHG_GEPHY_DSPI_CON2_OFFSET_TX_QUIET                                                                        (15)
#define PHG_GEPHY_DSPI_CON2_OFFSET_TX_QUIET_WIDTH                                                                   (1)
typedef union PHG_GEPHY_DSPI_CON2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dsp_rx_eye_err_cnt:PHG_GEPHY_DSPI_CON2_OFFSET_DSP_RX_EYE_ERR_CNT_WIDTH;                                 //[ 3: 0]
        jl_uint32 dsp_rx_thre_sel:PHG_GEPHY_DSPI_CON2_OFFSET_DSP_RX_THRE_SEL_WIDTH;                                       //[ 5: 4]
        jl_uint32 signal_status_u_latch_low:PHG_GEPHY_DSPI_CON2_OFFSET_SIGNAL_STATUS_U_LATCH_LOW_WIDTH;                   //[ 6: 6]
        jl_uint32 signal_status_u_latch_low_src:PHG_GEPHY_DSPI_CON2_OFFSET_SIGNAL_STATUS_U_LATCH_LOW_SRC_WIDTH;           //[ 7: 7]
        jl_uint32 rx_pcs_idle_n_descr_lock:PHG_GEPHY_DSPI_CON2_OFFSET_RX_PCS_IDLE_N_DESCR_LOCK_WIDTH;                     //[ 8: 8]
        jl_uint32 rsvd0:PHG_GEPHY_DSPI_CON2_OFFSET_RSVD0_WIDTH;                                                           //[13: 9]
        jl_uint32 rx_quiet:PHG_GEPHY_DSPI_CON2_OFFSET_RX_QUIET_WIDTH;                                                     //[14:14]
        jl_uint32 tx_quiet:PHG_GEPHY_DSPI_CON2_OFFSET_TX_QUIET_WIDTH;                                                     //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_DSPI_CON2_OFFSET_RSVD1_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DSPI_CON2_ENTRY_SIZE];
} PHG_GEPHY_DSPI_CON2_t;

#define PHG_GEPHY_EEE_CON0                                                                     ((jl_uint32)0x002445C8U)
#define PHG_GEPHY_EEE_CON0_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_EEE_CON0_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_EEE_CON0_OFFSET_RSVD0                                                                            (16)
#define PHG_GEPHY_EEE_CON0_OFFSET_RSVD0_WIDTH                                                                      (16)
#define PHG_GEPHY_EEE_CON0_OFFSET_DSP_U_RX_PARTIAL_FREEZE_FORCE                                                     (0)
#define PHG_GEPHY_EEE_CON0_OFFSET_DSP_U_RX_PARTIAL_FREEZE_FORCE_WIDTH                                               (1)
#define PHG_GEPHY_EEE_CON0_OFFSET_DSP_U_RX_PARTIAL_FREEZE_FORCE_VAL                                                 (1)
#define PHG_GEPHY_EEE_CON0_OFFSET_DSP_U_RX_PARTIAL_FREEZE_FORCE_VAL_WIDTH                                           (1)
#define PHG_GEPHY_EEE_CON0_OFFSET_DSP_U_RX_LPI_FORCE                                                                (2)
#define PHG_GEPHY_EEE_CON0_OFFSET_DSP_U_RX_LPI_FORCE_WIDTH                                                          (1)
#define PHG_GEPHY_EEE_CON0_OFFSET_DSP_U_RX_LPI_FORCE_VAL                                                            (3)
#define PHG_GEPHY_EEE_CON0_OFFSET_DSP_U_RX_LPI_FORCE_VAL_WIDTH                                                      (1)
#define PHG_GEPHY_EEE_CON0_OFFSET_DSP_U_RX_FREEZE                                                                   (4)
#define PHG_GEPHY_EEE_CON0_OFFSET_DSP_U_RX_FREEZE_WIDTH                                                             (1)
#define PHG_GEPHY_EEE_CON0_OFFSET_TX_FEF_SIG_STAT_FORCE_VAL                                                         (5)
#define PHG_GEPHY_EEE_CON0_OFFSET_TX_FEF_SIG_STAT_FORCE_VAL_WIDTH                                                   (1)
#define PHG_GEPHY_EEE_CON0_OFFSET_TX_FEF_SIG_STAT_FORCE                                                             (6)
#define PHG_GEPHY_EEE_CON0_OFFSET_TX_FEF_SIG_STAT_FORCE_WIDTH                                                       (1)
#define PHG_GEPHY_EEE_CON0_OFFSET_TX_CLK_INV_100M                                                                   (7)
#define PHG_GEPHY_EEE_CON0_OFFSET_TX_CLK_INV_100M_WIDTH                                                             (1)
#define PHG_GEPHY_EEE_CON0_OFFSET_TX_CLK_PHASE_100M                                                                 (8)
#define PHG_GEPHY_EEE_CON0_OFFSET_TX_CLK_PHASE_100M_WIDTH                                                           (3)
#define PHG_GEPHY_EEE_CON0_OFFSET_RX_CLK_INV_100M                                                                  (11)
#define PHG_GEPHY_EEE_CON0_OFFSET_RX_CLK_INV_100M_WIDTH                                                             (1)
#define PHG_GEPHY_EEE_CON0_OFFSET_RX_CLK_PHASE_100M                                                                (12)
#define PHG_GEPHY_EEE_CON0_OFFSET_RX_CLK_PHASE_100M_WIDTH                                                           (3)
#define PHG_GEPHY_EEE_CON0_OFFSET_TX_FEF_RX_RPI_EN                                                                 (15)
#define PHG_GEPHY_EEE_CON0_OFFSET_TX_FEF_RX_RPI_EN_WIDTH                                                            (1)
typedef union PHG_GEPHY_EEE_CON0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dsp_u_rx_partial_freeze_force:PHG_GEPHY_EEE_CON0_OFFSET_DSP_U_RX_PARTIAL_FREEZE_FORCE_WIDTH;            //[ 0: 0]
        jl_uint32 dsp_u_rx_partial_freeze_force_val:PHG_GEPHY_EEE_CON0_OFFSET_DSP_U_RX_PARTIAL_FREEZE_FORCE_VAL_WIDTH;    //[ 1: 1]
        jl_uint32 dsp_u_rx_lpi_force:PHG_GEPHY_EEE_CON0_OFFSET_DSP_U_RX_LPI_FORCE_WIDTH;                                  //[ 2: 2]
        jl_uint32 dsp_u_rx_lpi_force_val:PHG_GEPHY_EEE_CON0_OFFSET_DSP_U_RX_LPI_FORCE_VAL_WIDTH;                          //[ 3: 3]
        jl_uint32 dsp_u_rx_freeze:PHG_GEPHY_EEE_CON0_OFFSET_DSP_U_RX_FREEZE_WIDTH;                                        //[ 4: 4]
        jl_uint32 tx_fef_sig_stat_force_val:PHG_GEPHY_EEE_CON0_OFFSET_TX_FEF_SIG_STAT_FORCE_VAL_WIDTH;                    //[ 5: 5]
        jl_uint32 tx_fef_sig_stat_force:PHG_GEPHY_EEE_CON0_OFFSET_TX_FEF_SIG_STAT_FORCE_WIDTH;                            //[ 6: 6]
        jl_uint32 tx_clk_inv_100m:PHG_GEPHY_EEE_CON0_OFFSET_TX_CLK_INV_100M_WIDTH;                                        //[ 7: 7]
        jl_uint32 tx_clk_phase_100m:PHG_GEPHY_EEE_CON0_OFFSET_TX_CLK_PHASE_100M_WIDTH;                                    //[10: 8]
        jl_uint32 rx_clk_inv_100m:PHG_GEPHY_EEE_CON0_OFFSET_RX_CLK_INV_100M_WIDTH;                                        //[11:11]
        jl_uint32 rx_clk_phase_100m:PHG_GEPHY_EEE_CON0_OFFSET_RX_CLK_PHASE_100M_WIDTH;                                    //[14:12]
        jl_uint32 tx_fef_rx_rpi_en:PHG_GEPHY_EEE_CON0_OFFSET_TX_FEF_RX_RPI_EN_WIDTH;                                      //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_EEE_CON0_OFFSET_RSVD0_WIDTH;                                                            //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_EEE_CON0_ENTRY_SIZE];
} PHG_GEPHY_EEE_CON0_t;

#define PHG_GEPHY_PCSI_CON2                                                                    ((jl_uint32)0x002445CCU)
#define PHG_GEPHY_PCSI_CON2_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PCSI_CON2_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_PCSI_CON2_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_PCSI_CON2_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_PCSI_CON2_OFFSET_LC_MAX_10M                                                                       (0)
#define PHG_GEPHY_PCSI_CON2_OFFSET_LC_MAX_10M_WIDTH                                                                 (4)
#define PHG_GEPHY_PCSI_CON2_OFFSET_FG_LP_CNT_THR_10M                                                                (4)
#define PHG_GEPHY_PCSI_CON2_OFFSET_FG_LP_CNT_THR_10M_WIDTH                                                          (4)
#define PHG_GEPHY_PCSI_CON2_OFFSET_TX_CLK_PHASE_10M                                                                 (8)
#define PHG_GEPHY_PCSI_CON2_OFFSET_TX_CLK_PHASE_10M_WIDTH                                                           (3)
#define PHG_GEPHY_PCSI_CON2_OFFSET_DSP_RX_STRATEGY_SEL                                                             (11)
#define PHG_GEPHY_PCSI_CON2_OFFSET_DSP_RX_STRATEGY_SEL_WIDTH                                                        (1)
#define PHG_GEPHY_PCSI_CON2_OFFSET_RX_CLK_PHASE_10M                                                                (12)
#define PHG_GEPHY_PCSI_CON2_OFFSET_RX_CLK_PHASE_10M_WIDTH                                                           (3)
#define PHG_GEPHY_PCSI_CON2_OFFSET_COL_ENABLE                                                                      (15)
#define PHG_GEPHY_PCSI_CON2_OFFSET_COL_ENABLE_WIDTH                                                                 (1)
typedef union PHG_GEPHY_PCSI_CON2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 lc_max_10m:PHG_GEPHY_PCSI_CON2_OFFSET_LC_MAX_10M_WIDTH;                                                 //[ 3: 0]
        jl_uint32 fg_lp_cnt_thr_10m:PHG_GEPHY_PCSI_CON2_OFFSET_FG_LP_CNT_THR_10M_WIDTH;                                   //[ 7: 4]
        jl_uint32 tx_clk_phase_10m:PHG_GEPHY_PCSI_CON2_OFFSET_TX_CLK_PHASE_10M_WIDTH;                                     //[10: 8]
        jl_uint32 dsp_rx_strategy_sel:PHG_GEPHY_PCSI_CON2_OFFSET_DSP_RX_STRATEGY_SEL_WIDTH;                               //[11:11]
        jl_uint32 rx_clk_phase_10m:PHG_GEPHY_PCSI_CON2_OFFSET_RX_CLK_PHASE_10M_WIDTH;                                     //[14:12]
        jl_uint32 col_enable:PHG_GEPHY_PCSI_CON2_OFFSET_COL_ENABLE_WIDTH;                                                 //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_PCSI_CON2_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PCSI_CON2_ENTRY_SIZE];
} PHG_GEPHY_PCSI_CON2_t;

#define PHG_GEPHY_DSPI_CON3                                                                    ((jl_uint32)0x002445D4U)
#define PHG_GEPHY_DSPI_CON3_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DSPI_CON3_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DSPI_CON3_OFFSET_RSVD2                                                                           (16)
#define PHG_GEPHY_DSPI_CON3_OFFSET_RSVD2_WIDTH                                                                     (16)
#define PHG_GEPHY_DSPI_CON3_OFFSET_DSP_RX_MODE_SEL                                                                  (0)
#define PHG_GEPHY_DSPI_CON3_OFFSET_DSP_RX_MODE_SEL_WIDTH                                                            (1)
#define PHG_GEPHY_DSPI_CON3_OFFSET_DSP_RX_IS_DIFF_DETECT                                                            (1)
#define PHG_GEPHY_DSPI_CON3_OFFSET_DSP_RX_IS_DIFF_DETECT_WIDTH                                                      (1)
#define PHG_GEPHY_DSPI_CON3_OFFSET_RSVD1                                                                            (2)
#define PHG_GEPHY_DSPI_CON3_OFFSET_RSVD1_WIDTH                                                                      (3)
#define PHG_GEPHY_DSPI_CON3_OFFSET_DSP_RX_FG_LP_CNT                                                                 (5)
#define PHG_GEPHY_DSPI_CON3_OFFSET_DSP_RX_FG_LP_CNT_WIDTH                                                           (5)
#define PHG_GEPHY_DSPI_CON3_OFFSET_RSVD0                                                                           (10)
#define PHG_GEPHY_DSPI_CON3_OFFSET_RSVD0_WIDTH                                                                      (3)
#define PHG_GEPHY_DSPI_CON3_OFFSET_DSP_RX_OVERFLOW_FLAG                                                            (13)
#define PHG_GEPHY_DSPI_CON3_OFFSET_DSP_RX_OVERFLOW_FLAG_WIDTH                                                       (2)
#define PHG_GEPHY_DSPI_CON3_OFFSET_DSP_RX_OVERFLOW_CLR                                                             (15)
#define PHG_GEPHY_DSPI_CON3_OFFSET_DSP_RX_OVERFLOW_CLR_WIDTH                                                        (1)
typedef union PHG_GEPHY_DSPI_CON3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dsp_rx_mode_sel:PHG_GEPHY_DSPI_CON3_OFFSET_DSP_RX_MODE_SEL_WIDTH;                                       //[ 0: 0]
        jl_uint32 dsp_rx_is_diff_detect:PHG_GEPHY_DSPI_CON3_OFFSET_DSP_RX_IS_DIFF_DETECT_WIDTH;                           //[ 1: 1]
        jl_uint32 rsvd1:PHG_GEPHY_DSPI_CON3_OFFSET_RSVD1_WIDTH;                                                           //[ 4: 2]
        jl_uint32 dsp_rx_fg_lp_cnt:PHG_GEPHY_DSPI_CON3_OFFSET_DSP_RX_FG_LP_CNT_WIDTH;                                     //[ 9: 5]
        jl_uint32 rsvd0:PHG_GEPHY_DSPI_CON3_OFFSET_RSVD0_WIDTH;                                                           //[12:10]
        jl_uint32 dsp_rx_overflow_flag:PHG_GEPHY_DSPI_CON3_OFFSET_DSP_RX_OVERFLOW_FLAG_WIDTH;                             //[14:13]
        jl_uint32 dsp_rx_overflow_clr:PHG_GEPHY_DSPI_CON3_OFFSET_DSP_RX_OVERFLOW_CLR_WIDTH;                               //[15:15]
        jl_uint32 rsvd2:PHG_GEPHY_DSPI_CON3_OFFSET_RSVD2_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DSPI_CON3_ENTRY_SIZE];
} PHG_GEPHY_DSPI_CON3_t;

#define PHG_GEPHY_ADC_GAIN                                                                     ((jl_uint32)0x002445D8U)
#define PHG_GEPHY_ADC_GAIN_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ADC_GAIN_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_ADC_GAIN_OFFSET_RSVD1                                                                            (14)
#define PHG_GEPHY_ADC_GAIN_OFFSET_RSVD1_WIDTH                                                                      (18)
#define PHG_GEPHY_ADC_GAIN_OFFSET_ADC_GAIN                                                                          (0)
#define PHG_GEPHY_ADC_GAIN_OFFSET_ADC_GAIN_WIDTH                                                                    (3)
#define PHG_GEPHY_ADC_GAIN_OFFSET_LANE_IN_SEL                                                                       (3)
#define PHG_GEPHY_ADC_GAIN_OFFSET_LANE_IN_SEL_WIDTH                                                                 (2)
#define PHG_GEPHY_ADC_GAIN_OFFSET_LANE_OUT_SEL                                                                      (5)
#define PHG_GEPHY_ADC_GAIN_OFFSET_LANE_OUT_SEL_WIDTH                                                                (2)
#define PHG_GEPHY_ADC_GAIN_OFFSET_RSVD0                                                                             (7)
#define PHG_GEPHY_ADC_GAIN_OFFSET_RSVD0_WIDTH                                                                       (6)
#define PHG_GEPHY_ADC_GAIN_OFFSET_FIBER_EXT_EN                                                                     (13)
#define PHG_GEPHY_ADC_GAIN_OFFSET_FIBER_EXT_EN_WIDTH                                                                (1)
typedef union PHG_GEPHY_ADC_GAIN_u {
    struct __attribute__ ((packed)) {
        jl_uint32 adc_gain:PHG_GEPHY_ADC_GAIN_OFFSET_ADC_GAIN_WIDTH;                                                      //[ 2: 0]
        jl_uint32 lane_in_sel:PHG_GEPHY_ADC_GAIN_OFFSET_LANE_IN_SEL_WIDTH;                                                //[ 4: 3]
        jl_uint32 lane_out_sel:PHG_GEPHY_ADC_GAIN_OFFSET_LANE_OUT_SEL_WIDTH;                                              //[ 6: 5]
        jl_uint32 rsvd0:PHG_GEPHY_ADC_GAIN_OFFSET_RSVD0_WIDTH;                                                            //[12: 7]
        jl_uint32 fiber_ext_en:PHG_GEPHY_ADC_GAIN_OFFSET_FIBER_EXT_EN_WIDTH;                                              //[13:13]
        jl_uint32 rsvd1:PHG_GEPHY_ADC_GAIN_OFFSET_RSVD1_WIDTH;                                                            //[31:14]
    } BF;
    jl_uint32 val[PHG_GEPHY_ADC_GAIN_ENTRY_SIZE];
} PHG_GEPHY_ADC_GAIN_t;

#define PHG_GEPHY_MII_CON                                                                      ((jl_uint32)0x002445DCU)
#define PHG_GEPHY_MII_CON_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_MII_CON_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_MII_CON_OFFSET_RSVD0                                                                             (12)
#define PHG_GEPHY_MII_CON_OFFSET_RSVD0_WIDTH                                                                       (20)
#define PHG_GEPHY_MII_CON_OFFSET_LPI_RX_TW_TIMER_CNT                                                                (0)
#define PHG_GEPHY_MII_CON_OFFSET_LPI_RX_TW_TIMER_CNT_WIDTH                                                          (6)
#define PHG_GEPHY_MII_CON_OFFSET_MII_CRS_ISOLATE                                                                    (6)
#define PHG_GEPHY_MII_CON_OFFSET_MII_CRS_ISOLATE_WIDTH                                                              (1)
#define PHG_GEPHY_MII_CON_OFFSET_MII_COL_ISOLATE                                                                    (7)
#define PHG_GEPHY_MII_CON_OFFSET_MII_COL_ISOLATE_WIDTH                                                              (1)
#define PHG_GEPHY_MII_CON_OFFSET_MII_RX_ISOLATE                                                                     (8)
#define PHG_GEPHY_MII_CON_OFFSET_MII_RX_ISOLATE_WIDTH                                                               (1)
#define PHG_GEPHY_MII_CON_OFFSET_MII_TX_ISOLATE                                                                     (9)
#define PHG_GEPHY_MII_CON_OFFSET_MII_TX_ISOLATE_WIDTH                                                               (1)
#define PHG_GEPHY_MII_CON_OFFSET_MII_RX_CLK_ISOLATE                                                                (10)
#define PHG_GEPHY_MII_CON_OFFSET_MII_RX_CLK_ISOLATE_WIDTH                                                           (1)
#define PHG_GEPHY_MII_CON_OFFSET_MII_TX_CLK_ISOLATE                                                                (11)
#define PHG_GEPHY_MII_CON_OFFSET_MII_TX_CLK_ISOLATE_WIDTH                                                           (1)
typedef union PHG_GEPHY_MII_CON_u {
    struct __attribute__ ((packed)) {
        jl_uint32 lpi_rx_tw_timer_cnt:PHG_GEPHY_MII_CON_OFFSET_LPI_RX_TW_TIMER_CNT_WIDTH;                                 //[ 5: 0]
        jl_uint32 mii_crs_isolate:PHG_GEPHY_MII_CON_OFFSET_MII_CRS_ISOLATE_WIDTH;                                         //[ 6: 6]
        jl_uint32 mii_col_isolate:PHG_GEPHY_MII_CON_OFFSET_MII_COL_ISOLATE_WIDTH;                                         //[ 7: 7]
        jl_uint32 mii_rx_isolate:PHG_GEPHY_MII_CON_OFFSET_MII_RX_ISOLATE_WIDTH;                                           //[ 8: 8]
        jl_uint32 mii_tx_isolate:PHG_GEPHY_MII_CON_OFFSET_MII_TX_ISOLATE_WIDTH;                                           //[ 9: 9]
        jl_uint32 mii_rx_clk_isolate:PHG_GEPHY_MII_CON_OFFSET_MII_RX_CLK_ISOLATE_WIDTH;                                   //[10:10]
        jl_uint32 mii_tx_clk_isolate:PHG_GEPHY_MII_CON_OFFSET_MII_TX_CLK_ISOLATE_WIDTH;                                   //[11:11]
        jl_uint32 rsvd0:PHG_GEPHY_MII_CON_OFFSET_RSVD0_WIDTH;                                                             //[31:12]
    } BF;
    jl_uint32 val[PHG_GEPHY_MII_CON_ENTRY_SIZE];
} PHG_GEPHY_MII_CON_t;

#define PHG_GEPHY_CP_ANTO_LBT                                                                  ((jl_uint32)0x002445E0U)
#define PHG_GEPHY_CP_ANTO_LBT_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_ANTO_LBT_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_CP_ANTO_LBT_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_CP_ANTO_LBT_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_CP_ANTO_LBT_OFFSET_CFG_TRANSMIT_LINK_BURST_TIMER_TIMEOUT                                          (0)
#define PHG_GEPHY_CP_ANTO_LBT_OFFSET_CFG_TRANSMIT_LINK_BURST_TIMER_TIMEOUT_WIDTH                                   (16)
typedef union PHG_GEPHY_CP_ANTO_LBT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_transmit_link_burst_timer_timeout:PHG_GEPHY_CP_ANTO_LBT_OFFSET_CFG_TRANSMIT_LINK_BURST_TIMER_TIMEOUT_WIDTH;  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CP_ANTO_LBT_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_ANTO_LBT_ENTRY_SIZE];
} PHG_GEPHY_CP_ANTO_LBT_t;

#define PHG_GEPHY_CP_ANTO_INT                                                                  ((jl_uint32)0x002445E4U)
#define PHG_GEPHY_CP_ANTO_INT_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_ANTO_INT_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_CP_ANTO_INT_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_CP_ANTO_INT_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_CP_ANTO_INT_OFFSET_CFG_INTERVAL_TIMER_TIMEOUT                                                     (0)
#define PHG_GEPHY_CP_ANTO_INT_OFFSET_CFG_INTERVAL_TIMER_TIMEOUT_WIDTH                                              (16)
typedef union PHG_GEPHY_CP_ANTO_INT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_interval_timer_timeout:PHG_GEPHY_CP_ANTO_INT_OFFSET_CFG_INTERVAL_TIMER_TIMEOUT_WIDTH;               //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CP_ANTO_INT_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_ANTO_INT_ENTRY_SIZE];
} PHG_GEPHY_CP_ANTO_INT_t;

#define PHG_GEPHY_CP_ANTO_FLPMIN                                                               ((jl_uint32)0x002445E8U)
#define PHG_GEPHY_CP_ANTO_FLPMIN_NUM                                                           ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_ANTO_FLPMIN_ENTRY_SIZE                                                                         (1)
#define PHG_GEPHY_CP_ANTO_FLPMIN_OFFSET_RSVD0                                                                      (16)
#define PHG_GEPHY_CP_ANTO_FLPMIN_OFFSET_RSVD0_WIDTH                                                                (16)
#define PHG_GEPHY_CP_ANTO_FLPMIN_OFFSET_CFG_FLP_TEST_MIN_TIMER_TIMEOUT                                              (0)
#define PHG_GEPHY_CP_ANTO_FLPMIN_OFFSET_CFG_FLP_TEST_MIN_TIMER_TIMEOUT_WIDTH                                       (16)
typedef union PHG_GEPHY_CP_ANTO_FLPMIN_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_flp_test_min_timer_timeout:PHG_GEPHY_CP_ANTO_FLPMIN_OFFSET_CFG_FLP_TEST_MIN_TIMER_TIMEOUT_WIDTH;    //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CP_ANTO_FLPMIN_OFFSET_RSVD0_WIDTH;                                                      //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_ANTO_FLPMIN_ENTRY_SIZE];
} PHG_GEPHY_CP_ANTO_FLPMIN_t;

#define PHG_GEPHY_CP_ANTO_FLPMAX                                                               ((jl_uint32)0x002445ECU)
#define PHG_GEPHY_CP_ANTO_FLPMAX_NUM                                                           ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_ANTO_FLPMAX_ENTRY_SIZE                                                                         (1)
#define PHG_GEPHY_CP_ANTO_FLPMAX_OFFSET_RSVD0                                                                      (16)
#define PHG_GEPHY_CP_ANTO_FLPMAX_OFFSET_RSVD0_WIDTH                                                                (16)
#define PHG_GEPHY_CP_ANTO_FLPMAX_OFFSET_CFG_FLP_TEST_MAX_TIMER_TIMEOUT                                              (0)
#define PHG_GEPHY_CP_ANTO_FLPMAX_OFFSET_CFG_FLP_TEST_MAX_TIMER_TIMEOUT_WIDTH                                       (16)
typedef union PHG_GEPHY_CP_ANTO_FLPMAX_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_flp_test_max_timer_timeout:PHG_GEPHY_CP_ANTO_FLPMAX_OFFSET_CFG_FLP_TEST_MAX_TIMER_TIMEOUT_WIDTH;    //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CP_ANTO_FLPMAX_OFFSET_RSVD0_WIDTH;                                                      //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_ANTO_FLPMAX_ENTRY_SIZE];
} PHG_GEPHY_CP_ANTO_FLPMAX_t;

#define PHG_GEPHY_CP_ANTO_NLPTMAX                                                              ((jl_uint32)0x002445F0U)
#define PHG_GEPHY_CP_ANTO_NLPTMAX_NUM                                                          ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_ANTO_NLPTMAX_ENTRY_SIZE                                                                        (1)
#define PHG_GEPHY_CP_ANTO_NLPTMAX_OFFSET_RSVD0                                                                     (16)
#define PHG_GEPHY_CP_ANTO_NLPTMAX_OFFSET_RSVD0_WIDTH                                                               (16)
#define PHG_GEPHY_CP_ANTO_NLPTMAX_OFFSET_CFG_NLP_TEST_MAX_TIMER_TIMEOUT                                             (0)
#define PHG_GEPHY_CP_ANTO_NLPTMAX_OFFSET_CFG_NLP_TEST_MAX_TIMER_TIMEOUT_WIDTH                                      (16)
typedef union PHG_GEPHY_CP_ANTO_NLPTMAX_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_nlp_test_max_timer_timeout:PHG_GEPHY_CP_ANTO_NLPTMAX_OFFSET_CFG_NLP_TEST_MAX_TIMER_TIMEOUT_WIDTH;   //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CP_ANTO_NLPTMAX_OFFSET_RSVD0_WIDTH;                                                     //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_ANTO_NLPTMAX_ENTRY_SIZE];
} PHG_GEPHY_CP_ANTO_NLPTMAX_t;

#define PHG_GEPHY_CP_ANTO_NLPMIN                                                               ((jl_uint32)0x002445F4U)
#define PHG_GEPHY_CP_ANTO_NLPMIN_NUM                                                           ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_ANTO_NLPMIN_ENTRY_SIZE                                                                         (1)
#define PHG_GEPHY_CP_ANTO_NLPMIN_OFFSET_RSVD0                                                                      (16)
#define PHG_GEPHY_CP_ANTO_NLPMIN_OFFSET_RSVD0_WIDTH                                                                (16)
#define PHG_GEPHY_CP_ANTO_NLPMIN_OFFSET_CFG_NLP_TEST_MIN_TIMER_TIMEOUT                                              (0)
#define PHG_GEPHY_CP_ANTO_NLPMIN_OFFSET_CFG_NLP_TEST_MIN_TIMER_TIMEOUT_WIDTH                                       (16)
typedef union PHG_GEPHY_CP_ANTO_NLPMIN_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_nlp_test_min_timer_timeout:PHG_GEPHY_CP_ANTO_NLPMIN_OFFSET_CFG_NLP_TEST_MIN_TIMER_TIMEOUT_WIDTH;    //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CP_ANTO_NLPMIN_OFFSET_RSVD0_WIDTH;                                                      //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_ANTO_NLPMIN_ENTRY_SIZE];
} PHG_GEPHY_CP_ANTO_NLPMIN_t;

#define PHG_GEPHY_CP_ANTO_DDMAX                                                                ((jl_uint32)0x002445F8U)
#define PHG_GEPHY_CP_ANTO_DDMAX_NUM                                                            ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_ANTO_DDMAX_ENTRY_SIZE                                                                          (1)
#define PHG_GEPHY_CP_ANTO_DDMAX_OFFSET_RSVD0                                                                       (16)
#define PHG_GEPHY_CP_ANTO_DDMAX_OFFSET_RSVD0_WIDTH                                                                 (16)
#define PHG_GEPHY_CP_ANTO_DDMAX_OFFSET_CFG_DATA_DETECT_MAX_TIMER_TIMEOUT                                            (0)
#define PHG_GEPHY_CP_ANTO_DDMAX_OFFSET_CFG_DATA_DETECT_MAX_TIMER_TIMEOUT_WIDTH                                     (16)
typedef union PHG_GEPHY_CP_ANTO_DDMAX_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_data_detect_max_timer_timeout:PHG_GEPHY_CP_ANTO_DDMAX_OFFSET_CFG_DATA_DETECT_MAX_TIMER_TIMEOUT_WIDTH;  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CP_ANTO_DDMAX_OFFSET_RSVD0_WIDTH;                                                       //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_ANTO_DDMAX_ENTRY_SIZE];
} PHG_GEPHY_CP_ANTO_DDMAX_t;

#define PHG_GEPHY_CP_ANTO_DDMIN                                                                ((jl_uint32)0x002445FCU)
#define PHG_GEPHY_CP_ANTO_DDMIN_NUM                                                            ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CP_ANTO_DDMIN_ENTRY_SIZE                                                                          (1)
#define PHG_GEPHY_CP_ANTO_DDMIN_OFFSET_RSVD0                                                                       (16)
#define PHG_GEPHY_CP_ANTO_DDMIN_OFFSET_RSVD0_WIDTH                                                                 (16)
#define PHG_GEPHY_CP_ANTO_DDMIN_OFFSET_CFG_DATA_DETECT_MIN_TIMER_TIMEOUT                                            (0)
#define PHG_GEPHY_CP_ANTO_DDMIN_OFFSET_CFG_DATA_DETECT_MIN_TIMER_TIMEOUT_WIDTH                                     (16)
typedef union PHG_GEPHY_CP_ANTO_DDMIN_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_data_detect_min_timer_timeout:PHG_GEPHY_CP_ANTO_DDMIN_OFFSET_CFG_DATA_DETECT_MIN_TIMER_TIMEOUT_WIDTH;  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CP_ANTO_DDMIN_OFFSET_RSVD0_WIDTH;                                                       //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CP_ANTO_DDMIN_ENTRY_SIZE];
} PHG_GEPHY_CP_ANTO_DDMIN_t;

#define PHG_GEPHY_PCSI_TO_NLPWAIT                                                              ((jl_uint32)0x00244600U)
#define PHG_GEPHY_PCSI_TO_NLPWAIT_NUM                                                          ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PCSI_TO_NLPWAIT_ENTRY_SIZE                                                                        (1)
#define PHG_GEPHY_PCSI_TO_NLPWAIT_OFFSET_RSVD0                                                                     (16)
#define PHG_GEPHY_PCSI_TO_NLPWAIT_OFFSET_RSVD0_WIDTH                                                               (16)
#define PHG_GEPHY_PCSI_TO_NLPWAIT_OFFSET_CFG_NLP_WAIT_TIMER_TIMEOUT                                                 (0)
#define PHG_GEPHY_PCSI_TO_NLPWAIT_OFFSET_CFG_NLP_WAIT_TIMER_TIMEOUT_WIDTH                                          (16)
typedef union PHG_GEPHY_PCSI_TO_NLPWAIT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_nlp_wait_timer_timeout:PHG_GEPHY_PCSI_TO_NLPWAIT_OFFSET_CFG_NLP_WAIT_TIMER_TIMEOUT_WIDTH;           //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PCSI_TO_NLPWAIT_OFFSET_RSVD0_WIDTH;                                                     //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PCSI_TO_NLPWAIT_ENTRY_SIZE];
} PHG_GEPHY_PCSI_TO_NLPWAIT_t;

#define PHG_GEPHY_PCSI_TO_LINKLOSS                                                             ((jl_uint32)0x00244604U)
#define PHG_GEPHY_PCSI_TO_LINKLOSS_NUM                                                         ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PCSI_TO_LINKLOSS_ENTRY_SIZE                                                                       (1)
#define PHG_GEPHY_PCSI_TO_LINKLOSS_OFFSET_RSVD0                                                                    (16)
#define PHG_GEPHY_PCSI_TO_LINKLOSS_OFFSET_RSVD0_WIDTH                                                              (16)
#define PHG_GEPHY_PCSI_TO_LINKLOSS_OFFSET_CFG_LINK_LOSS_TIMER_TIMEOUT                                               (0)
#define PHG_GEPHY_PCSI_TO_LINKLOSS_OFFSET_CFG_LINK_LOSS_TIMER_TIMEOUT_WIDTH                                        (16)
typedef union PHG_GEPHY_PCSI_TO_LINKLOSS_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_link_loss_timer_timeout:PHG_GEPHY_PCSI_TO_LINKLOSS_OFFSET_CFG_LINK_LOSS_TIMER_TIMEOUT_WIDTH;        //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PCSI_TO_LINKLOSS_OFFSET_RSVD0_WIDTH;                                                    //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PCSI_TO_LINKLOSS_ENTRY_SIZE];
} PHG_GEPHY_PCSI_TO_LINKLOSS_t;

#define PHG_GEPHY_PCSI_TO_LINKTESTMIN                                                          ((jl_uint32)0x00244608U)
#define PHG_GEPHY_PCSI_TO_LINKTESTMIN_NUM                                                      ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PCSI_TO_LINKTESTMIN_ENTRY_SIZE                                                                    (1)
#define PHG_GEPHY_PCSI_TO_LINKTESTMIN_OFFSET_RSVD0                                                                 (16)
#define PHG_GEPHY_PCSI_TO_LINKTESTMIN_OFFSET_RSVD0_WIDTH                                                           (16)
#define PHG_GEPHY_PCSI_TO_LINKTESTMIN_OFFSET_CFG_LINK_TEST_MIN_TIMER_TIMEOUT                                        (0)
#define PHG_GEPHY_PCSI_TO_LINKTESTMIN_OFFSET_CFG_LINK_TEST_MIN_TIMER_TIMEOUT_WIDTH                                 (16)
typedef union PHG_GEPHY_PCSI_TO_LINKTESTMIN_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_link_test_min_timer_timeout:PHG_GEPHY_PCSI_TO_LINKTESTMIN_OFFSET_CFG_LINK_TEST_MIN_TIMER_TIMEOUT_WIDTH;  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PCSI_TO_LINKTESTMIN_OFFSET_RSVD0_WIDTH;                                                 //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PCSI_TO_LINKTESTMIN_ENTRY_SIZE];
} PHG_GEPHY_PCSI_TO_LINKTESTMIN_t;

#define PHG_GEPHY_PCSI_TO_LINKTESTMAX                                                          ((jl_uint32)0x0024460CU)
#define PHG_GEPHY_PCSI_TO_LINKTESTMAX_NUM                                                      ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PCSI_TO_LINKTESTMAX_ENTRY_SIZE                                                                    (1)
#define PHG_GEPHY_PCSI_TO_LINKTESTMAX_OFFSET_RSVD0                                                                 (16)
#define PHG_GEPHY_PCSI_TO_LINKTESTMAX_OFFSET_RSVD0_WIDTH                                                           (16)
#define PHG_GEPHY_PCSI_TO_LINKTESTMAX_OFFSET_CFG_LINK_TEST_MAX_TIMER_TIMEOUT                                        (0)
#define PHG_GEPHY_PCSI_TO_LINKTESTMAX_OFFSET_CFG_LINK_TEST_MAX_TIMER_TIMEOUT_WIDTH                                 (16)
typedef union PHG_GEPHY_PCSI_TO_LINKTESTMAX_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_link_test_max_timer_timeout:PHG_GEPHY_PCSI_TO_LINKTESTMAX_OFFSET_CFG_LINK_TEST_MAX_TIMER_TIMEOUT_WIDTH;  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PCSI_TO_LINKTESTMAX_OFFSET_RSVD0_WIDTH;                                                 //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PCSI_TO_LINKTESTMAX_ENTRY_SIZE];
} PHG_GEPHY_PCSI_TO_LINKTESTMAX_t;

#define PHG_GEPHY_PCSI_TO_XMITMAX                                                              ((jl_uint32)0x00244610U)
#define PHG_GEPHY_PCSI_TO_XMITMAX_NUM                                                          ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PCSI_TO_XMITMAX_ENTRY_SIZE                                                                        (1)
#define PHG_GEPHY_PCSI_TO_XMITMAX_OFFSET_RSVD0                                                                     (16)
#define PHG_GEPHY_PCSI_TO_XMITMAX_OFFSET_RSVD0_WIDTH                                                               (16)
#define PHG_GEPHY_PCSI_TO_XMITMAX_OFFSET_CFG_XMIT_MAX_TIMER_TIMEOUT                                                 (0)
#define PHG_GEPHY_PCSI_TO_XMITMAX_OFFSET_CFG_XMIT_MAX_TIMER_TIMEOUT_WIDTH                                          (16)
typedef union PHG_GEPHY_PCSI_TO_XMITMAX_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_xmit_max_timer_timeout:PHG_GEPHY_PCSI_TO_XMITMAX_OFFSET_CFG_XMIT_MAX_TIMER_TIMEOUT_WIDTH;           //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PCSI_TO_XMITMAX_OFFSET_RSVD0_WIDTH;                                                     //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PCSI_TO_XMITMAX_ENTRY_SIZE];
} PHG_GEPHY_PCSI_TO_XMITMAX_t;

#define PHG_GEPHY_PCSI_TO_UNJAB                                                                ((jl_uint32)0x00244614U)
#define PHG_GEPHY_PCSI_TO_UNJAB_NUM                                                            ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PCSI_TO_UNJAB_ENTRY_SIZE                                                                          (1)
#define PHG_GEPHY_PCSI_TO_UNJAB_OFFSET_RSVD0                                                                       (16)
#define PHG_GEPHY_PCSI_TO_UNJAB_OFFSET_RSVD0_WIDTH                                                                 (16)
#define PHG_GEPHY_PCSI_TO_UNJAB_OFFSET_CFG_UNJAB_TIMER_TIMEOUT                                                      (0)
#define PHG_GEPHY_PCSI_TO_UNJAB_OFFSET_CFG_UNJAB_TIMER_TIMEOUT_WIDTH                                               (16)
typedef union PHG_GEPHY_PCSI_TO_UNJAB_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_unjab_timer_timeout:PHG_GEPHY_PCSI_TO_UNJAB_OFFSET_CFG_UNJAB_TIMER_TIMEOUT_WIDTH;                   //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PCSI_TO_UNJAB_OFFSET_RSVD0_WIDTH;                                                       //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PCSI_TO_UNJAB_ENTRY_SIZE];
} PHG_GEPHY_PCSI_TO_UNJAB_t;

#define PHG_GEPHY_PCSI_CON3                                                                    ((jl_uint32)0x00244618U)
#define PHG_GEPHY_PCSI_CON3_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PCSI_CON3_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_PCSI_CON3_OFFSET_RSVD1                                                                           (16)
#define PHG_GEPHY_PCSI_CON3_OFFSET_RSVD1_WIDTH                                                                     (16)
#define PHG_GEPHY_PCSI_CON3_OFFSET_TPIDL_SYM                                                                        (0)
#define PHG_GEPHY_PCSI_CON3_OFFSET_TPIDL_SYM_WIDTH                                                                  (2)
#define PHG_GEPHY_PCSI_CON3_OFFSET_NLP_SYM                                                                          (2)
#define PHG_GEPHY_PCSI_CON3_OFFSET_NLP_SYM_WIDTH                                                                    (2)
#define PHG_GEPHY_PCSI_CON3_OFFSET_RSVD0                                                                            (4)
#define PHG_GEPHY_PCSI_CON3_OFFSET_RSVD0_WIDTH                                                                      (9)
#define PHG_GEPHY_PCSI_CON3_OFFSET_RCV_DISABLE_10M                                                                 (13)
#define PHG_GEPHY_PCSI_CON3_OFFSET_RCV_DISABLE_10M_WIDTH                                                            (1)
#define PHG_GEPHY_PCSI_CON3_OFFSET_XMIT_DISABLE_10M                                                                (14)
#define PHG_GEPHY_PCSI_CON3_OFFSET_XMIT_DISABLE_10M_WIDTH                                                           (1)
#define PHG_GEPHY_PCSI_CON3_OFFSET_DBG_OUT_SEL                                                                     (15)
#define PHG_GEPHY_PCSI_CON3_OFFSET_DBG_OUT_SEL_WIDTH                                                                (1)
typedef union PHG_GEPHY_PCSI_CON3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tpidl_sym:PHG_GEPHY_PCSI_CON3_OFFSET_TPIDL_SYM_WIDTH;                                                   //[ 1: 0]
        jl_uint32 nlp_sym:PHG_GEPHY_PCSI_CON3_OFFSET_NLP_SYM_WIDTH;                                                       //[ 3: 2]
        jl_uint32 rsvd0:PHG_GEPHY_PCSI_CON3_OFFSET_RSVD0_WIDTH;                                                           //[12: 4]
        jl_uint32 rcv_disable_10m:PHG_GEPHY_PCSI_CON3_OFFSET_RCV_DISABLE_10M_WIDTH;                                       //[13:13]
        jl_uint32 xmit_disable_10m:PHG_GEPHY_PCSI_CON3_OFFSET_XMIT_DISABLE_10M_WIDTH;                                     //[14:14]
        jl_uint32 dbg_out_sel:PHG_GEPHY_PCSI_CON3_OFFSET_DBG_OUT_SEL_WIDTH;                                               //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_PCSI_CON3_OFFSET_RSVD1_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PCSI_CON3_ENTRY_SIZE];
} PHG_GEPHY_PCSI_CON3_t;

#define PHG_GEPHY_DSPI_CON4                                                                    ((jl_uint32)0x0024461CU)
#define PHG_GEPHY_DSPI_CON4_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DSPI_CON4_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DSPI_CON4_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_DSPI_CON4_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_DSPI_CON4_OFFSET_DSP_TX_F2_SEL                                                                    (0)
#define PHG_GEPHY_DSPI_CON4_OFFSET_DSP_TX_F2_SEL_WIDTH                                                              (6)
#define PHG_GEPHY_DSPI_CON4_OFFSET_DSP_TX_F1_SEL                                                                    (6)
#define PHG_GEPHY_DSPI_CON4_OFFSET_DSP_TX_F1_SEL_WIDTH                                                              (6)
#define PHG_GEPHY_DSPI_CON4_OFFSET_DSP_TX_FIR_EN                                                                   (12)
#define PHG_GEPHY_DSPI_CON4_OFFSET_DSP_TX_FIR_EN_WIDTH                                                              (4)
typedef union PHG_GEPHY_DSPI_CON4_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dsp_tx_f2_sel:PHG_GEPHY_DSPI_CON4_OFFSET_DSP_TX_F2_SEL_WIDTH;                                           //[ 5: 0]
        jl_uint32 dsp_tx_f1_sel:PHG_GEPHY_DSPI_CON4_OFFSET_DSP_TX_F1_SEL_WIDTH;                                           //[11: 6]
        jl_uint32 dsp_tx_fir_en:PHG_GEPHY_DSPI_CON4_OFFSET_DSP_TX_FIR_EN_WIDTH;                                           //[15:12]
        jl_uint32 rsvd0:PHG_GEPHY_DSPI_CON4_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DSPI_CON4_ENTRY_SIZE];
} PHG_GEPHY_DSPI_CON4_t;

#define PHG_GEPHY_DSPI_CON5                                                                    ((jl_uint32)0x00244620U)
#define PHG_GEPHY_DSPI_CON5_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DSPI_CON5_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DSPI_CON5_OFFSET_RSVD1                                                                           (16)
#define PHG_GEPHY_DSPI_CON5_OFFSET_RSVD1_WIDTH                                                                     (16)
#define PHG_GEPHY_DSPI_CON5_OFFSET_DSP_RX_F2_SEL                                                                    (0)
#define PHG_GEPHY_DSPI_CON5_OFFSET_DSP_RX_F2_SEL_WIDTH                                                              (6)
#define PHG_GEPHY_DSPI_CON5_OFFSET_DSP_RX_F1_SEL                                                                    (6)
#define PHG_GEPHY_DSPI_CON5_OFFSET_DSP_RX_F1_SEL_WIDTH                                                              (6)
#define PHG_GEPHY_DSPI_CON5_OFFSET_RSVD0                                                                           (12)
#define PHG_GEPHY_DSPI_CON5_OFFSET_RSVD0_WIDTH                                                                      (3)
#define PHG_GEPHY_DSPI_CON5_OFFSET_DSP_RX_FIR_EN                                                                   (15)
#define PHG_GEPHY_DSPI_CON5_OFFSET_DSP_RX_FIR_EN_WIDTH                                                              (1)
typedef union PHG_GEPHY_DSPI_CON5_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dsp_rx_f2_sel:PHG_GEPHY_DSPI_CON5_OFFSET_DSP_RX_F2_SEL_WIDTH;                                           //[ 5: 0]
        jl_uint32 dsp_rx_f1_sel:PHG_GEPHY_DSPI_CON5_OFFSET_DSP_RX_F1_SEL_WIDTH;                                           //[11: 6]
        jl_uint32 rsvd0:PHG_GEPHY_DSPI_CON5_OFFSET_RSVD0_WIDTH;                                                           //[14:12]
        jl_uint32 dsp_rx_fir_en:PHG_GEPHY_DSPI_CON5_OFFSET_DSP_RX_FIR_EN_WIDTH;                                           //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_DSPI_CON5_OFFSET_RSVD1_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DSPI_CON5_ENTRY_SIZE];
} PHG_GEPHY_DSPI_CON5_t;

#define PHG_GEPHY_DSPI_CON6                                                                    ((jl_uint32)0x00244624U)
#define PHG_GEPHY_DSPI_CON6_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DSPI_CON6_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_DSPI_CON6_OFFSET_RSVD1                                                                           (16)
#define PHG_GEPHY_DSPI_CON6_OFFSET_RSVD1_WIDTH                                                                     (16)
#define PHG_GEPHY_DSPI_CON6_OFFSET_DSP_RX_ADC_PEAK                                                                  (0)
#define PHG_GEPHY_DSPI_CON6_OFFSET_DSP_RX_ADC_PEAK_WIDTH                                                            (7)
#define PHG_GEPHY_DSPI_CON6_OFFSET_RSVD0                                                                            (7)
#define PHG_GEPHY_DSPI_CON6_OFFSET_RSVD0_WIDTH                                                                      (2)
#define PHG_GEPHY_DSPI_CON6_OFFSET_DSP_RX_ADC_SIGDET_TH                                                             (9)
#define PHG_GEPHY_DSPI_CON6_OFFSET_DSP_RX_ADC_SIGDET_TH_WIDTH                                                       (7)
typedef union PHG_GEPHY_DSPI_CON6_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dsp_rx_adc_peak:PHG_GEPHY_DSPI_CON6_OFFSET_DSP_RX_ADC_PEAK_WIDTH;                                       //[ 6: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DSPI_CON6_OFFSET_RSVD0_WIDTH;                                                           //[ 8: 7]
        jl_uint32 dsp_rx_adc_sigdet_th:PHG_GEPHY_DSPI_CON6_OFFSET_DSP_RX_ADC_SIGDET_TH_WIDTH;                             //[15: 9]
        jl_uint32 rsvd1:PHG_GEPHY_DSPI_CON6_OFFSET_RSVD1_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DSPI_CON6_ENTRY_SIZE];
} PHG_GEPHY_DSPI_CON6_t;

#define PHG_GEPHY_DSPU_CON                                                                     ((jl_uint32)0x00244628U)
#define PHG_GEPHY_DSPU_CON_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DSPU_CON_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_DSPU_CON_OFFSET_RSVD1                                                                            (16)
#define PHG_GEPHY_DSPU_CON_OFFSET_RSVD1_WIDTH                                                                      (16)
#define PHG_GEPHY_DSPU_CON_OFFSET_ADC_AFIFO_WINIT                                                                   (0)
#define PHG_GEPHY_DSPU_CON_OFFSET_ADC_AFIFO_WINIT_WIDTH                                                             (4)
#define PHG_GEPHY_DSPU_CON_OFFSET_ADC_AFIFO_RINIT                                                                   (4)
#define PHG_GEPHY_DSPU_CON_OFFSET_ADC_AFIFO_RINIT_WIDTH                                                             (4)
#define PHG_GEPHY_DSPU_CON_OFFSET_RSVD0                                                                             (8)
#define PHG_GEPHY_DSPU_CON_OFFSET_RSVD0_WIDTH                                                                       (7)
#define PHG_GEPHY_DSPU_CON_OFFSET_ADC_AFIFO_RW_PTR_LOAD                                                            (15)
#define PHG_GEPHY_DSPU_CON_OFFSET_ADC_AFIFO_RW_PTR_LOAD_WIDTH                                                       (1)
typedef union PHG_GEPHY_DSPU_CON_u {
    struct __attribute__ ((packed)) {
        jl_uint32 adc_afifo_winit:PHG_GEPHY_DSPU_CON_OFFSET_ADC_AFIFO_WINIT_WIDTH;                                        //[ 3: 0]
        jl_uint32 adc_afifo_rinit:PHG_GEPHY_DSPU_CON_OFFSET_ADC_AFIFO_RINIT_WIDTH;                                        //[ 7: 4]
        jl_uint32 rsvd0:PHG_GEPHY_DSPU_CON_OFFSET_RSVD0_WIDTH;                                                            //[14: 8]
        jl_uint32 adc_afifo_rw_ptr_load:PHG_GEPHY_DSPU_CON_OFFSET_ADC_AFIFO_RW_PTR_LOAD_WIDTH;                            //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_DSPU_CON_OFFSET_RSVD1_WIDTH;                                                            //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DSPU_CON_ENTRY_SIZE];
} PHG_GEPHY_DSPU_CON_t;

#define PHG_GEPHY_CFGI_CON0                                                                    ((jl_uint32)0x0024462CU)
#define PHG_GEPHY_CFGI_CON0_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CFGI_CON0_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_CFGI_CON0_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_CFGI_CON0_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_CFGI_CON0_OFFSET_ENERGY_THRE_LO                                                                   (0)
#define PHG_GEPHY_CFGI_CON0_OFFSET_ENERGY_THRE_LO_WIDTH                                                            (16)
typedef union PHG_GEPHY_CFGI_CON0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 energy_thre_lo:PHG_GEPHY_CFGI_CON0_OFFSET_ENERGY_THRE_LO_WIDTH;                                         //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CFGI_CON0_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CFGI_CON0_ENTRY_SIZE];
} PHG_GEPHY_CFGI_CON0_t;

#define PHG_GEPHY_CFGI_CON1                                                                    ((jl_uint32)0x00244630U)
#define PHG_GEPHY_CFGI_CON1_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CFGI_CON1_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_CFGI_CON1_OFFSET_RSVD1                                                                           (16)
#define PHG_GEPHY_CFGI_CON1_OFFSET_RSVD1_WIDTH                                                                     (16)
#define PHG_GEPHY_CFGI_CON1_OFFSET_ENERGY_THRE_HI                                                                   (0)
#define PHG_GEPHY_CFGI_CON1_OFFSET_ENERGY_THRE_HI_WIDTH                                                             (4)
#define PHG_GEPHY_CFGI_CON1_OFFSET_DSP_RX_AMP3                                                                      (4)
#define PHG_GEPHY_CFGI_CON1_OFFSET_DSP_RX_AMP3_WIDTH                                                                (4)
#define PHG_GEPHY_CFGI_CON1_OFFSET_DSP_RX_AMP4                                                                      (8)
#define PHG_GEPHY_CFGI_CON1_OFFSET_DSP_RX_AMP4_WIDTH                                                                (4)
#define PHG_GEPHY_CFGI_CON1_OFFSET_RSVD0                                                                           (12)
#define PHG_GEPHY_CFGI_CON1_OFFSET_RSVD0_WIDTH                                                                      (2)
#define PHG_GEPHY_CFGI_CON1_OFFSET_DETECT_TX                                                                       (14)
#define PHG_GEPHY_CFGI_CON1_OFFSET_DETECT_TX_WIDTH                                                                  (1)
#define PHG_GEPHY_CFGI_CON1_OFFSET_PD_DETECT_TX_EN                                                                 (15)
#define PHG_GEPHY_CFGI_CON1_OFFSET_PD_DETECT_TX_EN_WIDTH                                                            (1)
typedef union PHG_GEPHY_CFGI_CON1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 energy_thre_hi:PHG_GEPHY_CFGI_CON1_OFFSET_ENERGY_THRE_HI_WIDTH;                                         //[ 3: 0]
        jl_uint32 dsp_rx_amp3:PHG_GEPHY_CFGI_CON1_OFFSET_DSP_RX_AMP3_WIDTH;                                               //[ 7: 4]
        jl_uint32 dsp_rx_amp4:PHG_GEPHY_CFGI_CON1_OFFSET_DSP_RX_AMP4_WIDTH;                                               //[11: 8]
        jl_uint32 rsvd0:PHG_GEPHY_CFGI_CON1_OFFSET_RSVD0_WIDTH;                                                           //[13:12]
        jl_uint32 detect_tx:PHG_GEPHY_CFGI_CON1_OFFSET_DETECT_TX_WIDTH;                                                   //[14:14]
        jl_uint32 pd_detect_tx_en:PHG_GEPHY_CFGI_CON1_OFFSET_PD_DETECT_TX_EN_WIDTH;                                       //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_CFGI_CON1_OFFSET_RSVD1_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CFGI_CON1_ENTRY_SIZE];
} PHG_GEPHY_CFGI_CON1_t;

#define PHG_GEPHY_AN_RXLCW1                                                                    ((jl_uint32)0x00244634U)
#define PHG_GEPHY_AN_RXLCW1_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_AN_RXLCW1_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_AN_RXLCW1_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_AN_RXLCW1_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_AN_RXLCW1_OFFSET_AN_RX_LCW_1                                                                      (0)
#define PHG_GEPHY_AN_RXLCW1_OFFSET_AN_RX_LCW_1_WIDTH                                                               (16)
typedef union PHG_GEPHY_AN_RXLCW1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 an_rx_lcw_1:PHG_GEPHY_AN_RXLCW1_OFFSET_AN_RX_LCW_1_WIDTH;                                               //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_AN_RXLCW1_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_AN_RXLCW1_ENTRY_SIZE];
} PHG_GEPHY_AN_RXLCW1_t;

#define PHG_GEPHY_AN_RXLCW2                                                                    ((jl_uint32)0x00244638U)
#define PHG_GEPHY_AN_RXLCW2_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_AN_RXLCW2_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_AN_RXLCW2_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_AN_RXLCW2_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_AN_RXLCW2_OFFSET_AN_RX_LCW_2                                                                      (0)
#define PHG_GEPHY_AN_RXLCW2_OFFSET_AN_RX_LCW_2_WIDTH                                                               (16)
typedef union PHG_GEPHY_AN_RXLCW2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 an_rx_lcw_2:PHG_GEPHY_AN_RXLCW2_OFFSET_AN_RX_LCW_2_WIDTH;                                               //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_AN_RXLCW2_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_AN_RXLCW2_ENTRY_SIZE];
} PHG_GEPHY_AN_RXLCW2_t;

#define PHG_GEPHY_AN_TXLCW1                                                                    ((jl_uint32)0x0024463CU)
#define PHG_GEPHY_AN_TXLCW1_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_AN_TXLCW1_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_AN_TXLCW1_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_AN_TXLCW1_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_AN_TXLCW1_OFFSET_AN_TX_LCW_1                                                                      (0)
#define PHG_GEPHY_AN_TXLCW1_OFFSET_AN_TX_LCW_1_WIDTH                                                               (16)
typedef union PHG_GEPHY_AN_TXLCW1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 an_tx_lcw_1:PHG_GEPHY_AN_TXLCW1_OFFSET_AN_TX_LCW_1_WIDTH;                                               //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_AN_TXLCW1_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_AN_TXLCW1_ENTRY_SIZE];
} PHG_GEPHY_AN_TXLCW1_t;

#define PHG_GEPHY_AN_TXLCW2                                                                    ((jl_uint32)0x00244640U)
#define PHG_GEPHY_AN_TXLCW2_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_AN_TXLCW2_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_AN_TXLCW2_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_AN_TXLCW2_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_AN_TXLCW2_OFFSET_AN_TX_LCW_2                                                                      (0)
#define PHG_GEPHY_AN_TXLCW2_OFFSET_AN_TX_LCW_2_WIDTH                                                               (16)
typedef union PHG_GEPHY_AN_TXLCW2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 an_tx_lcw_2:PHG_GEPHY_AN_TXLCW2_OFFSET_AN_TX_LCW_2_WIDTH;                                               //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_AN_TXLCW2_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_AN_TXLCW2_ENTRY_SIZE];
} PHG_GEPHY_AN_TXLCW2_t;

#define PHG_GEPHY_DESCR_CFG0                                                                   ((jl_uint32)0x00244644U)
#define PHG_GEPHY_DESCR_CFG0_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DESCR_CFG0_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_DESCR_CFG0_OFFSET_RSVD1                                                                          (16)
#define PHG_GEPHY_DESCR_CFG0_OFFSET_RSVD1_WIDTH                                                                    (16)
#define PHG_GEPHY_DESCR_CFG0_OFFSET_DESCR_MAXLOCK1                                                                  (0)
#define PHG_GEPHY_DESCR_CFG0_OFFSET_DESCR_MAXLOCK1_WIDTH                                                            (4)
#define PHG_GEPHY_DESCR_CFG0_OFFSET_RSVD0                                                                           (4)
#define PHG_GEPHY_DESCR_CFG0_OFFSET_RSVD0_WIDTH                                                                    (11)
#define PHG_GEPHY_DESCR_CFG0_OFFSET_DESCR_LOCK_TIMEOUT_EN                                                          (15)
#define PHG_GEPHY_DESCR_CFG0_OFFSET_DESCR_LOCK_TIMEOUT_EN_WIDTH                                                     (1)
typedef union PHG_GEPHY_DESCR_CFG0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 descr_maxlock1:PHG_GEPHY_DESCR_CFG0_OFFSET_DESCR_MAXLOCK1_WIDTH;                                        //[ 3: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DESCR_CFG0_OFFSET_RSVD0_WIDTH;                                                          //[14: 4]
        jl_uint32 descr_lock_timeout_en:PHG_GEPHY_DESCR_CFG0_OFFSET_DESCR_LOCK_TIMEOUT_EN_WIDTH;                          //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_DESCR_CFG0_OFFSET_RSVD1_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DESCR_CFG0_ENTRY_SIZE];
} PHG_GEPHY_DESCR_CFG0_t;

#define PHG_GEPHY_DESCR_CFG1                                                                   ((jl_uint32)0x00244648U)
#define PHG_GEPHY_DESCR_CFG1_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_DESCR_CFG1_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_DESCR_CFG1_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_DESCR_CFG1_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_DESCR_CFG1_OFFSET_DESCR_MAXLOCK0                                                                  (0)
#define PHG_GEPHY_DESCR_CFG1_OFFSET_DESCR_MAXLOCK0_WIDTH                                                           (16)
typedef union PHG_GEPHY_DESCR_CFG1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 descr_maxlock0:PHG_GEPHY_DESCR_CFG1_OFFSET_DESCR_MAXLOCK0_WIDTH;                                        //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_DESCR_CFG1_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_DESCR_CFG1_ENTRY_SIZE];
} PHG_GEPHY_DESCR_CFG1_t;

#define PHG_GEPHY_CFGI_RS7                                                                     ((jl_uint32)0x0024464CU)
#define PHG_GEPHY_CFGI_RS7_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CFGI_RS7_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_CFGI_RS7_OFFSET_RSVD2                                                                            (15)
#define PHG_GEPHY_CFGI_RS7_OFFSET_RSVD2_WIDTH                                                                      (17)
#define PHG_GEPHY_CFGI_RS7_OFFSET_RSVD1                                                                             (0)
#define PHG_GEPHY_CFGI_RS7_OFFSET_RSVD1_WIDTH                                                                       (5)
#define PHG_GEPHY_CFGI_RS7_OFFSET_DSP_RX_AMP_SIG_THRE                                                               (5)
#define PHG_GEPHY_CFGI_RS7_OFFSET_DSP_RX_AMP_SIG_THRE_WIDTH                                                         (4)
#define PHG_GEPHY_CFGI_RS7_OFFSET_RSVD0                                                                             (9)
#define PHG_GEPHY_CFGI_RS7_OFFSET_RSVD0_WIDTH                                                                       (1)
#define PHG_GEPHY_CFGI_RS7_OFFSET_DSP_RX_NLP_MASK                                                                  (10)
#define PHG_GEPHY_CFGI_RS7_OFFSET_DSP_RX_NLP_MASK_WIDTH                                                             (3)
#define PHG_GEPHY_CFGI_RS7_OFFSET_DSP_RX_NLP_TIME_SEL                                                              (13)
#define PHG_GEPHY_CFGI_RS7_OFFSET_DSP_RX_NLP_TIME_SEL_WIDTH                                                         (2)
typedef union PHG_GEPHY_CFGI_RS7_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd1:PHG_GEPHY_CFGI_RS7_OFFSET_RSVD1_WIDTH;                                                            //[ 4: 0]
        jl_uint32 dsp_rx_amp_sig_thre:PHG_GEPHY_CFGI_RS7_OFFSET_DSP_RX_AMP_SIG_THRE_WIDTH;                                //[ 8: 5]
        jl_uint32 rsvd0:PHG_GEPHY_CFGI_RS7_OFFSET_RSVD0_WIDTH;                                                            //[ 9: 9]
        jl_uint32 dsp_rx_nlp_mask:PHG_GEPHY_CFGI_RS7_OFFSET_DSP_RX_NLP_MASK_WIDTH;                                        //[12:10]
        jl_uint32 dsp_rx_nlp_time_sel:PHG_GEPHY_CFGI_RS7_OFFSET_DSP_RX_NLP_TIME_SEL_WIDTH;                                //[14:13]
        jl_uint32 rsvd2:PHG_GEPHY_CFGI_RS7_OFFSET_RSVD2_WIDTH;                                                            //[31:15]
    } BF;
    jl_uint32 val[PHG_GEPHY_CFGI_RS7_ENTRY_SIZE];
} PHG_GEPHY_CFGI_RS7_t;

#define PHG_GEPHY_CFGI_RS0                                                                     ((jl_uint32)0x00244650U)
#define PHG_GEPHY_CFGI_RS0_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CFGI_RS0_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_CFGI_RS0_OFFSET_RSVD1                                                                            (14)
#define PHG_GEPHY_CFGI_RS0_OFFSET_RSVD1_WIDTH                                                                      (18)
#define PHG_GEPHY_CFGI_RS0_OFFSET_RAISED_TABLE_1                                                                    (0)
#define PHG_GEPHY_CFGI_RS0_OFFSET_RAISED_TABLE_1_WIDTH                                                              (6)
#define PHG_GEPHY_CFGI_RS0_OFFSET_RSVD0                                                                             (6)
#define PHG_GEPHY_CFGI_RS0_OFFSET_RSVD0_WIDTH                                                                       (2)
#define PHG_GEPHY_CFGI_RS0_OFFSET_RAISED_TABLE_0                                                                    (8)
#define PHG_GEPHY_CFGI_RS0_OFFSET_RAISED_TABLE_0_WIDTH                                                              (6)
typedef union PHG_GEPHY_CFGI_RS0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 raised_table_1:PHG_GEPHY_CFGI_RS0_OFFSET_RAISED_TABLE_1_WIDTH;                                          //[ 5: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CFGI_RS0_OFFSET_RSVD0_WIDTH;                                                            //[ 7: 6]
        jl_uint32 raised_table_0:PHG_GEPHY_CFGI_RS0_OFFSET_RAISED_TABLE_0_WIDTH;                                          //[13: 8]
        jl_uint32 rsvd1:PHG_GEPHY_CFGI_RS0_OFFSET_RSVD1_WIDTH;                                                            //[31:14]
    } BF;
    jl_uint32 val[PHG_GEPHY_CFGI_RS0_ENTRY_SIZE];
} PHG_GEPHY_CFGI_RS0_t;

#define PHG_GEPHY_CFGI_RS1                                                                     ((jl_uint32)0x00244654U)
#define PHG_GEPHY_CFGI_RS1_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CFGI_RS1_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_CFGI_RS1_OFFSET_RSVD1                                                                            (14)
#define PHG_GEPHY_CFGI_RS1_OFFSET_RSVD1_WIDTH                                                                      (18)
#define PHG_GEPHY_CFGI_RS1_OFFSET_RAISED_TABLE_3                                                                    (0)
#define PHG_GEPHY_CFGI_RS1_OFFSET_RAISED_TABLE_3_WIDTH                                                              (6)
#define PHG_GEPHY_CFGI_RS1_OFFSET_RSVD0                                                                             (6)
#define PHG_GEPHY_CFGI_RS1_OFFSET_RSVD0_WIDTH                                                                       (2)
#define PHG_GEPHY_CFGI_RS1_OFFSET_RAISED_TABLE_2                                                                    (8)
#define PHG_GEPHY_CFGI_RS1_OFFSET_RAISED_TABLE_2_WIDTH                                                              (6)
typedef union PHG_GEPHY_CFGI_RS1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 raised_table_3:PHG_GEPHY_CFGI_RS1_OFFSET_RAISED_TABLE_3_WIDTH;                                          //[ 5: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CFGI_RS1_OFFSET_RSVD0_WIDTH;                                                            //[ 7: 6]
        jl_uint32 raised_table_2:PHG_GEPHY_CFGI_RS1_OFFSET_RAISED_TABLE_2_WIDTH;                                          //[13: 8]
        jl_uint32 rsvd1:PHG_GEPHY_CFGI_RS1_OFFSET_RSVD1_WIDTH;                                                            //[31:14]
    } BF;
    jl_uint32 val[PHG_GEPHY_CFGI_RS1_ENTRY_SIZE];
} PHG_GEPHY_CFGI_RS1_t;

#define PHG_GEPHY_CFGI_RS2                                                                     ((jl_uint32)0x00244658U)
#define PHG_GEPHY_CFGI_RS2_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CFGI_RS2_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_CFGI_RS2_OFFSET_RSVD1                                                                            (14)
#define PHG_GEPHY_CFGI_RS2_OFFSET_RSVD1_WIDTH                                                                      (18)
#define PHG_GEPHY_CFGI_RS2_OFFSET_RAISED_TABLE_5                                                                    (0)
#define PHG_GEPHY_CFGI_RS2_OFFSET_RAISED_TABLE_5_WIDTH                                                              (6)
#define PHG_GEPHY_CFGI_RS2_OFFSET_RSVD0                                                                             (6)
#define PHG_GEPHY_CFGI_RS2_OFFSET_RSVD0_WIDTH                                                                       (2)
#define PHG_GEPHY_CFGI_RS2_OFFSET_RAISED_TABLE_4                                                                    (8)
#define PHG_GEPHY_CFGI_RS2_OFFSET_RAISED_TABLE_4_WIDTH                                                              (6)
typedef union PHG_GEPHY_CFGI_RS2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 raised_table_5:PHG_GEPHY_CFGI_RS2_OFFSET_RAISED_TABLE_5_WIDTH;                                          //[ 5: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CFGI_RS2_OFFSET_RSVD0_WIDTH;                                                            //[ 7: 6]
        jl_uint32 raised_table_4:PHG_GEPHY_CFGI_RS2_OFFSET_RAISED_TABLE_4_WIDTH;                                          //[13: 8]
        jl_uint32 rsvd1:PHG_GEPHY_CFGI_RS2_OFFSET_RSVD1_WIDTH;                                                            //[31:14]
    } BF;
    jl_uint32 val[PHG_GEPHY_CFGI_RS2_ENTRY_SIZE];
} PHG_GEPHY_CFGI_RS2_t;

#define PHG_GEPHY_CFGI_RS3                                                                     ((jl_uint32)0x0024465CU)
#define PHG_GEPHY_CFGI_RS3_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CFGI_RS3_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_CFGI_RS3_OFFSET_RSVD1                                                                            (14)
#define PHG_GEPHY_CFGI_RS3_OFFSET_RSVD1_WIDTH                                                                      (18)
#define PHG_GEPHY_CFGI_RS3_OFFSET_RAISED_TABLE_7                                                                    (0)
#define PHG_GEPHY_CFGI_RS3_OFFSET_RAISED_TABLE_7_WIDTH                                                              (6)
#define PHG_GEPHY_CFGI_RS3_OFFSET_RSVD0                                                                             (6)
#define PHG_GEPHY_CFGI_RS3_OFFSET_RSVD0_WIDTH                                                                       (2)
#define PHG_GEPHY_CFGI_RS3_OFFSET_RAISED_TABLE_6                                                                    (8)
#define PHG_GEPHY_CFGI_RS3_OFFSET_RAISED_TABLE_6_WIDTH                                                              (6)
typedef union PHG_GEPHY_CFGI_RS3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 raised_table_7:PHG_GEPHY_CFGI_RS3_OFFSET_RAISED_TABLE_7_WIDTH;                                          //[ 5: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CFGI_RS3_OFFSET_RSVD0_WIDTH;                                                            //[ 7: 6]
        jl_uint32 raised_table_6:PHG_GEPHY_CFGI_RS3_OFFSET_RAISED_TABLE_6_WIDTH;                                          //[13: 8]
        jl_uint32 rsvd1:PHG_GEPHY_CFGI_RS3_OFFSET_RSVD1_WIDTH;                                                            //[31:14]
    } BF;
    jl_uint32 val[PHG_GEPHY_CFGI_RS3_ENTRY_SIZE];
} PHG_GEPHY_CFGI_RS3_t;

#define PHG_GEPHY_CFGI_RS4                                                                     ((jl_uint32)0x00244660U)
#define PHG_GEPHY_CFGI_RS4_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CFGI_RS4_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_CFGI_RS4_OFFSET_RSVD1                                                                            (14)
#define PHG_GEPHY_CFGI_RS4_OFFSET_RSVD1_WIDTH                                                                      (18)
#define PHG_GEPHY_CFGI_RS4_OFFSET_RAISED_TABLE_9                                                                    (0)
#define PHG_GEPHY_CFGI_RS4_OFFSET_RAISED_TABLE_9_WIDTH                                                              (6)
#define PHG_GEPHY_CFGI_RS4_OFFSET_RSVD0                                                                             (6)
#define PHG_GEPHY_CFGI_RS4_OFFSET_RSVD0_WIDTH                                                                       (2)
#define PHG_GEPHY_CFGI_RS4_OFFSET_RAISED_TABLE_8                                                                    (8)
#define PHG_GEPHY_CFGI_RS4_OFFSET_RAISED_TABLE_8_WIDTH                                                              (6)
typedef union PHG_GEPHY_CFGI_RS4_u {
    struct __attribute__ ((packed)) {
        jl_uint32 raised_table_9:PHG_GEPHY_CFGI_RS4_OFFSET_RAISED_TABLE_9_WIDTH;                                          //[ 5: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CFGI_RS4_OFFSET_RSVD0_WIDTH;                                                            //[ 7: 6]
        jl_uint32 raised_table_8:PHG_GEPHY_CFGI_RS4_OFFSET_RAISED_TABLE_8_WIDTH;                                          //[13: 8]
        jl_uint32 rsvd1:PHG_GEPHY_CFGI_RS4_OFFSET_RSVD1_WIDTH;                                                            //[31:14]
    } BF;
    jl_uint32 val[PHG_GEPHY_CFGI_RS4_ENTRY_SIZE];
} PHG_GEPHY_CFGI_RS4_t;

#define PHG_GEPHY_CFGI_RS5                                                                     ((jl_uint32)0x00244664U)
#define PHG_GEPHY_CFGI_RS5_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CFGI_RS5_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_CFGI_RS5_OFFSET_RSVD0                                                                            (16)
#define PHG_GEPHY_CFGI_RS5_OFFSET_RSVD0_WIDTH                                                                      (16)
#define PHG_GEPHY_CFGI_RS5_OFFSET_DSP_RX_MAX_BREAK                                                                  (0)
#define PHG_GEPHY_CFGI_RS5_OFFSET_DSP_RX_MAX_BREAK_WIDTH                                                            (8)
#define PHG_GEPHY_CFGI_RS5_OFFSET_DSP_RX_SIG_THRE                                                                   (8)
#define PHG_GEPHY_CFGI_RS5_OFFSET_DSP_RX_SIG_THRE_WIDTH                                                             (8)
typedef union PHG_GEPHY_CFGI_RS5_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dsp_rx_max_break:PHG_GEPHY_CFGI_RS5_OFFSET_DSP_RX_MAX_BREAK_WIDTH;                                      //[ 7: 0]
        jl_uint32 dsp_rx_sig_thre:PHG_GEPHY_CFGI_RS5_OFFSET_DSP_RX_SIG_THRE_WIDTH;                                        //[15: 8]
        jl_uint32 rsvd0:PHG_GEPHY_CFGI_RS5_OFFSET_RSVD0_WIDTH;                                                            //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CFGI_RS5_ENTRY_SIZE];
} PHG_GEPHY_CFGI_RS5_t;

#define PHG_GEPHY_CFGI_CON2                                                                    ((jl_uint32)0x00244668U)
#define PHG_GEPHY_CFGI_CON2_NUM                                                                ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CFGI_CON2_ENTRY_SIZE                                                                              (1)
#define PHG_GEPHY_CFGI_CON2_OFFSET_RSVD0                                                                           (16)
#define PHG_GEPHY_CFGI_CON2_OFFSET_RSVD0_WIDTH                                                                     (16)
#define PHG_GEPHY_CFGI_CON2_OFFSET_DSP_RX_ME_VALID_THRE                                                             (0)
#define PHG_GEPHY_CFGI_CON2_OFFSET_DSP_RX_ME_VALID_THRE_WIDTH                                                       (8)
#define PHG_GEPHY_CFGI_CON2_OFFSET_DSP_RX_MAX_ZERO_CNT                                                              (8)
#define PHG_GEPHY_CFGI_CON2_OFFSET_DSP_RX_MAX_ZERO_CNT_WIDTH                                                        (8)
typedef union PHG_GEPHY_CFGI_CON2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dsp_rx_me_valid_thre:PHG_GEPHY_CFGI_CON2_OFFSET_DSP_RX_ME_VALID_THRE_WIDTH;                             //[ 7: 0]
        jl_uint32 dsp_rx_max_zero_cnt:PHG_GEPHY_CFGI_CON2_OFFSET_DSP_RX_MAX_ZERO_CNT_WIDTH;                               //[15: 8]
        jl_uint32 rsvd0:PHG_GEPHY_CFGI_CON2_OFFSET_RSVD0_WIDTH;                                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CFGI_CON2_ENTRY_SIZE];
} PHG_GEPHY_CFGI_CON2_t;

#define PHG_GEPHY_CFGI_RS6                                                                     ((jl_uint32)0x0024466CU)
#define PHG_GEPHY_CFGI_RS6_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CFGI_RS6_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_CFGI_RS6_OFFSET_RSVD0                                                                            (16)
#define PHG_GEPHY_CFGI_RS6_OFFSET_RSVD0_WIDTH                                                                      (16)
#define PHG_GEPHY_CFGI_RS6_OFFSET_DSP_RX_ADC_RD_INIT                                                                (0)
#define PHG_GEPHY_CFGI_RS6_OFFSET_DSP_RX_ADC_RD_INIT_WIDTH                                                          (8)
#define PHG_GEPHY_CFGI_RS6_OFFSET_DSP_RX_ADC_WR_INIT                                                                (8)
#define PHG_GEPHY_CFGI_RS6_OFFSET_DSP_RX_ADC_WR_INIT_WIDTH                                                          (8)
typedef union PHG_GEPHY_CFGI_RS6_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dsp_rx_adc_rd_init:PHG_GEPHY_CFGI_RS6_OFFSET_DSP_RX_ADC_RD_INIT_WIDTH;                                  //[ 7: 0]
        jl_uint32 dsp_rx_adc_wr_init:PHG_GEPHY_CFGI_RS6_OFFSET_DSP_RX_ADC_WR_INIT_WIDTH;                                  //[15: 8]
        jl_uint32 rsvd0:PHG_GEPHY_CFGI_RS6_OFFSET_RSVD0_WIDTH;                                                            //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CFGI_RS6_ENTRY_SIZE];
} PHG_GEPHY_CFGI_RS6_t;

#define PHG_GEPHY_CFG_CPU_CTRL                                                                 ((jl_uint32)0x00244670U)
#define PHG_GEPHY_CFG_CPU_CTRL_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CFG_CPU_CTRL_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_CFG_CPU_CTRL_OFFSET_RSVD1                                                                        (14)
#define PHG_GEPHY_CFG_CPU_CTRL_OFFSET_RSVD1_WIDTH                                                                  (18)
#define PHG_GEPHY_CFG_CPU_CTRL_OFFSET_RSVD0                                                                         (0)
#define PHG_GEPHY_CFG_CPU_CTRL_OFFSET_RSVD0_WIDTH                                                                  (12)
#define PHG_GEPHY_CFG_CPU_CTRL_OFFSET_ECO_WATCHDOG_RESETN_GATE                                                     (12)
#define PHG_GEPHY_CFG_CPU_CTRL_OFFSET_ECO_WATCHDOG_RESETN_GATE_WIDTH                                                (1)
#define PHG_GEPHY_CFG_CPU_CTRL_OFFSET_ECO_CPU_RESET                                                                (13)
#define PHG_GEPHY_CFG_CPU_CTRL_OFFSET_ECO_CPU_RESET_WIDTH                                                           (1)
typedef union PHG_GEPHY_CFG_CPU_CTRL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd0:PHG_GEPHY_CFG_CPU_CTRL_OFFSET_RSVD0_WIDTH;                                                        //[11: 0]
        jl_uint32 eco_watchdog_resetn_gate:PHG_GEPHY_CFG_CPU_CTRL_OFFSET_ECO_WATCHDOG_RESETN_GATE_WIDTH;                  //[12:12]
        jl_uint32 eco_cpu_reset:PHG_GEPHY_CFG_CPU_CTRL_OFFSET_ECO_CPU_RESET_WIDTH;                                        //[13:13]
        jl_uint32 rsvd1:PHG_GEPHY_CFG_CPU_CTRL_OFFSET_RSVD1_WIDTH;                                                        //[31:14]
    } BF;
    jl_uint32 val[PHG_GEPHY_CFG_CPU_CTRL_ENTRY_SIZE];
} PHG_GEPHY_CFG_CPU_CTRL_t;

#define PHG_GEPHY_EEEPS1R                                                                      ((jl_uint32)0x00244674U)
#define PHG_GEPHY_EEEPS1R_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_EEEPS1R_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_EEEPS1R_OFFSET_RSVD1                                                                             (12)
#define PHG_GEPHY_EEEPS1R_OFFSET_RSVD1_WIDTH                                                                       (20)
#define PHG_GEPHY_EEEPS1R_OFFSET_RSVD0                                                                              (0)
#define PHG_GEPHY_EEEPS1R_OFFSET_RSVD0_WIDTH                                                                        (8)
#define PHG_GEPHY_EEEPS1R_OFFSET_RX_LPI_INDICATION                                                                  (8)
#define PHG_GEPHY_EEEPS1R_OFFSET_RX_LPI_INDICATION_WIDTH                                                            (1)
#define PHG_GEPHY_EEEPS1R_OFFSET_TX_LPI_INDICATION                                                                  (9)
#define PHG_GEPHY_EEEPS1R_OFFSET_TX_LPI_INDICATION_WIDTH                                                            (1)
#define PHG_GEPHY_EEEPS1R_OFFSET_RX_LPI_RECEIVED                                                                   (10)
#define PHG_GEPHY_EEEPS1R_OFFSET_RX_LPI_RECEIVED_WIDTH                                                              (1)
#define PHG_GEPHY_EEEPS1R_OFFSET_TX_LPI_RECEIVED                                                                   (11)
#define PHG_GEPHY_EEEPS1R_OFFSET_TX_LPI_RECEIVED_WIDTH                                                              (1)
typedef union PHG_GEPHY_EEEPS1R_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd0:PHG_GEPHY_EEEPS1R_OFFSET_RSVD0_WIDTH;                                                             //[ 7: 0]
        jl_uint32 rx_lpi_indication:PHG_GEPHY_EEEPS1R_OFFSET_RX_LPI_INDICATION_WIDTH;                                     //[ 8: 8]
        jl_uint32 tx_lpi_indication:PHG_GEPHY_EEEPS1R_OFFSET_TX_LPI_INDICATION_WIDTH;                                     //[ 9: 9]
        jl_uint32 rx_lpi_received:PHG_GEPHY_EEEPS1R_OFFSET_RX_LPI_RECEIVED_WIDTH;                                         //[10:10]
        jl_uint32 tx_lpi_received:PHG_GEPHY_EEEPS1R_OFFSET_TX_LPI_RECEIVED_WIDTH;                                         //[11:11]
        jl_uint32 rsvd1:PHG_GEPHY_EEEPS1R_OFFSET_RSVD1_WIDTH;                                                             //[31:12]
    } BF;
    jl_uint32 val[PHG_GEPHY_EEEPS1R_ENTRY_SIZE];
} PHG_GEPHY_EEEPS1R_t;

#define PHG_GEPHY_ANA_PU0                                                                      ((jl_uint32)0x00244780U)
#define PHG_GEPHY_ANA_PU0_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_PU0_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_ANA_PU0_OFFSET_RSVD0                                                                             (16)
#define PHG_GEPHY_ANA_PU0_OFFSET_RSVD0_WIDTH                                                                       (16)
#define PHG_GEPHY_ANA_PU0_OFFSET_RSVD_WR_PU0                                                                        (0)
#define PHG_GEPHY_ANA_PU0_OFFSET_RSVD_WR_PU0_WIDTH                                                                  (4)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_DLY_3                                                                       (4)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_DLY_3_WIDTH                                                                 (1)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_DLY_2                                                                       (5)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_DLY_2_WIDTH                                                                 (1)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_DLY_1                                                                       (6)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_DLY_1_WIDTH                                                                 (1)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_DLY_0                                                                       (7)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_DLY_0_WIDTH                                                                 (1)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_3                                                                           (8)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_3_WIDTH                                                                     (1)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_2                                                                           (9)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_2_WIDTH                                                                     (1)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_1                                                                          (10)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_1_WIDTH                                                                     (1)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_0                                                                          (11)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_0_WIDTH                                                                     (1)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_AMP_3                                                                          (12)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_AMP_3_WIDTH                                                                     (1)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_AMP_2                                                                          (13)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_AMP_2_WIDTH                                                                     (1)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_AMP_1                                                                          (14)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_AMP_1_WIDTH                                                                     (1)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_AMP_0                                                                          (15)
#define PHG_GEPHY_ANA_PU0_OFFSET_PU_AMP_0_WIDTH                                                                     (1)
typedef union PHG_GEPHY_ANA_PU0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd_wr_pu0:PHG_GEPHY_ANA_PU0_OFFSET_RSVD_WR_PU0_WIDTH;                                                 //[ 3: 0]
        jl_uint32 pu_dac_dly_3:PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_DLY_3_WIDTH;                                               //[ 4: 4]
        jl_uint32 pu_dac_dly_2:PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_DLY_2_WIDTH;                                               //[ 5: 5]
        jl_uint32 pu_dac_dly_1:PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_DLY_1_WIDTH;                                               //[ 6: 6]
        jl_uint32 pu_dac_dly_0:PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_DLY_0_WIDTH;                                               //[ 7: 7]
        jl_uint32 pu_dac_3:PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_3_WIDTH;                                                       //[ 8: 8]
        jl_uint32 pu_dac_2:PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_2_WIDTH;                                                       //[ 9: 9]
        jl_uint32 pu_dac_1:PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_1_WIDTH;                                                       //[10:10]
        jl_uint32 pu_dac_0:PHG_GEPHY_ANA_PU0_OFFSET_PU_DAC_0_WIDTH;                                                       //[11:11]
        jl_uint32 pu_amp_3:PHG_GEPHY_ANA_PU0_OFFSET_PU_AMP_3_WIDTH;                                                       //[12:12]
        jl_uint32 pu_amp_2:PHG_GEPHY_ANA_PU0_OFFSET_PU_AMP_2_WIDTH;                                                       //[13:13]
        jl_uint32 pu_amp_1:PHG_GEPHY_ANA_PU0_OFFSET_PU_AMP_1_WIDTH;                                                       //[14:14]
        jl_uint32 pu_amp_0:PHG_GEPHY_ANA_PU0_OFFSET_PU_AMP_0_WIDTH;                                                       //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_PU0_OFFSET_RSVD0_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_PU0_ENTRY_SIZE];
} PHG_GEPHY_ANA_PU0_t;

#define PHG_GEPHY_ANA_PU1                                                                      ((jl_uint32)0x00244784U)
#define PHG_GEPHY_ANA_PU1_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_PU1_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_ANA_PU1_OFFSET_RSVD0                                                                             (16)
#define PHG_GEPHY_ANA_PU1_OFFSET_RSVD0_WIDTH                                                                       (16)
#define PHG_GEPHY_ANA_PU1_OFFSET_RSVD_WR_PU1                                                                        (0)
#define PHG_GEPHY_ANA_PU1_OFFSET_RSVD_WR_PU1_WIDTH                                                                  (3)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_RANDOM                                                                          (3)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_RANDOM_WIDTH                                                                    (1)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_SAR_3                                                                           (4)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_SAR_3_WIDTH                                                                     (1)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_SAR_2                                                                           (5)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_SAR_2_WIDTH                                                                     (1)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_SAR_1                                                                           (6)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_SAR_1_WIDTH                                                                     (1)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_SAR_0                                                                           (7)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_SAR_0_WIDTH                                                                     (1)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_RX_3                                                                            (8)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_RX_3_WIDTH                                                                      (1)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_RX_2                                                                            (9)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_RX_2_WIDTH                                                                      (1)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_RX_1                                                                           (10)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_RX_1_WIDTH                                                                      (1)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_RX_0                                                                           (11)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_RX_0_WIDTH                                                                      (1)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_PI_3                                                                           (12)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_PI_3_WIDTH                                                                      (1)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_PI_2                                                                           (13)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_PI_2_WIDTH                                                                      (1)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_PI_1                                                                           (14)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_PI_1_WIDTH                                                                      (1)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_PI_0                                                                           (15)
#define PHG_GEPHY_ANA_PU1_OFFSET_PU_PI_0_WIDTH                                                                      (1)
typedef union PHG_GEPHY_ANA_PU1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd_wr_pu1:PHG_GEPHY_ANA_PU1_OFFSET_RSVD_WR_PU1_WIDTH;                                                 //[ 2: 0]
        jl_uint32 pu_random:PHG_GEPHY_ANA_PU1_OFFSET_PU_RANDOM_WIDTH;                                                     //[ 3: 3]
        jl_uint32 pu_sar_3:PHG_GEPHY_ANA_PU1_OFFSET_PU_SAR_3_WIDTH;                                                       //[ 4: 4]
        jl_uint32 pu_sar_2:PHG_GEPHY_ANA_PU1_OFFSET_PU_SAR_2_WIDTH;                                                       //[ 5: 5]
        jl_uint32 pu_sar_1:PHG_GEPHY_ANA_PU1_OFFSET_PU_SAR_1_WIDTH;                                                       //[ 6: 6]
        jl_uint32 pu_sar_0:PHG_GEPHY_ANA_PU1_OFFSET_PU_SAR_0_WIDTH;                                                       //[ 7: 7]
        jl_uint32 pu_rx_3:PHG_GEPHY_ANA_PU1_OFFSET_PU_RX_3_WIDTH;                                                         //[ 8: 8]
        jl_uint32 pu_rx_2:PHG_GEPHY_ANA_PU1_OFFSET_PU_RX_2_WIDTH;                                                         //[ 9: 9]
        jl_uint32 pu_rx_1:PHG_GEPHY_ANA_PU1_OFFSET_PU_RX_1_WIDTH;                                                         //[10:10]
        jl_uint32 pu_rx_0:PHG_GEPHY_ANA_PU1_OFFSET_PU_RX_0_WIDTH;                                                         //[11:11]
        jl_uint32 pu_pi_3:PHG_GEPHY_ANA_PU1_OFFSET_PU_PI_3_WIDTH;                                                         //[12:12]
        jl_uint32 pu_pi_2:PHG_GEPHY_ANA_PU1_OFFSET_PU_PI_2_WIDTH;                                                         //[13:13]
        jl_uint32 pu_pi_1:PHG_GEPHY_ANA_PU1_OFFSET_PU_PI_1_WIDTH;                                                         //[14:14]
        jl_uint32 pu_pi_0:PHG_GEPHY_ANA_PU1_OFFSET_PU_PI_0_WIDTH;                                                         //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_PU1_OFFSET_RSVD0_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_PU1_ENTRY_SIZE];
} PHG_GEPHY_ANA_PU1_t;

#define PHG_GEPHY_ANA_RX0                                                                      ((jl_uint32)0x00244788U)
#define PHG_GEPHY_ANA_RX0_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_RX0_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_ANA_RX0_OFFSET_RSVD0                                                                             (16)
#define PHG_GEPHY_ANA_RX0_OFFSET_RSVD0_WIDTH                                                                       (16)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_RVDD13_SEL_3                                                                    (0)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_RVDD13_SEL_3_WIDTH                                                              (1)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_RVDD13_SEL_2                                                                    (1)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_RVDD13_SEL_2_WIDTH                                                              (1)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_RVDD13_SEL_1                                                                    (2)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_RVDD13_SEL_1_WIDTH                                                              (1)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_RVDD13_SEL_0                                                                    (3)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_RVDD13_SEL_0_WIDTH                                                              (1)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_CP_START_3                                                                      (4)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_CP_START_3_WIDTH                                                                (1)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_CP_START_2                                                                      (5)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_CP_START_2_WIDTH                                                                (1)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_CP_START_1                                                                      (6)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_CP_START_1_WIDTH                                                                (1)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_CP_START_0                                                                      (7)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_CP_START_0_WIDTH                                                                (1)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_BOOST_EN_3                                                                      (8)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_BOOST_EN_3_WIDTH                                                                (1)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_BOOST_EN_2                                                                      (9)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_BOOST_EN_2_WIDTH                                                                (1)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_BOOST_EN_1                                                                     (10)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_BOOST_EN_1_WIDTH                                                                (1)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_BOOST_EN_0                                                                     (11)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_BOOST_EN_0_WIDTH                                                                (1)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_BM_CP_3                                                                        (12)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_BM_CP_3_WIDTH                                                                   (1)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_BM_CP_2                                                                        (13)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_BM_CP_2_WIDTH                                                                   (1)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_BM_CP_1                                                                        (14)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_BM_CP_1_WIDTH                                                                   (1)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_BM_CP_0                                                                        (15)
#define PHG_GEPHY_ANA_RX0_OFFSET_RX_BM_CP_0_WIDTH                                                                   (1)
typedef union PHG_GEPHY_ANA_RX0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_rvdd13_sel_3:PHG_GEPHY_ANA_RX0_OFFSET_RX_RVDD13_SEL_3_WIDTH;                                         //[ 0: 0]
        jl_uint32 rx_rvdd13_sel_2:PHG_GEPHY_ANA_RX0_OFFSET_RX_RVDD13_SEL_2_WIDTH;                                         //[ 1: 1]
        jl_uint32 rx_rvdd13_sel_1:PHG_GEPHY_ANA_RX0_OFFSET_RX_RVDD13_SEL_1_WIDTH;                                         //[ 2: 2]
        jl_uint32 rx_rvdd13_sel_0:PHG_GEPHY_ANA_RX0_OFFSET_RX_RVDD13_SEL_0_WIDTH;                                         //[ 3: 3]
        jl_uint32 rx_cp_start_3:PHG_GEPHY_ANA_RX0_OFFSET_RX_CP_START_3_WIDTH;                                             //[ 4: 4]
        jl_uint32 rx_cp_start_2:PHG_GEPHY_ANA_RX0_OFFSET_RX_CP_START_2_WIDTH;                                             //[ 5: 5]
        jl_uint32 rx_cp_start_1:PHG_GEPHY_ANA_RX0_OFFSET_RX_CP_START_1_WIDTH;                                             //[ 6: 6]
        jl_uint32 rx_cp_start_0:PHG_GEPHY_ANA_RX0_OFFSET_RX_CP_START_0_WIDTH;                                             //[ 7: 7]
        jl_uint32 rx_boost_en_3:PHG_GEPHY_ANA_RX0_OFFSET_RX_BOOST_EN_3_WIDTH;                                             //[ 8: 8]
        jl_uint32 rx_boost_en_2:PHG_GEPHY_ANA_RX0_OFFSET_RX_BOOST_EN_2_WIDTH;                                             //[ 9: 9]
        jl_uint32 rx_boost_en_1:PHG_GEPHY_ANA_RX0_OFFSET_RX_BOOST_EN_1_WIDTH;                                             //[10:10]
        jl_uint32 rx_boost_en_0:PHG_GEPHY_ANA_RX0_OFFSET_RX_BOOST_EN_0_WIDTH;                                             //[11:11]
        jl_uint32 rx_bm_cp_3:PHG_GEPHY_ANA_RX0_OFFSET_RX_BM_CP_3_WIDTH;                                                   //[12:12]
        jl_uint32 rx_bm_cp_2:PHG_GEPHY_ANA_RX0_OFFSET_RX_BM_CP_2_WIDTH;                                                   //[13:13]
        jl_uint32 rx_bm_cp_1:PHG_GEPHY_ANA_RX0_OFFSET_RX_BM_CP_1_WIDTH;                                                   //[14:14]
        jl_uint32 rx_bm_cp_0:PHG_GEPHY_ANA_RX0_OFFSET_RX_BM_CP_0_WIDTH;                                                   //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_RX0_OFFSET_RSVD0_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_RX0_ENTRY_SIZE];
} PHG_GEPHY_ANA_RX0_t;

#define PHG_GEPHY_ANA_RX1                                                                      ((jl_uint32)0x0024478CU)
#define PHG_GEPHY_ANA_RX1_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_RX1_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_ANA_RX1_OFFSET_RSVD0                                                                             (16)
#define PHG_GEPHY_ANA_RX1_OFFSET_RSVD0_WIDTH                                                                       (16)
#define PHG_GEPHY_ANA_RX1_OFFSET_RX_CSEL_3                                                                          (0)
#define PHG_GEPHY_ANA_RX1_OFFSET_RX_CSEL_3_WIDTH                                                                    (4)
#define PHG_GEPHY_ANA_RX1_OFFSET_RX_CSEL_2                                                                          (4)
#define PHG_GEPHY_ANA_RX1_OFFSET_RX_CSEL_2_WIDTH                                                                    (4)
#define PHG_GEPHY_ANA_RX1_OFFSET_RX_CSEL_1                                                                          (8)
#define PHG_GEPHY_ANA_RX1_OFFSET_RX_CSEL_1_WIDTH                                                                    (4)
#define PHG_GEPHY_ANA_RX1_OFFSET_RX_CSEL_0                                                                         (12)
#define PHG_GEPHY_ANA_RX1_OFFSET_RX_CSEL_0_WIDTH                                                                    (4)
typedef union PHG_GEPHY_ANA_RX1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_csel_3:PHG_GEPHY_ANA_RX1_OFFSET_RX_CSEL_3_WIDTH;                                                     //[ 3: 0]
        jl_uint32 rx_csel_2:PHG_GEPHY_ANA_RX1_OFFSET_RX_CSEL_2_WIDTH;                                                     //[ 7: 4]
        jl_uint32 rx_csel_1:PHG_GEPHY_ANA_RX1_OFFSET_RX_CSEL_1_WIDTH;                                                     //[11: 8]
        jl_uint32 rx_csel_0:PHG_GEPHY_ANA_RX1_OFFSET_RX_CSEL_0_WIDTH;                                                     //[15:12]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_RX1_OFFSET_RSVD0_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_RX1_ENTRY_SIZE];
} PHG_GEPHY_ANA_RX1_t;

#define PHG_GEPHY_ANA_RX2                                                                      ((jl_uint32)0x00244790U)
#define PHG_GEPHY_ANA_RX2_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_RX2_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_ANA_RX2_OFFSET_RSVD0                                                                             (16)
#define PHG_GEPHY_ANA_RX2_OFFSET_RSVD0_WIDTH                                                                       (16)
#define PHG_GEPHY_ANA_RX2_OFFSET_RX_RSEL_1                                                                          (0)
#define PHG_GEPHY_ANA_RX2_OFFSET_RX_RSEL_1_WIDTH                                                                    (8)
#define PHG_GEPHY_ANA_RX2_OFFSET_RX_RSEL_0                                                                          (8)
#define PHG_GEPHY_ANA_RX2_OFFSET_RX_RSEL_0_WIDTH                                                                    (8)
typedef union PHG_GEPHY_ANA_RX2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_rsel_1:PHG_GEPHY_ANA_RX2_OFFSET_RX_RSEL_1_WIDTH;                                                     //[ 7: 0]
        jl_uint32 rx_rsel_0:PHG_GEPHY_ANA_RX2_OFFSET_RX_RSEL_0_WIDTH;                                                     //[15: 8]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_RX2_OFFSET_RSVD0_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_RX2_ENTRY_SIZE];
} PHG_GEPHY_ANA_RX2_t;

#define PHG_GEPHY_ANA_RX3                                                                      ((jl_uint32)0x00244794U)
#define PHG_GEPHY_ANA_RX3_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_RX3_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_ANA_RX3_OFFSET_RSVD0                                                                             (16)
#define PHG_GEPHY_ANA_RX3_OFFSET_RSVD0_WIDTH                                                                       (16)
#define PHG_GEPHY_ANA_RX3_OFFSET_RX_RSEL_3                                                                          (0)
#define PHG_GEPHY_ANA_RX3_OFFSET_RX_RSEL_3_WIDTH                                                                    (8)
#define PHG_GEPHY_ANA_RX3_OFFSET_RX_RSEL_2                                                                          (8)
#define PHG_GEPHY_ANA_RX3_OFFSET_RX_RSEL_2_WIDTH                                                                    (8)
typedef union PHG_GEPHY_ANA_RX3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_rsel_3:PHG_GEPHY_ANA_RX3_OFFSET_RX_RSEL_3_WIDTH;                                                     //[ 7: 0]
        jl_uint32 rx_rsel_2:PHG_GEPHY_ANA_RX3_OFFSET_RX_RSEL_2_WIDTH;                                                     //[15: 8]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_RX3_OFFSET_RSVD0_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_RX3_ENTRY_SIZE];
} PHG_GEPHY_ANA_RX3_t;

#define PHG_GEPHY_ANA_RX4                                                                      ((jl_uint32)0x00244798U)
#define PHG_GEPHY_ANA_RX4_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_RX4_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_ANA_RX4_OFFSET_RSVD0                                                                             (16)
#define PHG_GEPHY_ANA_RX4_OFFSET_RSVD0_WIDTH                                                                       (16)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_VCM_SEL_3                                                                       (0)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_VCM_SEL_3_WIDTH                                                                 (2)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_VCM_SEL_2                                                                       (2)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_VCM_SEL_2_WIDTH                                                                 (2)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_VCM_SEL_1                                                                       (4)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_VCM_SEL_1_WIDTH                                                                 (2)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_VCM_SEL_0                                                                       (6)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_VCM_SEL_0_WIDTH                                                                 (2)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_REG10_SEL_3                                                                     (8)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_REG10_SEL_3_WIDTH                                                               (1)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_REG10_SEL_2                                                                     (9)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_REG10_SEL_2_WIDTH                                                               (1)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_REG10_SEL_1                                                                    (10)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_REG10_SEL_1_WIDTH                                                               (1)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_REG10_SEL_0                                                                    (11)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_REG10_SEL_0_WIDTH                                                               (1)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_LP_EN_3                                                                        (12)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_LP_EN_3_WIDTH                                                                   (1)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_LP_EN_2                                                                        (13)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_LP_EN_2_WIDTH                                                                   (1)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_LP_EN_1                                                                        (14)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_LP_EN_1_WIDTH                                                                   (1)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_LP_EN_0                                                                        (15)
#define PHG_GEPHY_ANA_RX4_OFFSET_RX_LP_EN_0_WIDTH                                                                   (1)
typedef union PHG_GEPHY_ANA_RX4_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_vcm_sel_3:PHG_GEPHY_ANA_RX4_OFFSET_RX_VCM_SEL_3_WIDTH;                                               //[ 1: 0]
        jl_uint32 rx_vcm_sel_2:PHG_GEPHY_ANA_RX4_OFFSET_RX_VCM_SEL_2_WIDTH;                                               //[ 3: 2]
        jl_uint32 rx_vcm_sel_1:PHG_GEPHY_ANA_RX4_OFFSET_RX_VCM_SEL_1_WIDTH;                                               //[ 5: 4]
        jl_uint32 rx_vcm_sel_0:PHG_GEPHY_ANA_RX4_OFFSET_RX_VCM_SEL_0_WIDTH;                                               //[ 7: 6]
        jl_uint32 rx_reg10_sel_3:PHG_GEPHY_ANA_RX4_OFFSET_RX_REG10_SEL_3_WIDTH;                                           //[ 8: 8]
        jl_uint32 rx_reg10_sel_2:PHG_GEPHY_ANA_RX4_OFFSET_RX_REG10_SEL_2_WIDTH;                                           //[ 9: 9]
        jl_uint32 rx_reg10_sel_1:PHG_GEPHY_ANA_RX4_OFFSET_RX_REG10_SEL_1_WIDTH;                                           //[10:10]
        jl_uint32 rx_reg10_sel_0:PHG_GEPHY_ANA_RX4_OFFSET_RX_REG10_SEL_0_WIDTH;                                           //[11:11]
        jl_uint32 rx_lp_en_3:PHG_GEPHY_ANA_RX4_OFFSET_RX_LP_EN_3_WIDTH;                                                   //[12:12]
        jl_uint32 rx_lp_en_2:PHG_GEPHY_ANA_RX4_OFFSET_RX_LP_EN_2_WIDTH;                                                   //[13:13]
        jl_uint32 rx_lp_en_1:PHG_GEPHY_ANA_RX4_OFFSET_RX_LP_EN_1_WIDTH;                                                   //[14:14]
        jl_uint32 rx_lp_en_0:PHG_GEPHY_ANA_RX4_OFFSET_RX_LP_EN_0_WIDTH;                                                   //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_RX4_OFFSET_RSVD0_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_RX4_ENTRY_SIZE];
} PHG_GEPHY_ANA_RX4_t;

#define PHG_GEPHY_ANA_RX5                                                                      ((jl_uint32)0x0024479CU)
#define PHG_GEPHY_ANA_RX5_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_RX5_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_ANA_RX5_OFFSET_RSVD0                                                                             (16)
#define PHG_GEPHY_ANA_RX5_OFFSET_RSVD0_WIDTH                                                                       (16)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_MODE_SEL_3                                                                      (0)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_MODE_SEL_3_WIDTH                                                                (1)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_MODE_SEL_2                                                                      (1)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_MODE_SEL_2_WIDTH                                                                (1)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_MODE_SEL_1                                                                      (2)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_MODE_SEL_1_WIDTH                                                                (1)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_MODE_SEL_0                                                                      (3)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_MODE_SEL_0_WIDTH                                                                (1)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_S2D_RDEG_3                                                                      (4)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_S2D_RDEG_3_WIDTH                                                                (2)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_S2D_RDEG_2                                                                      (6)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_S2D_RDEG_2_WIDTH                                                                (2)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_S2D_RDEG_1                                                                      (8)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_S2D_RDEG_1_WIDTH                                                                (2)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_S2D_RDEG_0                                                                     (10)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_S2D_RDEG_0_WIDTH                                                                (2)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_RTERM_3                                                                        (12)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_RTERM_3_WIDTH                                                                   (1)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_RTERM_2                                                                        (13)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_RTERM_2_WIDTH                                                                   (1)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_RTERM_1                                                                        (14)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_RTERM_1_WIDTH                                                                   (1)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_RTERM_0                                                                        (15)
#define PHG_GEPHY_ANA_RX5_OFFSET_RX_RTERM_0_WIDTH                                                                   (1)
typedef union PHG_GEPHY_ANA_RX5_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_mode_sel_3:PHG_GEPHY_ANA_RX5_OFFSET_RX_MODE_SEL_3_WIDTH;                                             //[ 0: 0]
        jl_uint32 rx_mode_sel_2:PHG_GEPHY_ANA_RX5_OFFSET_RX_MODE_SEL_2_WIDTH;                                             //[ 1: 1]
        jl_uint32 rx_mode_sel_1:PHG_GEPHY_ANA_RX5_OFFSET_RX_MODE_SEL_1_WIDTH;                                             //[ 2: 2]
        jl_uint32 rx_mode_sel_0:PHG_GEPHY_ANA_RX5_OFFSET_RX_MODE_SEL_0_WIDTH;                                             //[ 3: 3]
        jl_uint32 rx_s2d_rdeg_3:PHG_GEPHY_ANA_RX5_OFFSET_RX_S2D_RDEG_3_WIDTH;                                             //[ 5: 4]
        jl_uint32 rx_s2d_rdeg_2:PHG_GEPHY_ANA_RX5_OFFSET_RX_S2D_RDEG_2_WIDTH;                                             //[ 7: 6]
        jl_uint32 rx_s2d_rdeg_1:PHG_GEPHY_ANA_RX5_OFFSET_RX_S2D_RDEG_1_WIDTH;                                             //[ 9: 8]
        jl_uint32 rx_s2d_rdeg_0:PHG_GEPHY_ANA_RX5_OFFSET_RX_S2D_RDEG_0_WIDTH;                                             //[11:10]
        jl_uint32 rx_rterm_3:PHG_GEPHY_ANA_RX5_OFFSET_RX_RTERM_3_WIDTH;                                                   //[12:12]
        jl_uint32 rx_rterm_2:PHG_GEPHY_ANA_RX5_OFFSET_RX_RTERM_2_WIDTH;                                                   //[13:13]
        jl_uint32 rx_rterm_1:PHG_GEPHY_ANA_RX5_OFFSET_RX_RTERM_1_WIDTH;                                                   //[14:14]
        jl_uint32 rx_rterm_0:PHG_GEPHY_ANA_RX5_OFFSET_RX_RTERM_0_WIDTH;                                                   //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_RX5_OFFSET_RSVD0_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_RX5_ENTRY_SIZE];
} PHG_GEPHY_ANA_RX5_t;

#define PHG_GEPHY_ANA_RX6                                                                      ((jl_uint32)0x002447A0U)
#define PHG_GEPHY_ANA_RX6_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_RX6_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_ANA_RX6_OFFSET_RSVD0                                                                             (16)
#define PHG_GEPHY_ANA_RX6_OFFSET_RSVD0_WIDTH                                                                       (16)
#define PHG_GEPHY_ANA_RX6_OFFSET_RSVD_WR_RX6                                                                        (0)
#define PHG_GEPHY_ANA_RX6_OFFSET_RSVD_WR_RX6_WIDTH                                                                  (4)
#define PHG_GEPHY_ANA_RX6_OFFSET_SAR_TEST_CK_EN3                                                                    (4)
#define PHG_GEPHY_ANA_RX6_OFFSET_SAR_TEST_CK_EN3_WIDTH                                                              (1)
#define PHG_GEPHY_ANA_RX6_OFFSET_SAR_TEST_CK_EN2                                                                    (5)
#define PHG_GEPHY_ANA_RX6_OFFSET_SAR_TEST_CK_EN2_WIDTH                                                              (1)
#define PHG_GEPHY_ANA_RX6_OFFSET_SAR_TEST_CK_EN1                                                                    (6)
#define PHG_GEPHY_ANA_RX6_OFFSET_SAR_TEST_CK_EN1_WIDTH                                                              (1)
#define PHG_GEPHY_ANA_RX6_OFFSET_SAR_TEST_CK_EN0                                                                    (7)
#define PHG_GEPHY_ANA_RX6_OFFSET_SAR_TEST_CK_EN0_WIDTH                                                              (1)
#define PHG_GEPHY_ANA_RX6_OFFSET_RX_1PXV_THRGH_EN_3                                                                 (8)
#define PHG_GEPHY_ANA_RX6_OFFSET_RX_1PXV_THRGH_EN_3_WIDTH                                                           (1)
#define PHG_GEPHY_ANA_RX6_OFFSET_RX_1PXV_THRGH_EN_2                                                                 (9)
#define PHG_GEPHY_ANA_RX6_OFFSET_RX_1PXV_THRGH_EN_2_WIDTH                                                           (1)
#define PHG_GEPHY_ANA_RX6_OFFSET_RX_1PXV_THRGH_EN_1                                                                (10)
#define PHG_GEPHY_ANA_RX6_OFFSET_RX_1PXV_THRGH_EN_1_WIDTH                                                           (1)
#define PHG_GEPHY_ANA_RX6_OFFSET_RX_1PXV_THRGH_EN_0                                                                (11)
#define PHG_GEPHY_ANA_RX6_OFFSET_RX_1PXV_THRGH_EN_0_WIDTH                                                           (1)
#define PHG_GEPHY_ANA_RX6_OFFSET_RX_ECHO_EN_3                                                                      (12)
#define PHG_GEPHY_ANA_RX6_OFFSET_RX_ECHO_EN_3_WIDTH                                                                 (1)
#define PHG_GEPHY_ANA_RX6_OFFSET_RX_ECHO_EN_2                                                                      (13)
#define PHG_GEPHY_ANA_RX6_OFFSET_RX_ECHO_EN_2_WIDTH                                                                 (1)
#define PHG_GEPHY_ANA_RX6_OFFSET_RX_ECHO_EN_1                                                                      (14)
#define PHG_GEPHY_ANA_RX6_OFFSET_RX_ECHO_EN_1_WIDTH                                                                 (1)
#define PHG_GEPHY_ANA_RX6_OFFSET_RX_ECHO_EN_0                                                                      (15)
#define PHG_GEPHY_ANA_RX6_OFFSET_RX_ECHO_EN_0_WIDTH                                                                 (1)
typedef union PHG_GEPHY_ANA_RX6_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd_wr_rx6:PHG_GEPHY_ANA_RX6_OFFSET_RSVD_WR_RX6_WIDTH;                                                 //[ 3: 0]
        jl_uint32 sar_test_ck_en3:PHG_GEPHY_ANA_RX6_OFFSET_SAR_TEST_CK_EN3_WIDTH;                                         //[ 4: 4]
        jl_uint32 sar_test_ck_en2:PHG_GEPHY_ANA_RX6_OFFSET_SAR_TEST_CK_EN2_WIDTH;                                         //[ 5: 5]
        jl_uint32 sar_test_ck_en1:PHG_GEPHY_ANA_RX6_OFFSET_SAR_TEST_CK_EN1_WIDTH;                                         //[ 6: 6]
        jl_uint32 sar_test_ck_en0:PHG_GEPHY_ANA_RX6_OFFSET_SAR_TEST_CK_EN0_WIDTH;                                         //[ 7: 7]
        jl_uint32 rx_1pxv_thrgh_en_3:PHG_GEPHY_ANA_RX6_OFFSET_RX_1PXV_THRGH_EN_3_WIDTH;                                   //[ 8: 8]
        jl_uint32 rx_1pxv_thrgh_en_2:PHG_GEPHY_ANA_RX6_OFFSET_RX_1PXV_THRGH_EN_2_WIDTH;                                   //[ 9: 9]
        jl_uint32 rx_1pxv_thrgh_en_1:PHG_GEPHY_ANA_RX6_OFFSET_RX_1PXV_THRGH_EN_1_WIDTH;                                   //[10:10]
        jl_uint32 rx_1pxv_thrgh_en_0:PHG_GEPHY_ANA_RX6_OFFSET_RX_1PXV_THRGH_EN_0_WIDTH;                                   //[11:11]
        jl_uint32 rx_echo_en_3:PHG_GEPHY_ANA_RX6_OFFSET_RX_ECHO_EN_3_WIDTH;                                               //[12:12]
        jl_uint32 rx_echo_en_2:PHG_GEPHY_ANA_RX6_OFFSET_RX_ECHO_EN_2_WIDTH;                                               //[13:13]
        jl_uint32 rx_echo_en_1:PHG_GEPHY_ANA_RX6_OFFSET_RX_ECHO_EN_1_WIDTH;                                               //[14:14]
        jl_uint32 rx_echo_en_0:PHG_GEPHY_ANA_RX6_OFFSET_RX_ECHO_EN_0_WIDTH;                                               //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_RX6_OFFSET_RSVD0_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_RX6_ENTRY_SIZE];
} PHG_GEPHY_ANA_RX6_t;

#define PHG_GEPHY_ANA_SAR0                                                                     ((jl_uint32)0x002447A4U)
#define PHG_GEPHY_ANA_SAR0_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_SAR0_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_ANA_SAR0_OFFSET_RSVD0                                                                            (16)
#define PHG_GEPHY_ANA_SAR0_OFFSET_RSVD0_WIDTH                                                                      (16)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_ISEL_3                                                                        (0)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_ISEL_3_WIDTH                                                                  (2)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_ISEL_2                                                                        (2)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_ISEL_2_WIDTH                                                                  (2)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_ISEL_1                                                                        (4)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_ISEL_1_WIDTH                                                                  (2)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_ISEL_0                                                                        (6)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_ISEL_0_WIDTH                                                                  (2)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_DELAY_3                                                                       (8)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_DELAY_3_WIDTH                                                                 (1)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_DELAY_2                                                                       (9)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_DELAY_2_WIDTH                                                                 (1)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_DELAY_1                                                                      (10)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_DELAY_1_WIDTH                                                                 (1)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_DELAY_0                                                                      (11)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_DELAY_0_WIDTH                                                                 (1)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_AVDD18V_SEL_3                                                                (12)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_AVDD18V_SEL_3_WIDTH                                                           (1)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_AVDD18V_SEL_2                                                                (13)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_AVDD18V_SEL_2_WIDTH                                                           (1)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_AVDD18V_SEL_1                                                                (14)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_AVDD18V_SEL_1_WIDTH                                                           (1)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_AVDD18V_SEL_0                                                                (15)
#define PHG_GEPHY_ANA_SAR0_OFFSET_SAR_AVDD18V_SEL_0_WIDTH                                                           (1)
typedef union PHG_GEPHY_ANA_SAR0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sar_isel_3:PHG_GEPHY_ANA_SAR0_OFFSET_SAR_ISEL_3_WIDTH;                                                  //[ 1: 0]
        jl_uint32 sar_isel_2:PHG_GEPHY_ANA_SAR0_OFFSET_SAR_ISEL_2_WIDTH;                                                  //[ 3: 2]
        jl_uint32 sar_isel_1:PHG_GEPHY_ANA_SAR0_OFFSET_SAR_ISEL_1_WIDTH;                                                  //[ 5: 4]
        jl_uint32 sar_isel_0:PHG_GEPHY_ANA_SAR0_OFFSET_SAR_ISEL_0_WIDTH;                                                  //[ 7: 6]
        jl_uint32 sar_delay_3:PHG_GEPHY_ANA_SAR0_OFFSET_SAR_DELAY_3_WIDTH;                                                //[ 8: 8]
        jl_uint32 sar_delay_2:PHG_GEPHY_ANA_SAR0_OFFSET_SAR_DELAY_2_WIDTH;                                                //[ 9: 9]
        jl_uint32 sar_delay_1:PHG_GEPHY_ANA_SAR0_OFFSET_SAR_DELAY_1_WIDTH;                                                //[10:10]
        jl_uint32 sar_delay_0:PHG_GEPHY_ANA_SAR0_OFFSET_SAR_DELAY_0_WIDTH;                                                //[11:11]
        jl_uint32 sar_avdd18v_sel_3:PHG_GEPHY_ANA_SAR0_OFFSET_SAR_AVDD18V_SEL_3_WIDTH;                                    //[12:12]
        jl_uint32 sar_avdd18v_sel_2:PHG_GEPHY_ANA_SAR0_OFFSET_SAR_AVDD18V_SEL_2_WIDTH;                                    //[13:13]
        jl_uint32 sar_avdd18v_sel_1:PHG_GEPHY_ANA_SAR0_OFFSET_SAR_AVDD18V_SEL_1_WIDTH;                                    //[14:14]
        jl_uint32 sar_avdd18v_sel_0:PHG_GEPHY_ANA_SAR0_OFFSET_SAR_AVDD18V_SEL_0_WIDTH;                                    //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_SAR0_OFFSET_RSVD0_WIDTH;                                                            //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_SAR0_ENTRY_SIZE];
} PHG_GEPHY_ANA_SAR0_t;

#define PHG_GEPHY_ANA_SAR1                                                                     ((jl_uint32)0x002447A8U)
#define PHG_GEPHY_ANA_SAR1_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_SAR1_ENTRY_SIZE                                                                               (1)
#define PHG_GEPHY_ANA_SAR1_OFFSET_RSVD0                                                                            (16)
#define PHG_GEPHY_ANA_SAR1_OFFSET_RSVD0_WIDTH                                                                      (16)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_CKSEL_MODE_3                                                                  (0)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_CKSEL_MODE_3_WIDTH                                                            (1)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_CKSEL_MODE_2                                                                  (1)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_CKSEL_MODE_2_WIDTH                                                            (1)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_CKSEL_MODE_1                                                                  (2)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_CKSEL_MODE_1_WIDTH                                                            (1)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_CKSEL_MODE_0                                                                  (3)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_CKSEL_MODE_0_WIDTH                                                            (1)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_RSTN_3                                                                        (4)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_RSTN_3_WIDTH                                                                  (1)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_RSTN_2                                                                        (5)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_RSTN_2_WIDTH                                                                  (1)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_RSTN_1                                                                        (6)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_RSTN_1_WIDTH                                                                  (1)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_RSTN_0                                                                        (7)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_RSTN_0_WIDTH                                                                  (1)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REVERSE_3                                                                     (8)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REVERSE_3_WIDTH                                                               (1)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REVERSE_2                                                                     (9)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REVERSE_2_WIDTH                                                               (1)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REVERSE_1                                                                    (10)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REVERSE_1_WIDTH                                                               (1)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REVERSE_0                                                                    (11)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REVERSE_0_WIDTH                                                               (1)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REG_1V_EN_3                                                                  (12)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REG_1V_EN_3_WIDTH                                                             (1)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REG_1V_EN_2                                                                  (13)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REG_1V_EN_2_WIDTH                                                             (1)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REG_1V_EN_1                                                                  (14)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REG_1V_EN_1_WIDTH                                                             (1)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REG_1V_EN_0                                                                  (15)
#define PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REG_1V_EN_0_WIDTH                                                             (1)
typedef union PHG_GEPHY_ANA_SAR1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sar_cksel_mode_3:PHG_GEPHY_ANA_SAR1_OFFSET_SAR_CKSEL_MODE_3_WIDTH;                                      //[ 0: 0]
        jl_uint32 sar_cksel_mode_2:PHG_GEPHY_ANA_SAR1_OFFSET_SAR_CKSEL_MODE_2_WIDTH;                                      //[ 1: 1]
        jl_uint32 sar_cksel_mode_1:PHG_GEPHY_ANA_SAR1_OFFSET_SAR_CKSEL_MODE_1_WIDTH;                                      //[ 2: 2]
        jl_uint32 sar_cksel_mode_0:PHG_GEPHY_ANA_SAR1_OFFSET_SAR_CKSEL_MODE_0_WIDTH;                                      //[ 3: 3]
        jl_uint32 sar_rstn_3:PHG_GEPHY_ANA_SAR1_OFFSET_SAR_RSTN_3_WIDTH;                                                  //[ 4: 4]
        jl_uint32 sar_rstn_2:PHG_GEPHY_ANA_SAR1_OFFSET_SAR_RSTN_2_WIDTH;                                                  //[ 5: 5]
        jl_uint32 sar_rstn_1:PHG_GEPHY_ANA_SAR1_OFFSET_SAR_RSTN_1_WIDTH;                                                  //[ 6: 6]
        jl_uint32 sar_rstn_0:PHG_GEPHY_ANA_SAR1_OFFSET_SAR_RSTN_0_WIDTH;                                                  //[ 7: 7]
        jl_uint32 sar_reverse_3:PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REVERSE_3_WIDTH;                                            //[ 8: 8]
        jl_uint32 sar_reverse_2:PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REVERSE_2_WIDTH;                                            //[ 9: 9]
        jl_uint32 sar_reverse_1:PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REVERSE_1_WIDTH;                                            //[10:10]
        jl_uint32 sar_reverse_0:PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REVERSE_0_WIDTH;                                            //[11:11]
        jl_uint32 sar_reg_1v_en_3:PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REG_1V_EN_3_WIDTH;                                        //[12:12]
        jl_uint32 sar_reg_1v_en_2:PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REG_1V_EN_2_WIDTH;                                        //[13:13]
        jl_uint32 sar_reg_1v_en_1:PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REG_1V_EN_1_WIDTH;                                        //[14:14]
        jl_uint32 sar_reg_1v_en_0:PHG_GEPHY_ANA_SAR1_OFFSET_SAR_REG_1V_EN_0_WIDTH;                                        //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_SAR1_OFFSET_RSVD0_WIDTH;                                                            //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_SAR1_ENTRY_SIZE];
} PHG_GEPHY_ANA_SAR1_t;

#define PHG_GEPHY_ANA_TX0                                                                      ((jl_uint32)0x002447ACU)
#define PHG_GEPHY_ANA_TX0_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_TX0_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_ANA_TX0_OFFSET_RSVD0                                                                             (16)
#define PHG_GEPHY_ANA_TX0_OFFSET_RSVD0_WIDTH                                                                       (16)
#define PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_MODE_3                                                                      (0)
#define PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_MODE_3_WIDTH                                                                (2)
#define PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_MODE_2                                                                      (2)
#define PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_MODE_2_WIDTH                                                                (2)
#define PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_MODE_1                                                                      (4)
#define PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_MODE_1_WIDTH                                                                (2)
#define PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_MODE_0                                                                      (6)
#define PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_MODE_0_WIDTH                                                                (2)
#define PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_BM_3                                                                        (8)
#define PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_BM_3_WIDTH                                                                  (2)
#define PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_BM_2                                                                       (10)
#define PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_BM_2_WIDTH                                                                  (2)
#define PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_BM_1                                                                       (12)
#define PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_BM_1_WIDTH                                                                  (2)
#define PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_BM_0                                                                       (14)
#define PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_BM_0_WIDTH                                                                  (2)
typedef union PHG_GEPHY_ANA_TX0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tx_amp_mode_3:PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_MODE_3_WIDTH;                                             //[ 1: 0]
        jl_uint32 tx_amp_mode_2:PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_MODE_2_WIDTH;                                             //[ 3: 2]
        jl_uint32 tx_amp_mode_1:PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_MODE_1_WIDTH;                                             //[ 5: 4]
        jl_uint32 tx_amp_mode_0:PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_MODE_0_WIDTH;                                             //[ 7: 6]
        jl_uint32 tx_amp_bm_3:PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_BM_3_WIDTH;                                                 //[ 9: 8]
        jl_uint32 tx_amp_bm_2:PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_BM_2_WIDTH;                                                 //[11:10]
        jl_uint32 tx_amp_bm_1:PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_BM_1_WIDTH;                                                 //[13:12]
        jl_uint32 tx_amp_bm_0:PHG_GEPHY_ANA_TX0_OFFSET_TX_AMP_BM_0_WIDTH;                                                 //[15:14]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_TX0_OFFSET_RSVD0_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_TX0_ENTRY_SIZE];
} PHG_GEPHY_ANA_TX0_t;

#define PHG_GEPHY_ANA_TX1                                                                      ((jl_uint32)0x002447B0U)
#define PHG_GEPHY_ANA_TX1_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_TX1_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_ANA_TX1_OFFSET_RSVD0                                                                             (16)
#define PHG_GEPHY_ANA_TX1_OFFSET_RSVD0_WIDTH                                                                       (16)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_RINSHORT_3                                                                  (0)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_RINSHORT_3_WIDTH                                                            (1)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_RINSHORT_2                                                                  (1)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_RINSHORT_2_WIDTH                                                            (1)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_RINSHORT_1                                                                  (2)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_RINSHORT_1_WIDTH                                                            (1)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_RINSHORT_0                                                                  (3)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_RINSHORT_0_WIDTH                                                            (1)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CCENB_3                                                                     (4)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CCENB_3_WIDTH                                                               (1)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CCENB_2                                                                     (5)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CCENB_2_WIDTH                                                               (1)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CCENB_1                                                                     (6)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CCENB_1_WIDTH                                                               (1)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CCENB_0                                                                     (7)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CCENB_0_WIDTH                                                               (1)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CFEN_3                                                                      (8)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CFEN_3_WIDTH                                                                (2)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CFEN_2                                                                     (10)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CFEN_2_WIDTH                                                                (2)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CFEN_1                                                                     (12)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CFEN_1_WIDTH                                                                (2)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CFEN_0                                                                     (14)
#define PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CFEN_0_WIDTH                                                                (2)
typedef union PHG_GEPHY_ANA_TX1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tx_amp_rinshort_3:PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_RINSHORT_3_WIDTH;                                     //[ 0: 0]
        jl_uint32 tx_amp_rinshort_2:PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_RINSHORT_2_WIDTH;                                     //[ 1: 1]
        jl_uint32 tx_amp_rinshort_1:PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_RINSHORT_1_WIDTH;                                     //[ 2: 2]
        jl_uint32 tx_amp_rinshort_0:PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_RINSHORT_0_WIDTH;                                     //[ 3: 3]
        jl_uint32 tx_amp_ccenb_3:PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CCENB_3_WIDTH;                                           //[ 4: 4]
        jl_uint32 tx_amp_ccenb_2:PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CCENB_2_WIDTH;                                           //[ 5: 5]
        jl_uint32 tx_amp_ccenb_1:PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CCENB_1_WIDTH;                                           //[ 6: 6]
        jl_uint32 tx_amp_ccenb_0:PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CCENB_0_WIDTH;                                           //[ 7: 7]
        jl_uint32 tx_amp_cfen_3:PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CFEN_3_WIDTH;                                             //[ 9: 8]
        jl_uint32 tx_amp_cfen_2:PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CFEN_2_WIDTH;                                             //[11:10]
        jl_uint32 tx_amp_cfen_1:PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CFEN_1_WIDTH;                                             //[13:12]
        jl_uint32 tx_amp_cfen_0:PHG_GEPHY_ANA_TX1_OFFSET_TX_AMP_CFEN_0_WIDTH;                                             //[15:14]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_TX1_OFFSET_RSVD0_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_TX1_ENTRY_SIZE];
} PHG_GEPHY_ANA_TX1_t;

#define PHG_GEPHY_ANA_TX2                                                                      ((jl_uint32)0x002447B4U)
#define PHG_GEPHY_ANA_TX2_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_TX2_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_ANA_TX2_OFFSET_RSVD0                                                                             (16)
#define PHG_GEPHY_ANA_TX2_OFFSET_RSVD0_WIDTH                                                                       (16)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_IBOOST_3                                                                    (0)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_IBOOST_3_WIDTH                                                              (1)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_IBOOST_2                                                                    (1)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_IBOOST_2_WIDTH                                                              (1)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_IBOOST_1                                                                    (2)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_IBOOST_1_WIDTH                                                              (1)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_IBOOST_0                                                                    (3)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_IBOOST_0_WIDTH                                                              (1)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_ECHO_EN_3                                                                   (4)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_ECHO_EN_3_WIDTH                                                             (1)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_ECHO_EN_2                                                                   (5)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_ECHO_EN_2_WIDTH                                                             (1)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_ECHO_EN_1                                                                   (6)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_ECHO_EN_1_WIDTH                                                             (1)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_ECHO_EN_0                                                                   (7)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_ECHO_EN_0_WIDTH                                                             (1)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_CMFB_EN_3                                                                   (8)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_CMFB_EN_3_WIDTH                                                             (2)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_CMFB_EN_2                                                                  (10)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_CMFB_EN_2_WIDTH                                                             (2)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_CMFB_EN_1                                                                  (12)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_CMFB_EN_1_WIDTH                                                             (2)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_CMFB_EN_0                                                                  (14)
#define PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_CMFB_EN_0_WIDTH                                                             (2)
typedef union PHG_GEPHY_ANA_TX2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tx_amp_iboost_3:PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_IBOOST_3_WIDTH;                                         //[ 0: 0]
        jl_uint32 tx_amp_iboost_2:PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_IBOOST_2_WIDTH;                                         //[ 1: 1]
        jl_uint32 tx_amp_iboost_1:PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_IBOOST_1_WIDTH;                                         //[ 2: 2]
        jl_uint32 tx_amp_iboost_0:PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_IBOOST_0_WIDTH;                                         //[ 3: 3]
        jl_uint32 tx_amp_echo_en_3:PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_ECHO_EN_3_WIDTH;                                       //[ 4: 4]
        jl_uint32 tx_amp_echo_en_2:PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_ECHO_EN_2_WIDTH;                                       //[ 5: 5]
        jl_uint32 tx_amp_echo_en_1:PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_ECHO_EN_1_WIDTH;                                       //[ 6: 6]
        jl_uint32 tx_amp_echo_en_0:PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_ECHO_EN_0_WIDTH;                                       //[ 7: 7]
        jl_uint32 tx_amp_cmfb_en_3:PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_CMFB_EN_3_WIDTH;                                       //[ 9: 8]
        jl_uint32 tx_amp_cmfb_en_2:PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_CMFB_EN_2_WIDTH;                                       //[11:10]
        jl_uint32 tx_amp_cmfb_en_1:PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_CMFB_EN_1_WIDTH;                                       //[13:12]
        jl_uint32 tx_amp_cmfb_en_0:PHG_GEPHY_ANA_TX2_OFFSET_TX_AMP_CMFB_EN_0_WIDTH;                                       //[15:14]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_TX2_OFFSET_RSVD0_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_TX2_ENTRY_SIZE];
} PHG_GEPHY_ANA_TX2_t;

#define PHG_GEPHY_ANA_TX3                                                                      ((jl_uint32)0x002447B8U)
#define PHG_GEPHY_ANA_TX3_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_TX3_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_ANA_TX3_OFFSET_RSVD0                                                                             (16)
#define PHG_GEPHY_ANA_TX3_OFFSET_RSVD0_WIDTH                                                                       (16)
#define PHG_GEPHY_ANA_TX3_OFFSET_TX_DAC_BM_1                                                                        (0)
#define PHG_GEPHY_ANA_TX3_OFFSET_TX_DAC_BM_1_WIDTH                                                                  (6)
#define PHG_GEPHY_ANA_TX3_OFFSET_TX_DAC_BM_0                                                                        (6)
#define PHG_GEPHY_ANA_TX3_OFFSET_TX_DAC_BM_0_WIDTH                                                                  (6)
#define PHG_GEPHY_ANA_TX3_OFFSET_TX_AMP_CMBOOST_3                                                                  (12)
#define PHG_GEPHY_ANA_TX3_OFFSET_TX_AMP_CMBOOST_3_WIDTH                                                             (1)
#define PHG_GEPHY_ANA_TX3_OFFSET_TX_AMP_CMBOOST_2                                                                  (13)
#define PHG_GEPHY_ANA_TX3_OFFSET_TX_AMP_CMBOOST_2_WIDTH                                                             (1)
#define PHG_GEPHY_ANA_TX3_OFFSET_TX_AMP_CMBOOST_1                                                                  (14)
#define PHG_GEPHY_ANA_TX3_OFFSET_TX_AMP_CMBOOST_1_WIDTH                                                             (1)
#define PHG_GEPHY_ANA_TX3_OFFSET_TX_AMP_CMBOOST_0                                                                  (15)
#define PHG_GEPHY_ANA_TX3_OFFSET_TX_AMP_CMBOOST_0_WIDTH                                                             (1)
typedef union PHG_GEPHY_ANA_TX3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tx_dac_bm_1:PHG_GEPHY_ANA_TX3_OFFSET_TX_DAC_BM_1_WIDTH;                                                 //[ 5: 0]
        jl_uint32 tx_dac_bm_0:PHG_GEPHY_ANA_TX3_OFFSET_TX_DAC_BM_0_WIDTH;                                                 //[11: 6]
        jl_uint32 tx_amp_cmboost_3:PHG_GEPHY_ANA_TX3_OFFSET_TX_AMP_CMBOOST_3_WIDTH;                                       //[12:12]
        jl_uint32 tx_amp_cmboost_2:PHG_GEPHY_ANA_TX3_OFFSET_TX_AMP_CMBOOST_2_WIDTH;                                       //[13:13]
        jl_uint32 tx_amp_cmboost_1:PHG_GEPHY_ANA_TX3_OFFSET_TX_AMP_CMBOOST_1_WIDTH;                                       //[14:14]
        jl_uint32 tx_amp_cmboost_0:PHG_GEPHY_ANA_TX3_OFFSET_TX_AMP_CMBOOST_0_WIDTH;                                       //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_TX3_OFFSET_RSVD0_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_TX3_ENTRY_SIZE];
} PHG_GEPHY_ANA_TX3_t;

#define PHG_GEPHY_ANA_TX4                                                                      ((jl_uint32)0x002447BCU)
#define PHG_GEPHY_ANA_TX4_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_TX4_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_ANA_TX4_OFFSET_RSVD0                                                                             (16)
#define PHG_GEPHY_ANA_TX4_OFFSET_RSVD0_WIDTH                                                                       (16)
#define PHG_GEPHY_ANA_TX4_OFFSET_TX_DAC_SRN_3                                                                       (0)
#define PHG_GEPHY_ANA_TX4_OFFSET_TX_DAC_SRN_3_WIDTH                                                                 (1)
#define PHG_GEPHY_ANA_TX4_OFFSET_TX_DAC_SRN_2                                                                       (1)
#define PHG_GEPHY_ANA_TX4_OFFSET_TX_DAC_SRN_2_WIDTH                                                                 (1)
#define PHG_GEPHY_ANA_TX4_OFFSET_TX_DAC_SRN_1                                                                       (2)
#define PHG_GEPHY_ANA_TX4_OFFSET_TX_DAC_SRN_1_WIDTH                                                                 (1)
#define PHG_GEPHY_ANA_TX4_OFFSET_TX_DAC_SRN_0                                                                       (3)
#define PHG_GEPHY_ANA_TX4_OFFSET_TX_DAC_SRN_0_WIDTH                                                                 (1)
#define PHG_GEPHY_ANA_TX4_OFFSET_TX_DAC_BM_3                                                                        (4)
#define PHG_GEPHY_ANA_TX4_OFFSET_TX_DAC_BM_3_WIDTH                                                                  (6)
#define PHG_GEPHY_ANA_TX4_OFFSET_TX_DAC_BM_2                                                                       (10)
#define PHG_GEPHY_ANA_TX4_OFFSET_TX_DAC_BM_2_WIDTH                                                                  (6)
typedef union PHG_GEPHY_ANA_TX4_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tx_dac_srn_3:PHG_GEPHY_ANA_TX4_OFFSET_TX_DAC_SRN_3_WIDTH;                                               //[ 0: 0]
        jl_uint32 tx_dac_srn_2:PHG_GEPHY_ANA_TX4_OFFSET_TX_DAC_SRN_2_WIDTH;                                               //[ 1: 1]
        jl_uint32 tx_dac_srn_1:PHG_GEPHY_ANA_TX4_OFFSET_TX_DAC_SRN_1_WIDTH;                                               //[ 2: 2]
        jl_uint32 tx_dac_srn_0:PHG_GEPHY_ANA_TX4_OFFSET_TX_DAC_SRN_0_WIDTH;                                               //[ 3: 3]
        jl_uint32 tx_dac_bm_3:PHG_GEPHY_ANA_TX4_OFFSET_TX_DAC_BM_3_WIDTH;                                                 //[ 9: 4]
        jl_uint32 tx_dac_bm_2:PHG_GEPHY_ANA_TX4_OFFSET_TX_DAC_BM_2_WIDTH;                                                 //[15:10]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_TX4_OFFSET_RSVD0_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_TX4_ENTRY_SIZE];
} PHG_GEPHY_ANA_TX4_t;

#define PHG_GEPHY_ANA_TX5                                                                      ((jl_uint32)0x002447C0U)
#define PHG_GEPHY_ANA_TX5_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_TX5_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_ANA_TX5_OFFSET_RSVD0                                                                             (16)
#define PHG_GEPHY_ANA_TX5_OFFSET_RSVD0_WIDTH                                                                       (16)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_ENB_1P8V_LDO_SLAVE_3                                                        (0)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_ENB_1P8V_LDO_SLAVE_3_WIDTH                                                  (1)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_ENB_1P8V_LDO_SLAVE_2                                                        (1)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_ENB_1P8V_LDO_SLAVE_2_WIDTH                                                  (1)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_ENB_1P8V_LDO_SLAVE_1                                                        (2)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_ENB_1P8V_LDO_SLAVE_1_WIDTH                                                  (1)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_ENB_1P8V_LDO_SLAVE_0                                                        (3)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_ENB_1P8V_LDO_SLAVE_0_WIDTH                                                  (1)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_SRSLOW_3                                                                    (4)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_SRSLOW_3_WIDTH                                                              (1)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_SRSLOW_2                                                                    (5)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_SRSLOW_2_WIDTH                                                              (1)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_SRSLOW_1                                                                    (6)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_SRSLOW_1_WIDTH                                                              (1)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_SRSLOW_0                                                                    (7)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_SRSLOW_0_WIDTH                                                              (1)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_VDSEL_3                                                                     (8)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_VDSEL_3_WIDTH                                                               (1)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_VDSEL_2                                                                     (9)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_VDSEL_2_WIDTH                                                               (1)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_VDSEL_1                                                                    (10)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_VDSEL_1_WIDTH                                                               (1)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_VDSEL_0                                                                    (11)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_VDSEL_0_WIDTH                                                               (1)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_MODE_3                                                                     (12)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_MODE_3_WIDTH                                                                (1)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_MODE_2                                                                     (13)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_MODE_2_WIDTH                                                                (1)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_MODE_1                                                                     (14)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_MODE_1_WIDTH                                                                (1)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_MODE_0                                                                     (15)
#define PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_MODE_0_WIDTH                                                                (1)
typedef union PHG_GEPHY_ANA_TX5_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tx_dac_enb_1p8v_ldo_slave_3:PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_ENB_1P8V_LDO_SLAVE_3_WIDTH;                 //[ 0: 0]
        jl_uint32 tx_dac_enb_1p8v_ldo_slave_2:PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_ENB_1P8V_LDO_SLAVE_2_WIDTH;                 //[ 1: 1]
        jl_uint32 tx_dac_enb_1p8v_ldo_slave_1:PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_ENB_1P8V_LDO_SLAVE_1_WIDTH;                 //[ 2: 2]
        jl_uint32 tx_dac_enb_1p8v_ldo_slave_0:PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_ENB_1P8V_LDO_SLAVE_0_WIDTH;                 //[ 3: 3]
        jl_uint32 tx_dac_srslow_3:PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_SRSLOW_3_WIDTH;                                         //[ 4: 4]
        jl_uint32 tx_dac_srslow_2:PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_SRSLOW_2_WIDTH;                                         //[ 5: 5]
        jl_uint32 tx_dac_srslow_1:PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_SRSLOW_1_WIDTH;                                         //[ 6: 6]
        jl_uint32 tx_dac_srslow_0:PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_SRSLOW_0_WIDTH;                                         //[ 7: 7]
        jl_uint32 tx_dac_vdsel_3:PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_VDSEL_3_WIDTH;                                           //[ 8: 8]
        jl_uint32 tx_dac_vdsel_2:PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_VDSEL_2_WIDTH;                                           //[ 9: 9]
        jl_uint32 tx_dac_vdsel_1:PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_VDSEL_1_WIDTH;                                           //[10:10]
        jl_uint32 tx_dac_vdsel_0:PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_VDSEL_0_WIDTH;                                           //[11:11]
        jl_uint32 tx_dac_mode_3:PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_MODE_3_WIDTH;                                             //[12:12]
        jl_uint32 tx_dac_mode_2:PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_MODE_2_WIDTH;                                             //[13:13]
        jl_uint32 tx_dac_mode_1:PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_MODE_1_WIDTH;                                             //[14:14]
        jl_uint32 tx_dac_mode_0:PHG_GEPHY_ANA_TX5_OFFSET_TX_DAC_MODE_0_WIDTH;                                             //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_TX5_OFFSET_RSVD0_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_TX5_ENTRY_SIZE];
} PHG_GEPHY_ANA_TX5_t;

#define PHG_GEPHY_ANA_TX6                                                                      ((jl_uint32)0x002447C4U)
#define PHG_GEPHY_ANA_TX6_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_TX6_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_ANA_TX6_OFFSET_RSVD0                                                                             (16)
#define PHG_GEPHY_ANA_TX6_OFFSET_RSVD0_WIDTH                                                                       (16)
#define PHG_GEPHY_ANA_TX6_OFFSET_RSVD_WR_TX6                                                                        (0)
#define PHG_GEPHY_ANA_TX6_OFFSET_RSVD_WR_TX6_WIDTH                                                                  (4)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG_1PXV_THRGH_MODE_3                                                       (4)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG_1PXV_THRGH_MODE_3_WIDTH                                                 (1)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG_1PXV_THRGH_MODE_2                                                       (5)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG_1PXV_THRGH_MODE_2_WIDTH                                                 (1)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG_1PXV_THRGH_MODE_1                                                       (6)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG_1PXV_THRGH_MODE_1_WIDTH                                                 (1)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG_1PXV_THRGH_MODE_0                                                       (7)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG_1PXV_THRGH_MODE_0_WIDTH                                                 (1)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG18VSEL_3                                                                 (8)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG18VSEL_3_WIDTH                                                           (1)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG18VSEL_2                                                                 (9)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG18VSEL_2_WIDTH                                                           (1)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG18VSEL_1                                                                (10)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG18VSEL_1_WIDTH                                                           (1)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG18VSEL_0                                                                (11)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG18VSEL_0_WIDTH                                                           (1)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_ISEL_3                                                                     (12)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_ISEL_3_WIDTH                                                                (1)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_ISEL_2                                                                     (13)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_ISEL_2_WIDTH                                                                (1)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_ISEL_1                                                                     (14)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_ISEL_1_WIDTH                                                                (1)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_ISEL_0                                                                     (15)
#define PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_ISEL_0_WIDTH                                                                (1)
typedef union PHG_GEPHY_ANA_TX6_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd_wr_tx6:PHG_GEPHY_ANA_TX6_OFFSET_RSVD_WR_TX6_WIDTH;                                                 //[ 3: 0]
        jl_uint32 tx_dac_reg_1pxv_thrgh_mode_3:PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG_1PXV_THRGH_MODE_3_WIDTH;               //[ 4: 4]
        jl_uint32 tx_dac_reg_1pxv_thrgh_mode_2:PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG_1PXV_THRGH_MODE_2_WIDTH;               //[ 5: 5]
        jl_uint32 tx_dac_reg_1pxv_thrgh_mode_1:PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG_1PXV_THRGH_MODE_1_WIDTH;               //[ 6: 6]
        jl_uint32 tx_dac_reg_1pxv_thrgh_mode_0:PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG_1PXV_THRGH_MODE_0_WIDTH;               //[ 7: 7]
        jl_uint32 tx_dac_reg18vsel_3:PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG18VSEL_3_WIDTH;                                   //[ 8: 8]
        jl_uint32 tx_dac_reg18vsel_2:PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG18VSEL_2_WIDTH;                                   //[ 9: 9]
        jl_uint32 tx_dac_reg18vsel_1:PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG18VSEL_1_WIDTH;                                   //[10:10]
        jl_uint32 tx_dac_reg18vsel_0:PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_REG18VSEL_0_WIDTH;                                   //[11:11]
        jl_uint32 tx_dac_isel_3:PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_ISEL_3_WIDTH;                                             //[12:12]
        jl_uint32 tx_dac_isel_2:PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_ISEL_2_WIDTH;                                             //[13:13]
        jl_uint32 tx_dac_isel_1:PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_ISEL_1_WIDTH;                                             //[14:14]
        jl_uint32 tx_dac_isel_0:PHG_GEPHY_ANA_TX6_OFFSET_TX_DAC_ISEL_0_WIDTH;                                             //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_TX6_OFFSET_RSVD0_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_TX6_ENTRY_SIZE];
} PHG_GEPHY_ANA_TX6_t;

#define PHG_GEPHY_ANA_TX7                                                                      ((jl_uint32)0x002447C8U)
#define PHG_GEPHY_ANA_TX7_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_TX7_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_ANA_TX7_OFFSET_RSVD0                                                                             (16)
#define PHG_GEPHY_ANA_TX7_OFFSET_RSVD0_WIDTH                                                                       (16)
#define PHG_GEPHY_ANA_TX7_OFFSET_TX_DAC_REGBM_3                                                                     (0)
#define PHG_GEPHY_ANA_TX7_OFFSET_TX_DAC_REGBM_3_WIDTH                                                               (4)
#define PHG_GEPHY_ANA_TX7_OFFSET_TX_DAC_REGBM_2                                                                     (4)
#define PHG_GEPHY_ANA_TX7_OFFSET_TX_DAC_REGBM_2_WIDTH                                                               (4)
#define PHG_GEPHY_ANA_TX7_OFFSET_TX_DAC_REGBM_1                                                                     (8)
#define PHG_GEPHY_ANA_TX7_OFFSET_TX_DAC_REGBM_1_WIDTH                                                               (4)
#define PHG_GEPHY_ANA_TX7_OFFSET_TX_DAC_REGBM_0                                                                    (12)
#define PHG_GEPHY_ANA_TX7_OFFSET_TX_DAC_REGBM_0_WIDTH                                                               (4)
typedef union PHG_GEPHY_ANA_TX7_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tx_dac_regbm_3:PHG_GEPHY_ANA_TX7_OFFSET_TX_DAC_REGBM_3_WIDTH;                                           //[ 3: 0]
        jl_uint32 tx_dac_regbm_2:PHG_GEPHY_ANA_TX7_OFFSET_TX_DAC_REGBM_2_WIDTH;                                           //[ 7: 4]
        jl_uint32 tx_dac_regbm_1:PHG_GEPHY_ANA_TX7_OFFSET_TX_DAC_REGBM_1_WIDTH;                                           //[11: 8]
        jl_uint32 tx_dac_regbm_0:PHG_GEPHY_ANA_TX7_OFFSET_TX_DAC_REGBM_0_WIDTH;                                           //[15:12]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_TX7_OFFSET_RSVD0_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_TX7_ENTRY_SIZE];
} PHG_GEPHY_ANA_TX7_t;

#define PHG_GEPHY_ANA_TX8                                                                      ((jl_uint32)0x002447CCU)
#define PHG_GEPHY_ANA_TX8_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_TX8_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_ANA_TX8_OFFSET_RSVD0                                                                             (16)
#define PHG_GEPHY_ANA_TX8_OFFSET_RSVD0_WIDTH                                                                       (16)
#define PHG_GEPHY_ANA_TX8_OFFSET_RSVD_WR_TX8                                                                        (0)
#define PHG_GEPHY_ANA_TX8_OFFSET_RSVD_WR_TX8_WIDTH                                                                  (6)
#define PHG_GEPHY_ANA_TX8_OFFSET_RSVD_RD_TX8                                                                        (6)
#define PHG_GEPHY_ANA_TX8_OFFSET_RSVD_RD_TX8_WIDTH                                                                  (6)
#define PHG_GEPHY_ANA_TX8_OFFSET_TX_DAC_CMFB_EN_3                                                                  (12)
#define PHG_GEPHY_ANA_TX8_OFFSET_TX_DAC_CMFB_EN_3_WIDTH                                                             (1)
#define PHG_GEPHY_ANA_TX8_OFFSET_TX_DAC_CMFB_EN_2                                                                  (13)
#define PHG_GEPHY_ANA_TX8_OFFSET_TX_DAC_CMFB_EN_2_WIDTH                                                             (1)
#define PHG_GEPHY_ANA_TX8_OFFSET_TX_DAC_CMFB_EN_1                                                                  (14)
#define PHG_GEPHY_ANA_TX8_OFFSET_TX_DAC_CMFB_EN_1_WIDTH                                                             (1)
#define PHG_GEPHY_ANA_TX8_OFFSET_TX_DAC_CMFB_EN_0                                                                  (15)
#define PHG_GEPHY_ANA_TX8_OFFSET_TX_DAC_CMFB_EN_0_WIDTH                                                             (1)
typedef union PHG_GEPHY_ANA_TX8_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd_wr_tx8:PHG_GEPHY_ANA_TX8_OFFSET_RSVD_WR_TX8_WIDTH;                                                 //[ 5: 0]
        jl_uint32 rsvd_rd_tx8:PHG_GEPHY_ANA_TX8_OFFSET_RSVD_RD_TX8_WIDTH;                                                 //[11: 6]
        jl_uint32 tx_dac_cmfb_en_3:PHG_GEPHY_ANA_TX8_OFFSET_TX_DAC_CMFB_EN_3_WIDTH;                                       //[12:12]
        jl_uint32 tx_dac_cmfb_en_2:PHG_GEPHY_ANA_TX8_OFFSET_TX_DAC_CMFB_EN_2_WIDTH;                                       //[13:13]
        jl_uint32 tx_dac_cmfb_en_1:PHG_GEPHY_ANA_TX8_OFFSET_TX_DAC_CMFB_EN_1_WIDTH;                                       //[14:14]
        jl_uint32 tx_dac_cmfb_en_0:PHG_GEPHY_ANA_TX8_OFFSET_TX_DAC_CMFB_EN_0_WIDTH;                                       //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_TX8_OFFSET_RSVD0_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_TX8_ENTRY_SIZE];
} PHG_GEPHY_ANA_TX8_t;

#define PHG_GEPHY_ANA_CKTREE0                                                                  ((jl_uint32)0x002447D0U)
#define PHG_GEPHY_ANA_CKTREE0_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_CKTREE0_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_ANA_CKTREE0_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_ANA_CKTREE0_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_ANA_CKTREE0_OFFSET_RSVD_WR_CKTREE0                                                                (0)
#define PHG_GEPHY_ANA_CKTREE0_OFFSET_RSVD_WR_CKTREE0_WIDTH                                                          (9)
#define PHG_GEPHY_ANA_CKTREE0_OFFSET_PU_TX_CKTREE                                                                   (9)
#define PHG_GEPHY_ANA_CKTREE0_OFFSET_PU_TX_CKTREE_WIDTH                                                             (1)
#define PHG_GEPHY_ANA_CKTREE0_OFFSET_PI_RSEL                                                                       (10)
#define PHG_GEPHY_ANA_CKTREE0_OFFSET_PI_RSEL_WIDTH                                                                  (2)
#define PHG_GEPHY_ANA_CKTREE0_OFFSET_PI_PHY_EN_1VR_SL                                                              (12)
#define PHG_GEPHY_ANA_CKTREE0_OFFSET_PI_PHY_EN_1VR_SL_WIDTH                                                         (1)
#define PHG_GEPHY_ANA_CKTREE0_OFFSET_PI_PHY_EN_1P8VR_SL                                                            (13)
#define PHG_GEPHY_ANA_CKTREE0_OFFSET_PI_PHY_EN_1P8VR_SL_WIDTH                                                       (1)
#define PHG_GEPHY_ANA_CKTREE0_OFFSET_CKTREE_SEL_SLAVE                                                              (14)
#define PHG_GEPHY_ANA_CKTREE0_OFFSET_CKTREE_SEL_SLAVE_WIDTH                                                         (1)
#define PHG_GEPHY_ANA_CKTREE0_OFFSET_CKTREE_SELB_10BASE                                                            (15)
#define PHG_GEPHY_ANA_CKTREE0_OFFSET_CKTREE_SELB_10BASE_WIDTH                                                       (1)
typedef union PHG_GEPHY_ANA_CKTREE0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd_wr_cktree0:PHG_GEPHY_ANA_CKTREE0_OFFSET_RSVD_WR_CKTREE0_WIDTH;                                     //[ 8: 0]
        jl_uint32 pu_tx_cktree:PHG_GEPHY_ANA_CKTREE0_OFFSET_PU_TX_CKTREE_WIDTH;                                           //[ 9: 9]
        jl_uint32 pi_rsel:PHG_GEPHY_ANA_CKTREE0_OFFSET_PI_RSEL_WIDTH;                                                     //[11:10]
        jl_uint32 pi_phy_en_1vr_sl:PHG_GEPHY_ANA_CKTREE0_OFFSET_PI_PHY_EN_1VR_SL_WIDTH;                                   //[12:12]
        jl_uint32 pi_phy_en_1p8vr_sl:PHG_GEPHY_ANA_CKTREE0_OFFSET_PI_PHY_EN_1P8VR_SL_WIDTH;                               //[13:13]
        jl_uint32 cktree_sel_slave:PHG_GEPHY_ANA_CKTREE0_OFFSET_CKTREE_SEL_SLAVE_WIDTH;                                   //[14:14]
        jl_uint32 cktree_selb_10base:PHG_GEPHY_ANA_CKTREE0_OFFSET_CKTREE_SELB_10BASE_WIDTH;                               //[15:15]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_CKTREE0_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_CKTREE0_ENTRY_SIZE];
} PHG_GEPHY_ANA_CKTREE0_t;

#define PHG_GEPHY_ANA_ATEST0                                                                   ((jl_uint32)0x002447D4U)
#define PHG_GEPHY_ANA_ATEST0_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_ANA_ATEST0_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_ANA_ATEST0_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_ANA_ATEST0_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_ANA_ATEST0_OFFSET_RSVD_WR_ATEST0                                                                  (0)
#define PHG_GEPHY_ANA_ATEST0_OFFSET_RSVD_WR_ATEST0_WIDTH                                                            (9)
#define PHG_GEPHY_ANA_ATEST0_OFFSET_TE_BLK                                                                          (9)
#define PHG_GEPHY_ANA_ATEST0_OFFSET_TE_BLK_WIDTH                                                                    (4)
#define PHG_GEPHY_ANA_ATEST0_OFFSET_TR                                                                             (13)
#define PHG_GEPHY_ANA_ATEST0_OFFSET_TR_WIDTH                                                                        (3)
typedef union PHG_GEPHY_ANA_ATEST0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd_wr_atest0:PHG_GEPHY_ANA_ATEST0_OFFSET_RSVD_WR_ATEST0_WIDTH;                                        //[ 8: 0]
        jl_uint32 te_blk:PHG_GEPHY_ANA_ATEST0_OFFSET_TE_BLK_WIDTH;                                                        //[12: 9]
        jl_uint32 tr:PHG_GEPHY_ANA_ATEST0_OFFSET_TR_WIDTH;                                                                //[15:13]
        jl_uint32 rsvd0:PHG_GEPHY_ANA_ATEST0_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_ANA_ATEST0_ENTRY_SIZE];
} PHG_GEPHY_ANA_ATEST0_t;

#define PHG_GEPHY_LOAD_GO                                                                      ((jl_uint32)0x00246000U)
#define PHG_GEPHY_LOAD_GO_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_GEPHY_LOAD_GO_ENTRY_SIZE                                                                                (1)
#define PHG_GEPHY_LOAD_GO_OFFSET_RSVD0                                                                             (16)
#define PHG_GEPHY_LOAD_GO_OFFSET_RSVD0_WIDTH                                                                       (16)
#define PHG_GEPHY_LOAD_GO_OFFSET_LOAD_GO                                                                            (0)
#define PHG_GEPHY_LOAD_GO_OFFSET_LOAD_GO_WIDTH                                                                     (16)
typedef union PHG_GEPHY_LOAD_GO_u {
    struct __attribute__ ((packed)) {
        jl_uint32 load_go:PHG_GEPHY_LOAD_GO_OFFSET_LOAD_GO_WIDTH;                                                         //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_LOAD_GO_OFFSET_RSVD0_WIDTH;                                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_LOAD_GO_ENTRY_SIZE];
} PHG_GEPHY_LOAD_GO_t;

#define PHG_GEPHY_LOAD_DATA0                                                                   ((jl_uint32)0x00246004U)
#define PHG_GEPHY_LOAD_DATA0_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_LOAD_DATA0_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_LOAD_DATA0_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_LOAD_DATA0_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_LOAD_DATA0_OFFSET_LOAD_DATA0                                                                      (0)
#define PHG_GEPHY_LOAD_DATA0_OFFSET_LOAD_DATA0_WIDTH                                                               (16)
typedef union PHG_GEPHY_LOAD_DATA0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 load_data0:PHG_GEPHY_LOAD_DATA0_OFFSET_LOAD_DATA0_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_LOAD_DATA0_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_LOAD_DATA0_ENTRY_SIZE];
} PHG_GEPHY_LOAD_DATA0_t;

#define PHG_GEPHY_LOAD_DATA1                                                                   ((jl_uint32)0x00246008U)
#define PHG_GEPHY_LOAD_DATA1_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_LOAD_DATA1_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_LOAD_DATA1_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_LOAD_DATA1_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_LOAD_DATA1_OFFSET_LOAD_DATA1                                                                      (0)
#define PHG_GEPHY_LOAD_DATA1_OFFSET_LOAD_DATA1_WIDTH                                                               (16)
typedef union PHG_GEPHY_LOAD_DATA1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 load_data1:PHG_GEPHY_LOAD_DATA1_OFFSET_LOAD_DATA1_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_LOAD_DATA1_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_LOAD_DATA1_ENTRY_SIZE];
} PHG_GEPHY_LOAD_DATA1_t;

#define PHG_GEPHY_LOAD_DATA2                                                                   ((jl_uint32)0x0024600CU)
#define PHG_GEPHY_LOAD_DATA2_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_LOAD_DATA2_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_LOAD_DATA2_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_LOAD_DATA2_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_LOAD_DATA2_OFFSET_LOAD_DATA2                                                                      (0)
#define PHG_GEPHY_LOAD_DATA2_OFFSET_LOAD_DATA2_WIDTH                                                               (16)
typedef union PHG_GEPHY_LOAD_DATA2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 load_data2:PHG_GEPHY_LOAD_DATA2_OFFSET_LOAD_DATA2_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_LOAD_DATA2_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_LOAD_DATA2_ENTRY_SIZE];
} PHG_GEPHY_LOAD_DATA2_t;

#define PHG_GEPHY_LOAD_DATA3                                                                   ((jl_uint32)0x00246010U)
#define PHG_GEPHY_LOAD_DATA3_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_LOAD_DATA3_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_LOAD_DATA3_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_LOAD_DATA3_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_LOAD_DATA3_OFFSET_LOAD_DATA3                                                                      (0)
#define PHG_GEPHY_LOAD_DATA3_OFFSET_LOAD_DATA3_WIDTH                                                               (16)
typedef union PHG_GEPHY_LOAD_DATA3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 load_data3:PHG_GEPHY_LOAD_DATA3_OFFSET_LOAD_DATA3_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_LOAD_DATA3_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_LOAD_DATA3_ENTRY_SIZE];
} PHG_GEPHY_LOAD_DATA3_t;

#define PHG_GEPHY_LOAD_DATA4                                                                   ((jl_uint32)0x00246014U)
#define PHG_GEPHY_LOAD_DATA4_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_LOAD_DATA4_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_LOAD_DATA4_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_LOAD_DATA4_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_LOAD_DATA4_OFFSET_LOAD_DATA4                                                                      (0)
#define PHG_GEPHY_LOAD_DATA4_OFFSET_LOAD_DATA4_WIDTH                                                               (16)
typedef union PHG_GEPHY_LOAD_DATA4_u {
    struct __attribute__ ((packed)) {
        jl_uint32 load_data4:PHG_GEPHY_LOAD_DATA4_OFFSET_LOAD_DATA4_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_LOAD_DATA4_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_LOAD_DATA4_ENTRY_SIZE];
} PHG_GEPHY_LOAD_DATA4_t;

#define PHG_GEPHY_LOAD_DATA5                                                                   ((jl_uint32)0x00246018U)
#define PHG_GEPHY_LOAD_DATA5_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_LOAD_DATA5_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_LOAD_DATA5_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_LOAD_DATA5_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_LOAD_DATA5_OFFSET_LOAD_DATA5                                                                      (0)
#define PHG_GEPHY_LOAD_DATA5_OFFSET_LOAD_DATA5_WIDTH                                                               (16)
typedef union PHG_GEPHY_LOAD_DATA5_u {
    struct __attribute__ ((packed)) {
        jl_uint32 load_data5:PHG_GEPHY_LOAD_DATA5_OFFSET_LOAD_DATA5_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_LOAD_DATA5_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_LOAD_DATA5_ENTRY_SIZE];
} PHG_GEPHY_LOAD_DATA5_t;

#define PHG_GEPHY_LOAD_DATA6                                                                   ((jl_uint32)0x0024601CU)
#define PHG_GEPHY_LOAD_DATA6_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_LOAD_DATA6_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_LOAD_DATA6_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_LOAD_DATA6_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_LOAD_DATA6_OFFSET_LOAD_DATA6                                                                      (0)
#define PHG_GEPHY_LOAD_DATA6_OFFSET_LOAD_DATA6_WIDTH                                                               (16)
typedef union PHG_GEPHY_LOAD_DATA6_u {
    struct __attribute__ ((packed)) {
        jl_uint32 load_data6:PHG_GEPHY_LOAD_DATA6_OFFSET_LOAD_DATA6_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_LOAD_DATA6_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_LOAD_DATA6_ENTRY_SIZE];
} PHG_GEPHY_LOAD_DATA6_t;

#define PHG_GEPHY_LOAD_DATA7                                                                   ((jl_uint32)0x00246020U)
#define PHG_GEPHY_LOAD_DATA7_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_LOAD_DATA7_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_LOAD_DATA7_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_LOAD_DATA7_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_LOAD_DATA7_OFFSET_LOAD_DATA7                                                                      (0)
#define PHG_GEPHY_LOAD_DATA7_OFFSET_LOAD_DATA7_WIDTH                                                               (16)
typedef union PHG_GEPHY_LOAD_DATA7_u {
    struct __attribute__ ((packed)) {
        jl_uint32 load_data7:PHG_GEPHY_LOAD_DATA7_OFFSET_LOAD_DATA7_WIDTH;                                                //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_LOAD_DATA7_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_LOAD_DATA7_ENTRY_SIZE];
} PHG_GEPHY_LOAD_DATA7_t;

#define PHG_GEPHY_CPU_PC_HIGH                                                                  ((jl_uint32)0x00246024U)
#define PHG_GEPHY_CPU_PC_HIGH_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPU_PC_HIGH_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_CPU_PC_HIGH_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_CPU_PC_HIGH_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_CPU_PC_HIGH_OFFSET_CPU_PC_HI                                                                      (0)
#define PHG_GEPHY_CPU_PC_HIGH_OFFSET_CPU_PC_HI_WIDTH                                                               (16)
typedef union PHG_GEPHY_CPU_PC_HIGH_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cpu_pc_hi:PHG_GEPHY_CPU_PC_HIGH_OFFSET_CPU_PC_HI_WIDTH;                                                 //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CPU_PC_HIGH_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPU_PC_HIGH_ENTRY_SIZE];
} PHG_GEPHY_CPU_PC_HIGH_t;

#define PHG_GEPHY_CPU_PC_LOW                                                                   ((jl_uint32)0x00246028U)
#define PHG_GEPHY_CPU_PC_LOW_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPU_PC_LOW_ENTRY_SIZE                                                                             (1)
#define PHG_GEPHY_CPU_PC_LOW_OFFSET_RSVD0                                                                          (16)
#define PHG_GEPHY_CPU_PC_LOW_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_GEPHY_CPU_PC_LOW_OFFSET_CPU_PC_LO                                                                       (0)
#define PHG_GEPHY_CPU_PC_LOW_OFFSET_CPU_PC_LO_WIDTH                                                                (16)
typedef union PHG_GEPHY_CPU_PC_LOW_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cpu_pc_lo:PHG_GEPHY_CPU_PC_LOW_OFFSET_CPU_PC_LO_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CPU_PC_LOW_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPU_PC_LOW_ENTRY_SIZE];
} PHG_GEPHY_CPU_PC_LOW_t;

#define PHG_GEPHY_SYS_IOMEM_ENC_ADDR                                                           ((jl_uint32)0x0024602CU)
#define PHG_GEPHY_SYS_IOMEM_ENC_ADDR_NUM                                                       ((jl_uint32)0x00000001U)
#define PHG_GEPHY_SYS_IOMEM_ENC_ADDR_ENTRY_SIZE                                                                     (1)
#define PHG_GEPHY_SYS_IOMEM_ENC_ADDR_OFFSET_RSVD0                                                                  (16)
#define PHG_GEPHY_SYS_IOMEM_ENC_ADDR_OFFSET_RSVD0_WIDTH                                                            (16)
#define PHG_GEPHY_SYS_IOMEM_ENC_ADDR_OFFSET_SYS_IOMEM_ENC_ADDR                                                      (0)
#define PHG_GEPHY_SYS_IOMEM_ENC_ADDR_OFFSET_SYS_IOMEM_ENC_ADDR_WIDTH                                               (16)
typedef union PHG_GEPHY_SYS_IOMEM_ENC_ADDR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sys_iomem_enc_addr:PHG_GEPHY_SYS_IOMEM_ENC_ADDR_OFFSET_SYS_IOMEM_ENC_ADDR_WIDTH;                        //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_SYS_IOMEM_ENC_ADDR_OFFSET_RSVD0_WIDTH;                                                  //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_SYS_IOMEM_ENC_ADDR_ENTRY_SIZE];
} PHG_GEPHY_SYS_IOMEM_ENC_ADDR_t;

#define PHG_GEPHY_CPU_SP_LATCH                                                                 ((jl_uint32)0x00246030U)
#define PHG_GEPHY_CPU_SP_LATCH_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPU_SP_LATCH_ENTRY_SIZE                                                                           (1)
#define PHG_GEPHY_CPU_SP_LATCH_OFFSET_RSVD0                                                                        (16)
#define PHG_GEPHY_CPU_SP_LATCH_OFFSET_RSVD0_WIDTH                                                                  (16)
#define PHG_GEPHY_CPU_SP_LATCH_OFFSET_CPU_SP                                                                        (0)
#define PHG_GEPHY_CPU_SP_LATCH_OFFSET_CPU_SP_WIDTH                                                                 (16)
typedef union PHG_GEPHY_CPU_SP_LATCH_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cpu_sp:PHG_GEPHY_CPU_SP_LATCH_OFFSET_CPU_SP_WIDTH;                                                      //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CPU_SP_LATCH_OFFSET_RSVD0_WIDTH;                                                        //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPU_SP_LATCH_ENTRY_SIZE];
} PHG_GEPHY_CPU_SP_LATCH_t;

#define PHG_GEPHY_CPU_SP_LATCH_CTRL                                                            ((jl_uint32)0x00246034U)
#define PHG_GEPHY_CPU_SP_LATCH_CTRL_NUM                                                        ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPU_SP_LATCH_CTRL_ENTRY_SIZE                                                                      (1)
#define PHG_GEPHY_CPU_SP_LATCH_CTRL_OFFSET_RSVD1                                                                   (16)
#define PHG_GEPHY_CPU_SP_LATCH_CTRL_OFFSET_RSVD1_WIDTH                                                             (16)
#define PHG_GEPHY_CPU_SP_LATCH_CTRL_OFFSET_RSVD0                                                                    (0)
#define PHG_GEPHY_CPU_SP_LATCH_CTRL_OFFSET_RSVD0_WIDTH                                                             (15)
#define PHG_GEPHY_CPU_SP_LATCH_CTRL_OFFSET_CPU_SP_CLR                                                              (15)
#define PHG_GEPHY_CPU_SP_LATCH_CTRL_OFFSET_CPU_SP_CLR_WIDTH                                                         (1)
typedef union PHG_GEPHY_CPU_SP_LATCH_CTRL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd0:PHG_GEPHY_CPU_SP_LATCH_CTRL_OFFSET_RSVD0_WIDTH;                                                   //[14: 0]
        jl_uint32 cpu_sp_clr:PHG_GEPHY_CPU_SP_LATCH_CTRL_OFFSET_CPU_SP_CLR_WIDTH;                                         //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_CPU_SP_LATCH_CTRL_OFFSET_RSVD1_WIDTH;                                                   //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPU_SP_LATCH_CTRL_ENTRY_SIZE];
} PHG_GEPHY_CPU_SP_LATCH_CTRL_t;

#define PHG_GEPHY_CPU_SW_RSTB                                                                  ((jl_uint32)0x00246038U)
#define PHG_GEPHY_CPU_SW_RSTB_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPU_SW_RSTB_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_CPU_SW_RSTB_OFFSET_RSVD0                                                                          (1)
#define PHG_GEPHY_CPU_SW_RSTB_OFFSET_RSVD0_WIDTH                                                                   (31)
#define PHG_GEPHY_CPU_SW_RSTB_OFFSET_CPU_SW_RSTB                                                                    (0)
#define PHG_GEPHY_CPU_SW_RSTB_OFFSET_CPU_SW_RSTB_WIDTH                                                              (1)
typedef union PHG_GEPHY_CPU_SW_RSTB_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cpu_sw_rstb:PHG_GEPHY_CPU_SW_RSTB_OFFSET_CPU_SW_RSTB_WIDTH;                                             //[ 0: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CPU_SW_RSTB_OFFSET_RSVD0_WIDTH;                                                         //[31: 1]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPU_SW_RSTB_ENTRY_SIZE];
} PHG_GEPHY_CPU_SW_RSTB_t;

#define PHG_GEPHY_PATCH_RSVD0                                                                  ((jl_uint32)0x0024603CU)
#define PHG_GEPHY_PATCH_RSVD0_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PATCH_RSVD0_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_PATCH_RSVD0_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_PATCH_RSVD0_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_PATCH_RSVD0_OFFSET_PATCH_RSVD0                                                                    (0)
#define PHG_GEPHY_PATCH_RSVD0_OFFSET_PATCH_RSVD0_WIDTH                                                             (16)
typedef union PHG_GEPHY_PATCH_RSVD0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 patch_rsvd0:PHG_GEPHY_PATCH_RSVD0_OFFSET_PATCH_RSVD0_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PATCH_RSVD0_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PATCH_RSVD0_ENTRY_SIZE];
} PHG_GEPHY_PATCH_RSVD0_t;

#define PHG_GEPHY_PATCH_RSVD1                                                                  ((jl_uint32)0x00246040U)
#define PHG_GEPHY_PATCH_RSVD1_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PATCH_RSVD1_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_PATCH_RSVD1_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_PATCH_RSVD1_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_PATCH_RSVD1_OFFSET_PATCH_RSVD1                                                                    (0)
#define PHG_GEPHY_PATCH_RSVD1_OFFSET_PATCH_RSVD1_WIDTH                                                             (16)
typedef union PHG_GEPHY_PATCH_RSVD1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 patch_rsvd1:PHG_GEPHY_PATCH_RSVD1_OFFSET_PATCH_RSVD1_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PATCH_RSVD1_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PATCH_RSVD1_ENTRY_SIZE];
} PHG_GEPHY_PATCH_RSVD1_t;

#define PHG_GEPHY_PATCH_RSVD2                                                                  ((jl_uint32)0x00246044U)
#define PHG_GEPHY_PATCH_RSVD2_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PATCH_RSVD2_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_PATCH_RSVD2_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_PATCH_RSVD2_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_PATCH_RSVD2_OFFSET_PATCH_RSVD2                                                                    (0)
#define PHG_GEPHY_PATCH_RSVD2_OFFSET_PATCH_RSVD2_WIDTH                                                             (16)
typedef union PHG_GEPHY_PATCH_RSVD2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 patch_rsvd2:PHG_GEPHY_PATCH_RSVD2_OFFSET_PATCH_RSVD2_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PATCH_RSVD2_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PATCH_RSVD2_ENTRY_SIZE];
} PHG_GEPHY_PATCH_RSVD2_t;

#define PHG_GEPHY_PATCH_RSVD3                                                                  ((jl_uint32)0x00246048U)
#define PHG_GEPHY_PATCH_RSVD3_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_GEPHY_PATCH_RSVD3_ENTRY_SIZE                                                                            (1)
#define PHG_GEPHY_PATCH_RSVD3_OFFSET_RSVD0                                                                         (16)
#define PHG_GEPHY_PATCH_RSVD3_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_GEPHY_PATCH_RSVD3_OFFSET_PATCH_RSVD3                                                                    (0)
#define PHG_GEPHY_PATCH_RSVD3_OFFSET_PATCH_RSVD3_WIDTH                                                             (16)
typedef union PHG_GEPHY_PATCH_RSVD3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 patch_rsvd3:PHG_GEPHY_PATCH_RSVD3_OFFSET_PATCH_RSVD3_WIDTH;                                             //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_PATCH_RSVD3_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_PATCH_RSVD3_ENTRY_SIZE];
} PHG_GEPHY_PATCH_RSVD3_t;

#define PHG_GEPHY_CPU_HOTFIX_ADDR0                                                             ((jl_uint32)0x0024604CU)
#define PHG_GEPHY_CPU_HOTFIX_ADDR0_NUM                                                         ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPU_HOTFIX_ADDR0_ENTRY_SIZE                                                                       (1)
#define PHG_GEPHY_CPU_HOTFIX_ADDR0_OFFSET_RSVD0                                                                    (16)
#define PHG_GEPHY_CPU_HOTFIX_ADDR0_OFFSET_RSVD0_WIDTH                                                              (16)
#define PHG_GEPHY_CPU_HOTFIX_ADDR0_OFFSET_FIXUP_ADDR0                                                               (0)
#define PHG_GEPHY_CPU_HOTFIX_ADDR0_OFFSET_FIXUP_ADDR0_WIDTH                                                        (16)
typedef union PHG_GEPHY_CPU_HOTFIX_ADDR0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 fixup_addr0:PHG_GEPHY_CPU_HOTFIX_ADDR0_OFFSET_FIXUP_ADDR0_WIDTH;                                        //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CPU_HOTFIX_ADDR0_OFFSET_RSVD0_WIDTH;                                                    //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPU_HOTFIX_ADDR0_ENTRY_SIZE];
} PHG_GEPHY_CPU_HOTFIX_ADDR0_t;

#define PHG_GEPHY_CPU_HOTFIX_ADDR1                                                             ((jl_uint32)0x00246050U)
#define PHG_GEPHY_CPU_HOTFIX_ADDR1_NUM                                                         ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPU_HOTFIX_ADDR1_ENTRY_SIZE                                                                       (1)
#define PHG_GEPHY_CPU_HOTFIX_ADDR1_OFFSET_RSVD0                                                                    (16)
#define PHG_GEPHY_CPU_HOTFIX_ADDR1_OFFSET_RSVD0_WIDTH                                                              (16)
#define PHG_GEPHY_CPU_HOTFIX_ADDR1_OFFSET_FIXUP_ADDR1                                                               (0)
#define PHG_GEPHY_CPU_HOTFIX_ADDR1_OFFSET_FIXUP_ADDR1_WIDTH                                                        (16)
typedef union PHG_GEPHY_CPU_HOTFIX_ADDR1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 fixup_addr1:PHG_GEPHY_CPU_HOTFIX_ADDR1_OFFSET_FIXUP_ADDR1_WIDTH;                                        //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CPU_HOTFIX_ADDR1_OFFSET_RSVD0_WIDTH;                                                    //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPU_HOTFIX_ADDR1_ENTRY_SIZE];
} PHG_GEPHY_CPU_HOTFIX_ADDR1_t;

#define PHG_GEPHY_CPU_HOTFIX_DATA0_MSB                                                         ((jl_uint32)0x00246054U)
#define PHG_GEPHY_CPU_HOTFIX_DATA0_MSB_NUM                                                     ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPU_HOTFIX_DATA0_MSB_ENTRY_SIZE                                                                   (1)
#define PHG_GEPHY_CPU_HOTFIX_DATA0_MSB_OFFSET_RSVD0                                                                (16)
#define PHG_GEPHY_CPU_HOTFIX_DATA0_MSB_OFFSET_RSVD0_WIDTH                                                          (16)
#define PHG_GEPHY_CPU_HOTFIX_DATA0_MSB_OFFSET_FIXUP_DATA0_MSB                                                       (0)
#define PHG_GEPHY_CPU_HOTFIX_DATA0_MSB_OFFSET_FIXUP_DATA0_MSB_WIDTH                                                (16)
typedef union PHG_GEPHY_CPU_HOTFIX_DATA0_MSB_u {
    struct __attribute__ ((packed)) {
        jl_uint32 fixup_data0_msb:PHG_GEPHY_CPU_HOTFIX_DATA0_MSB_OFFSET_FIXUP_DATA0_MSB_WIDTH;                            //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CPU_HOTFIX_DATA0_MSB_OFFSET_RSVD0_WIDTH;                                                //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPU_HOTFIX_DATA0_MSB_ENTRY_SIZE];
} PHG_GEPHY_CPU_HOTFIX_DATA0_MSB_t;

#define PHG_GEPHY_CPU_HOTFIX_DATA0_LSB                                                         ((jl_uint32)0x00246058U)
#define PHG_GEPHY_CPU_HOTFIX_DATA0_LSB_NUM                                                     ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPU_HOTFIX_DATA0_LSB_ENTRY_SIZE                                                                   (1)
#define PHG_GEPHY_CPU_HOTFIX_DATA0_LSB_OFFSET_RSVD0                                                                (16)
#define PHG_GEPHY_CPU_HOTFIX_DATA0_LSB_OFFSET_RSVD0_WIDTH                                                          (16)
#define PHG_GEPHY_CPU_HOTFIX_DATA0_LSB_OFFSET_FIXUP_DATA0_LSB                                                       (0)
#define PHG_GEPHY_CPU_HOTFIX_DATA0_LSB_OFFSET_FIXUP_DATA0_LSB_WIDTH                                                (16)
typedef union PHG_GEPHY_CPU_HOTFIX_DATA0_LSB_u {
    struct __attribute__ ((packed)) {
        jl_uint32 fixup_data0_lsb:PHG_GEPHY_CPU_HOTFIX_DATA0_LSB_OFFSET_FIXUP_DATA0_LSB_WIDTH;                            //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CPU_HOTFIX_DATA0_LSB_OFFSET_RSVD0_WIDTH;                                                //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPU_HOTFIX_DATA0_LSB_ENTRY_SIZE];
} PHG_GEPHY_CPU_HOTFIX_DATA0_LSB_t;

#define PHG_GEPHY_CPU_HOTFIX_DATA1_MSB                                                         ((jl_uint32)0x0024605CU)
#define PHG_GEPHY_CPU_HOTFIX_DATA1_MSB_NUM                                                     ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPU_HOTFIX_DATA1_MSB_ENTRY_SIZE                                                                   (1)
#define PHG_GEPHY_CPU_HOTFIX_DATA1_MSB_OFFSET_RSVD0                                                                (16)
#define PHG_GEPHY_CPU_HOTFIX_DATA1_MSB_OFFSET_RSVD0_WIDTH                                                          (16)
#define PHG_GEPHY_CPU_HOTFIX_DATA1_MSB_OFFSET_FIXUP_DATA1_MSB                                                       (0)
#define PHG_GEPHY_CPU_HOTFIX_DATA1_MSB_OFFSET_FIXUP_DATA1_MSB_WIDTH                                                (16)
typedef union PHG_GEPHY_CPU_HOTFIX_DATA1_MSB_u {
    struct __attribute__ ((packed)) {
        jl_uint32 fixup_data1_msb:PHG_GEPHY_CPU_HOTFIX_DATA1_MSB_OFFSET_FIXUP_DATA1_MSB_WIDTH;                            //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CPU_HOTFIX_DATA1_MSB_OFFSET_RSVD0_WIDTH;                                                //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPU_HOTFIX_DATA1_MSB_ENTRY_SIZE];
} PHG_GEPHY_CPU_HOTFIX_DATA1_MSB_t;

#define PHG_GEPHY_CPU_HOTFIX_DATA1_LSB                                                         ((jl_uint32)0x00246060U)
#define PHG_GEPHY_CPU_HOTFIX_DATA1_LSB_NUM                                                     ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPU_HOTFIX_DATA1_LSB_ENTRY_SIZE                                                                   (1)
#define PHG_GEPHY_CPU_HOTFIX_DATA1_LSB_OFFSET_RSVD0                                                                (16)
#define PHG_GEPHY_CPU_HOTFIX_DATA1_LSB_OFFSET_RSVD0_WIDTH                                                          (16)
#define PHG_GEPHY_CPU_HOTFIX_DATA1_LSB_OFFSET_FIXUP_DATA1_LSB                                                       (0)
#define PHG_GEPHY_CPU_HOTFIX_DATA1_LSB_OFFSET_FIXUP_DATA1_LSB_WIDTH                                                (16)
typedef union PHG_GEPHY_CPU_HOTFIX_DATA1_LSB_u {
    struct __attribute__ ((packed)) {
        jl_uint32 fixup_data1_lsb:PHG_GEPHY_CPU_HOTFIX_DATA1_LSB_OFFSET_FIXUP_DATA1_LSB_WIDTH;                            //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CPU_HOTFIX_DATA1_LSB_OFFSET_RSVD0_WIDTH;                                                //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPU_HOTFIX_DATA1_LSB_ENTRY_SIZE];
} PHG_GEPHY_CPU_HOTFIX_DATA1_LSB_t;

#define PHG_GEPHY_CPU_IRQ_PC_MATCH_MSB                                                         ((jl_uint32)0x00246064U)
#define PHG_GEPHY_CPU_IRQ_PC_MATCH_MSB_NUM                                                     ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPU_IRQ_PC_MATCH_MSB_ENTRY_SIZE                                                                   (1)
#define PHG_GEPHY_CPU_IRQ_PC_MATCH_MSB_OFFSET_RSVD0                                                                (16)
#define PHG_GEPHY_CPU_IRQ_PC_MATCH_MSB_OFFSET_RSVD0_WIDTH                                                          (16)
#define PHG_GEPHY_CPU_IRQ_PC_MATCH_MSB_OFFSET_IRQ_PC_MATCH_MSB                                                      (0)
#define PHG_GEPHY_CPU_IRQ_PC_MATCH_MSB_OFFSET_IRQ_PC_MATCH_MSB_WIDTH                                               (16)
typedef union PHG_GEPHY_CPU_IRQ_PC_MATCH_MSB_u {
    struct __attribute__ ((packed)) {
        jl_uint32 irq_pc_match_msb:PHG_GEPHY_CPU_IRQ_PC_MATCH_MSB_OFFSET_IRQ_PC_MATCH_MSB_WIDTH;                          //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CPU_IRQ_PC_MATCH_MSB_OFFSET_RSVD0_WIDTH;                                                //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPU_IRQ_PC_MATCH_MSB_ENTRY_SIZE];
} PHG_GEPHY_CPU_IRQ_PC_MATCH_MSB_t;

#define PHG_GEPHY_CPU_IRQ_PC_MATCH_LSB                                                         ((jl_uint32)0x00246068U)
#define PHG_GEPHY_CPU_IRQ_PC_MATCH_LSB_NUM                                                     ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPU_IRQ_PC_MATCH_LSB_ENTRY_SIZE                                                                   (1)
#define PHG_GEPHY_CPU_IRQ_PC_MATCH_LSB_OFFSET_RSVD0                                                                (16)
#define PHG_GEPHY_CPU_IRQ_PC_MATCH_LSB_OFFSET_RSVD0_WIDTH                                                          (16)
#define PHG_GEPHY_CPU_IRQ_PC_MATCH_LSB_OFFSET_IRQ_PC_MATCH_LSB                                                      (0)
#define PHG_GEPHY_CPU_IRQ_PC_MATCH_LSB_OFFSET_IRQ_PC_MATCH_LSB_WIDTH                                               (16)
typedef union PHG_GEPHY_CPU_IRQ_PC_MATCH_LSB_u {
    struct __attribute__ ((packed)) {
        jl_uint32 irq_pc_match_lsb:PHG_GEPHY_CPU_IRQ_PC_MATCH_LSB_OFFSET_IRQ_PC_MATCH_LSB_WIDTH;                          //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CPU_IRQ_PC_MATCH_LSB_OFFSET_RSVD0_WIDTH;                                                //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPU_IRQ_PC_MATCH_LSB_ENTRY_SIZE];
} PHG_GEPHY_CPU_IRQ_PC_MATCH_LSB_t;

#define PHG_GEPHY_CPU_PROGADDR_IRQ_MSB                                                         ((jl_uint32)0x0024606CU)
#define PHG_GEPHY_CPU_PROGADDR_IRQ_MSB_NUM                                                     ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPU_PROGADDR_IRQ_MSB_ENTRY_SIZE                                                                   (1)
#define PHG_GEPHY_CPU_PROGADDR_IRQ_MSB_OFFSET_RSVD0                                                                (16)
#define PHG_GEPHY_CPU_PROGADDR_IRQ_MSB_OFFSET_RSVD0_WIDTH                                                          (16)
#define PHG_GEPHY_CPU_PROGADDR_IRQ_MSB_OFFSET_PROGADDR_IRQ_MSB                                                      (0)
#define PHG_GEPHY_CPU_PROGADDR_IRQ_MSB_OFFSET_PROGADDR_IRQ_MSB_WIDTH                                               (16)
typedef union PHG_GEPHY_CPU_PROGADDR_IRQ_MSB_u {
    struct __attribute__ ((packed)) {
        jl_uint32 progaddr_irq_msb:PHG_GEPHY_CPU_PROGADDR_IRQ_MSB_OFFSET_PROGADDR_IRQ_MSB_WIDTH;                          //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CPU_PROGADDR_IRQ_MSB_OFFSET_RSVD0_WIDTH;                                                //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPU_PROGADDR_IRQ_MSB_ENTRY_SIZE];
} PHG_GEPHY_CPU_PROGADDR_IRQ_MSB_t;

#define PHG_GEPHY_CPU_PROGADDR_IRQ_LSB                                                         ((jl_uint32)0x00246070U)
#define PHG_GEPHY_CPU_PROGADDR_IRQ_LSB_NUM                                                     ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPU_PROGADDR_IRQ_LSB_ENTRY_SIZE                                                                   (1)
#define PHG_GEPHY_CPU_PROGADDR_IRQ_LSB_OFFSET_RSVD0                                                                (16)
#define PHG_GEPHY_CPU_PROGADDR_IRQ_LSB_OFFSET_RSVD0_WIDTH                                                          (16)
#define PHG_GEPHY_CPU_PROGADDR_IRQ_LSB_OFFSET_PROGADDR_IRQ_LSB                                                      (0)
#define PHG_GEPHY_CPU_PROGADDR_IRQ_LSB_OFFSET_PROGADDR_IRQ_LSB_WIDTH                                               (16)
typedef union PHG_GEPHY_CPU_PROGADDR_IRQ_LSB_u {
    struct __attribute__ ((packed)) {
        jl_uint32 progaddr_irq_lsb:PHG_GEPHY_CPU_PROGADDR_IRQ_LSB_OFFSET_PROGADDR_IRQ_LSB_WIDTH;                          //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CPU_PROGADDR_IRQ_LSB_OFFSET_RSVD0_WIDTH;                                                //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPU_PROGADDR_IRQ_LSB_ENTRY_SIZE];
} PHG_GEPHY_CPU_PROGADDR_IRQ_LSB_t;

#define PHG_GEPHY_CPU_EMEM_CTRL                                                                ((jl_uint32)0x00246074U)
#define PHG_GEPHY_CPU_EMEM_CTRL_NUM                                                            ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPU_EMEM_CTRL_ENTRY_SIZE                                                                          (1)
#define PHG_GEPHY_CPU_EMEM_CTRL_OFFSET_RSVD1                                                                       (16)
#define PHG_GEPHY_CPU_EMEM_CTRL_OFFSET_RSVD1_WIDTH                                                                 (16)
#define PHG_GEPHY_CPU_EMEM_CTRL_OFFSET_EMEM_ADDR                                                                    (0)
#define PHG_GEPHY_CPU_EMEM_CTRL_OFFSET_EMEM_ADDR_WIDTH                                                             (12)
#define PHG_GEPHY_CPU_EMEM_CTRL_OFFSET_RSVD0                                                                       (12)
#define PHG_GEPHY_CPU_EMEM_CTRL_OFFSET_RSVD0_WIDTH                                                                  (2)
#define PHG_GEPHY_CPU_EMEM_CTRL_OFFSET_EMEM_WE                                                                     (14)
#define PHG_GEPHY_CPU_EMEM_CTRL_OFFSET_EMEM_WE_WIDTH                                                                (1)
#define PHG_GEPHY_CPU_EMEM_CTRL_OFFSET_EMEM_SEL                                                                    (15)
#define PHG_GEPHY_CPU_EMEM_CTRL_OFFSET_EMEM_SEL_WIDTH                                                               (1)
typedef union PHG_GEPHY_CPU_EMEM_CTRL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 emem_addr:PHG_GEPHY_CPU_EMEM_CTRL_OFFSET_EMEM_ADDR_WIDTH;                                               //[11: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CPU_EMEM_CTRL_OFFSET_RSVD0_WIDTH;                                                       //[13:12]
        jl_uint32 emem_we:PHG_GEPHY_CPU_EMEM_CTRL_OFFSET_EMEM_WE_WIDTH;                                                   //[14:14]
        jl_uint32 emem_sel:PHG_GEPHY_CPU_EMEM_CTRL_OFFSET_EMEM_SEL_WIDTH;                                                 //[15:15]
        jl_uint32 rsvd1:PHG_GEPHY_CPU_EMEM_CTRL_OFFSET_RSVD1_WIDTH;                                                       //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPU_EMEM_CTRL_ENTRY_SIZE];
} PHG_GEPHY_CPU_EMEM_CTRL_t;

#define PHG_GEPHY_CPU_EMEM_WDATA                                                               ((jl_uint32)0x00246078U)
#define PHG_GEPHY_CPU_EMEM_WDATA_NUM                                                           ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPU_EMEM_WDATA_ENTRY_SIZE                                                                         (1)
#define PHG_GEPHY_CPU_EMEM_WDATA_OFFSET_RSVD0                                                                      (16)
#define PHG_GEPHY_CPU_EMEM_WDATA_OFFSET_RSVD0_WIDTH                                                                (16)
#define PHG_GEPHY_CPU_EMEM_WDATA_OFFSET_EMEM_WDATA                                                                  (0)
#define PHG_GEPHY_CPU_EMEM_WDATA_OFFSET_EMEM_WDATA_WIDTH                                                           (16)
typedef union PHG_GEPHY_CPU_EMEM_WDATA_u {
    struct __attribute__ ((packed)) {
        jl_uint32 emem_wdata:PHG_GEPHY_CPU_EMEM_WDATA_OFFSET_EMEM_WDATA_WIDTH;                                            //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CPU_EMEM_WDATA_OFFSET_RSVD0_WIDTH;                                                      //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPU_EMEM_WDATA_ENTRY_SIZE];
} PHG_GEPHY_CPU_EMEM_WDATA_t;

#define PHG_GEPHY_CPU_EMEM_RDATA                                                               ((jl_uint32)0x0024607CU)
#define PHG_GEPHY_CPU_EMEM_RDATA_NUM                                                           ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPU_EMEM_RDATA_ENTRY_SIZE                                                                         (1)
#define PHG_GEPHY_CPU_EMEM_RDATA_OFFSET_RSVD0                                                                      (16)
#define PHG_GEPHY_CPU_EMEM_RDATA_OFFSET_RSVD0_WIDTH                                                                (16)
#define PHG_GEPHY_CPU_EMEM_RDATA_OFFSET_EMEM_RDATA                                                                  (0)
#define PHG_GEPHY_CPU_EMEM_RDATA_OFFSET_EMEM_RDATA_WIDTH                                                           (16)
typedef union PHG_GEPHY_CPU_EMEM_RDATA_u {
    struct __attribute__ ((packed)) {
        jl_uint32 emem_rdata:PHG_GEPHY_CPU_EMEM_RDATA_OFFSET_EMEM_RDATA_WIDTH;                                            //[15: 0]
        jl_uint32 rsvd0:PHG_GEPHY_CPU_EMEM_RDATA_OFFSET_RSVD0_WIDTH;                                                      //[31:16]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPU_EMEM_RDATA_ENTRY_SIZE];
} PHG_GEPHY_CPU_EMEM_RDATA_t;

#define PHG_GEPHY_CPU_MISC_CTRL                                                                ((jl_uint32)0x00246080U)
#define PHG_GEPHY_CPU_MISC_CTRL_NUM                                                            ((jl_uint32)0x00000001U)
#define PHG_GEPHY_CPU_MISC_CTRL_ENTRY_SIZE                                                                          (1)
#define PHG_GEPHY_CPU_MISC_CTRL_OFFSET_RSVD0                                                                        (6)
#define PHG_GEPHY_CPU_MISC_CTRL_OFFSET_RSVD0_WIDTH                                                                 (26)
#define PHG_GEPHY_CPU_MISC_CTRL_OFFSET_ROM_EMA                                                                      (0)
#define PHG_GEPHY_CPU_MISC_CTRL_OFFSET_ROM_EMA_WIDTH                                                                (3)
#define PHG_GEPHY_CPU_MISC_CTRL_OFFSET_RAM_EMA                                                                      (3)
#define PHG_GEPHY_CPU_MISC_CTRL_OFFSET_RAM_EMA_WIDTH                                                                (3)
typedef union PHG_GEPHY_CPU_MISC_CTRL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rom_ema:PHG_GEPHY_CPU_MISC_CTRL_OFFSET_ROM_EMA_WIDTH;                                                   //[ 2: 0]
        jl_uint32 ram_ema:PHG_GEPHY_CPU_MISC_CTRL_OFFSET_RAM_EMA_WIDTH;                                                   //[ 5: 3]
        jl_uint32 rsvd0:PHG_GEPHY_CPU_MISC_CTRL_OFFSET_RSVD0_WIDTH;                                                       //[31: 6]
    } BF;
    jl_uint32 val[PHG_GEPHY_CPU_MISC_CTRL_ENTRY_SIZE];
} PHG_GEPHY_CPU_MISC_CTRL_t;

#endif /* __JL_REG_PHG_GEPHY_H__ */

