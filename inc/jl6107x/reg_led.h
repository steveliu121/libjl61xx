//reg_led.h
/*
* Automatically generated by gen_c_api.py, don't edit it
*/
#ifndef __JL_REG_LED_H__
#define __JL_REG_LED_H__

#include <jl_types.h>

#define LED_BASE                                                                               ((jl_uint32)0x00143400U)
#define LED_BLOCK_SIZE                                                                         ((jl_uint32)0x00000400U)

#define LED_LED_MODE                                                                           ((jl_uint32)0x00143400U)
#define LED_LED_MODE_NUM                                                                       ((jl_uint32)0x00000001U)
#define LED_LED_MODE_ENTRY_SIZE                                                                                     (1)
#define LED_LED_MODE_OFFSET_RSVD0                                                                                   (2)
#define LED_LED_MODE_OFFSET_RSVD0_WIDTH                                                                            (30)
#define LED_LED_MODE_OFFSET_CFG_PARALLEL_ENABLE                                                                     (0)
#define LED_LED_MODE_OFFSET_CFG_PARALLEL_ENABLE_WIDTH                                                               (1)
#define LED_LED_MODE_OFFSET_CFG_SERIAL_ENABLE                                                                       (1)
#define LED_LED_MODE_OFFSET_CFG_SERIAL_ENABLE_WIDTH                                                                 (1)
typedef union LED_LED_MODE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_parallel_enable:LED_LED_MODE_OFFSET_CFG_PARALLEL_ENABLE_WIDTH;                                      //[ 0: 0]
        jl_uint32 cfg_serial_enable:LED_LED_MODE_OFFSET_CFG_SERIAL_ENABLE_WIDTH;                                          //[ 1: 1]
        jl_uint32 rsvd0:LED_LED_MODE_OFFSET_RSVD0_WIDTH;                                                                  //[31: 2]
    } BF;
    jl_uint32 val[LED_LED_MODE_ENTRY_SIZE];
} LED_LED_MODE_t;

#define LED_LED_SERIAL_MODE                                                                    ((jl_uint32)0x00143404U)
#define LED_LED_SERIAL_MODE_NUM                                                                ((jl_uint32)0x00000001U)
#define LED_LED_SERIAL_MODE_ENTRY_SIZE                                                                              (1)
#define LED_LED_SERIAL_MODE_OFFSET_RSVD0                                                                            (2)
#define LED_LED_SERIAL_MODE_OFFSET_RSVD0_WIDTH                                                                     (30)
#define LED_LED_SERIAL_MODE_OFFSET_CFG_SERIAL_MODE                                                                  (0)
#define LED_LED_SERIAL_MODE_OFFSET_CFG_SERIAL_MODE_WIDTH                                                            (2)
typedef union LED_LED_SERIAL_MODE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_serial_mode:LED_LED_SERIAL_MODE_OFFSET_CFG_SERIAL_MODE_WIDTH;                                       //[ 1: 0]
        jl_uint32 rsvd0:LED_LED_SERIAL_MODE_OFFSET_RSVD0_WIDTH;                                                           //[31: 2]
    } BF;
    jl_uint32 val[LED_LED_SERIAL_MODE_ENTRY_SIZE];
} LED_LED_SERIAL_MODE_t;

#define LED_LED_BLINK_RATE                                                                     ((jl_uint32)0x00143408U)
#define LED_LED_BLINK_RATE_NUM                                                                 ((jl_uint32)0x00000001U)
#define LED_LED_BLINK_RATE_ENTRY_SIZE                                                                               (1)
#define LED_LED_BLINK_RATE_OFFSET_CFG_LED_OFF_TIME                                                                  (0)
#define LED_LED_BLINK_RATE_OFFSET_CFG_LED_OFF_TIME_WIDTH                                                            (8)
#define LED_LED_BLINK_RATE_OFFSET_CFG_LED_ON_TIME                                                                   (8)
#define LED_LED_BLINK_RATE_OFFSET_CFG_LED_ON_TIME_WIDTH                                                             (8)
#define LED_LED_BLINK_RATE_OFFSET_CFG_LOP_OFF_TIME                                                                 (16)
#define LED_LED_BLINK_RATE_OFFSET_CFG_LOP_OFF_TIME_WIDTH                                                            (8)
#define LED_LED_BLINK_RATE_OFFSET_CFG_LOP_ON_TIME                                                                  (24)
#define LED_LED_BLINK_RATE_OFFSET_CFG_LOP_ON_TIME_WIDTH                                                             (8)
typedef union LED_LED_BLINK_RATE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led_off_time:LED_LED_BLINK_RATE_OFFSET_CFG_LED_OFF_TIME_WIDTH;                                      //[ 7: 0]
        jl_uint32 cfg_led_on_time:LED_LED_BLINK_RATE_OFFSET_CFG_LED_ON_TIME_WIDTH;                                        //[15: 8]
        jl_uint32 cfg_lop_off_time:LED_LED_BLINK_RATE_OFFSET_CFG_LOP_OFF_TIME_WIDTH;                                      //[23:16]
        jl_uint32 cfg_lop_on_time:LED_LED_BLINK_RATE_OFFSET_CFG_LOP_ON_TIME_WIDTH;                                        //[31:24]
    } BF;
    jl_uint32 val[LED_LED_BLINK_RATE_ENTRY_SIZE];
} LED_LED_BLINK_RATE_t;

#define LED_LED0_DISABLE                                                                       ((jl_uint32)0x0014340CU)
#define LED_LED0_DISABLE_NUM                                                                   ((jl_uint32)0x00000001U)
#define LED_LED0_DISABLE_ENTRY_SIZE                                                                                 (1)
#define LED_LED0_DISABLE_OFFSET_RSVD0                                                                               (5)
#define LED_LED0_DISABLE_OFFSET_RSVD0_WIDTH                                                                        (27)
#define LED_LED0_DISABLE_OFFSET_CFG_LED0_DISABLE                                                                    (0)
#define LED_LED0_DISABLE_OFFSET_CFG_LED0_DISABLE_WIDTH                                                              (5)
typedef union LED_LED0_DISABLE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led0_disable:LED_LED0_DISABLE_OFFSET_CFG_LED0_DISABLE_WIDTH;                                        //[ 4: 0]
        jl_uint32 rsvd0:LED_LED0_DISABLE_OFFSET_RSVD0_WIDTH;                                                              //[31: 5]
    } BF;
    jl_uint32 val[LED_LED0_DISABLE_ENTRY_SIZE];
} LED_LED0_DISABLE_t;

#define LED_LED1_DISABLE                                                                       ((jl_uint32)0x00143410U)
#define LED_LED1_DISABLE_NUM                                                                   ((jl_uint32)0x00000001U)
#define LED_LED1_DISABLE_ENTRY_SIZE                                                                                 (1)
#define LED_LED1_DISABLE_OFFSET_RSVD0                                                                               (5)
#define LED_LED1_DISABLE_OFFSET_RSVD0_WIDTH                                                                        (27)
#define LED_LED1_DISABLE_OFFSET_CFG_LED1_DISABLE                                                                    (0)
#define LED_LED1_DISABLE_OFFSET_CFG_LED1_DISABLE_WIDTH                                                              (5)
typedef union LED_LED1_DISABLE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led1_disable:LED_LED1_DISABLE_OFFSET_CFG_LED1_DISABLE_WIDTH;                                        //[ 4: 0]
        jl_uint32 rsvd0:LED_LED1_DISABLE_OFFSET_RSVD0_WIDTH;                                                              //[31: 5]
    } BF;
    jl_uint32 val[LED_LED1_DISABLE_ENTRY_SIZE];
} LED_LED1_DISABLE_t;

#define LED_LED2_DISABLE                                                                       ((jl_uint32)0x00143414U)
#define LED_LED2_DISABLE_NUM                                                                   ((jl_uint32)0x00000001U)
#define LED_LED2_DISABLE_ENTRY_SIZE                                                                                 (1)
#define LED_LED2_DISABLE_OFFSET_RSVD0                                                                               (5)
#define LED_LED2_DISABLE_OFFSET_RSVD0_WIDTH                                                                        (27)
#define LED_LED2_DISABLE_OFFSET_CFG_LED2_DISABLE                                                                    (0)
#define LED_LED2_DISABLE_OFFSET_CFG_LED2_DISABLE_WIDTH                                                              (5)
typedef union LED_LED2_DISABLE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led2_disable:LED_LED2_DISABLE_OFFSET_CFG_LED2_DISABLE_WIDTH;                                        //[ 4: 0]
        jl_uint32 rsvd0:LED_LED2_DISABLE_OFFSET_RSVD0_WIDTH;                                                              //[31: 5]
    } BF;
    jl_uint32 val[LED_LED2_DISABLE_ENTRY_SIZE];
} LED_LED2_DISABLE_t;

#define LED_LED0_MODE                                                                          ((jl_uint32)0x00143418U)
#define LED_LED0_MODE_NUM                                                                      ((jl_uint32)0x00000001U)
#define LED_LED0_MODE_ENTRY_SIZE                                                                                    (1)
#define LED_LED0_MODE_OFFSET_RSVD0                                                                                 (10)
#define LED_LED0_MODE_OFFSET_RSVD0_WIDTH                                                                           (22)
#define LED_LED0_MODE_OFFSET_CFG_LED0_SRC_MASK                                                                      (0)
#define LED_LED0_MODE_OFFSET_CFG_LED0_SRC_MASK_WIDTH                                                               (10)
typedef union LED_LED0_MODE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led0_src_mask:LED_LED0_MODE_OFFSET_CFG_LED0_SRC_MASK_WIDTH;                                         //[ 9: 0]
        jl_uint32 rsvd0:LED_LED0_MODE_OFFSET_RSVD0_WIDTH;                                                                 //[31:10]
    } BF;
    jl_uint32 val[LED_LED0_MODE_ENTRY_SIZE];
} LED_LED0_MODE_t;

#define LED_LED1_MODE                                                                          ((jl_uint32)0x0014341CU)
#define LED_LED1_MODE_NUM                                                                      ((jl_uint32)0x00000001U)
#define LED_LED1_MODE_ENTRY_SIZE                                                                                    (1)
#define LED_LED1_MODE_OFFSET_RSVD0                                                                                 (10)
#define LED_LED1_MODE_OFFSET_RSVD0_WIDTH                                                                           (22)
#define LED_LED1_MODE_OFFSET_CFG_LED1_SRC_MASK                                                                      (0)
#define LED_LED1_MODE_OFFSET_CFG_LED1_SRC_MASK_WIDTH                                                               (10)
typedef union LED_LED1_MODE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led1_src_mask:LED_LED1_MODE_OFFSET_CFG_LED1_SRC_MASK_WIDTH;                                         //[ 9: 0]
        jl_uint32 rsvd0:LED_LED1_MODE_OFFSET_RSVD0_WIDTH;                                                                 //[31:10]
    } BF;
    jl_uint32 val[LED_LED1_MODE_ENTRY_SIZE];
} LED_LED1_MODE_t;

#define LED_LED2_MODE                                                                          ((jl_uint32)0x00143420U)
#define LED_LED2_MODE_NUM                                                                      ((jl_uint32)0x00000001U)
#define LED_LED2_MODE_ENTRY_SIZE                                                                                    (1)
#define LED_LED2_MODE_OFFSET_RSVD0                                                                                 (10)
#define LED_LED2_MODE_OFFSET_RSVD0_WIDTH                                                                           (22)
#define LED_LED2_MODE_OFFSET_CFG_LED2_SRC_MASK                                                                      (0)
#define LED_LED2_MODE_OFFSET_CFG_LED2_SRC_MASK_WIDTH                                                               (10)
typedef union LED_LED2_MODE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led2_src_mask:LED_LED2_MODE_OFFSET_CFG_LED2_SRC_MASK_WIDTH;                                         //[ 9: 0]
        jl_uint32 rsvd0:LED_LED2_MODE_OFFSET_RSVD0_WIDTH;                                                                 //[31:10]
    } BF;
    jl_uint32 val[LED_LED2_MODE_ENTRY_SIZE];
} LED_LED2_MODE_t;

#define LED_SERIAL_LED_POLARITY                                                                ((jl_uint32)0x00143424U)
#define LED_SERIAL_LED_POLARITY_NUM                                                            ((jl_uint32)0x00000001U)
#define LED_SERIAL_LED_POLARITY_ENTRY_SIZE                                                                          (1)
#define LED_SERIAL_LED_POLARITY_OFFSET_RSVD0                                                                        (1)
#define LED_SERIAL_LED_POLARITY_OFFSET_RSVD0_WIDTH                                                                 (31)
#define LED_SERIAL_LED_POLARITY_OFFSET_CFG_SERIAL_LED_POLARITY                                                      (0)
#define LED_SERIAL_LED_POLARITY_OFFSET_CFG_SERIAL_LED_POLARITY_WIDTH                                                (1)
typedef union LED_SERIAL_LED_POLARITY_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_serial_led_polarity:LED_SERIAL_LED_POLARITY_OFFSET_CFG_SERIAL_LED_POLARITY_WIDTH;                   //[ 0: 0]
        jl_uint32 rsvd0:LED_SERIAL_LED_POLARITY_OFFSET_RSVD0_WIDTH;                                                       //[31: 1]
    } BF;
    jl_uint32 val[LED_SERIAL_LED_POLARITY_ENTRY_SIZE];
} LED_SERIAL_LED_POLARITY_t;

#define LED_LED_INIT_TRIG                                                                      ((jl_uint32)0x00143428U)
#define LED_LED_INIT_TRIG_NUM                                                                  ((jl_uint32)0x00000001U)
#define LED_LED_INIT_TRIG_ENTRY_SIZE                                                                                (1)
#define LED_LED_INIT_TRIG_OFFSET_RSVD0                                                                              (1)
#define LED_LED_INIT_TRIG_OFFSET_RSVD0_WIDTH                                                                       (31)
#define LED_LED_INIT_TRIG_OFFSET_CFG_LED_INIT_TRIG                                                                  (0)
#define LED_LED_INIT_TRIG_OFFSET_CFG_LED_INIT_TRIG_WIDTH                                                            (1)
typedef union LED_LED_INIT_TRIG_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led_init_trig:LED_LED_INIT_TRIG_OFFSET_CFG_LED_INIT_TRIG_WIDTH;                                     //[ 0: 0]
        jl_uint32 rsvd0:LED_LED_INIT_TRIG_OFFSET_RSVD0_WIDTH;                                                             //[31: 1]
    } BF;
    jl_uint32 val[LED_LED_INIT_TRIG_ENTRY_SIZE];
} LED_LED_INIT_TRIG_t;

#define LED_PWR_LIGHT_EN                                                                       ((jl_uint32)0x0014342CU)
#define LED_PWR_LIGHT_EN_NUM                                                                   ((jl_uint32)0x00000001U)
#define LED_PWR_LIGHT_EN_ENTRY_SIZE                                                                                 (1)
#define LED_PWR_LIGHT_EN_OFFSET_RSVD0                                                                               (3)
#define LED_PWR_LIGHT_EN_OFFSET_RSVD0_WIDTH                                                                        (29)
#define LED_PWR_LIGHT_EN_OFFSET_CFG_LED2_PWRLIGHT_EN                                                                (0)
#define LED_PWR_LIGHT_EN_OFFSET_CFG_LED2_PWRLIGHT_EN_WIDTH                                                          (1)
#define LED_PWR_LIGHT_EN_OFFSET_CFG_LED1_PWRLIGHT_EN                                                                (1)
#define LED_PWR_LIGHT_EN_OFFSET_CFG_LED1_PWRLIGHT_EN_WIDTH                                                          (1)
#define LED_PWR_LIGHT_EN_OFFSET_CFG_LED0_PWRLIGHT_EN                                                                (2)
#define LED_PWR_LIGHT_EN_OFFSET_CFG_LED0_PWRLIGHT_EN_WIDTH                                                          (1)
typedef union LED_PWR_LIGHT_EN_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led2_pwrlight_en:LED_PWR_LIGHT_EN_OFFSET_CFG_LED2_PWRLIGHT_EN_WIDTH;                                //[ 0: 0]
        jl_uint32 cfg_led1_pwrlight_en:LED_PWR_LIGHT_EN_OFFSET_CFG_LED1_PWRLIGHT_EN_WIDTH;                                //[ 1: 1]
        jl_uint32 cfg_led0_pwrlight_en:LED_PWR_LIGHT_EN_OFFSET_CFG_LED0_PWRLIGHT_EN_WIDTH;                                //[ 2: 2]
        jl_uint32 rsvd0:LED_PWR_LIGHT_EN_OFFSET_RSVD0_WIDTH;                                                              //[31: 3]
    } BF;
    jl_uint32 val[LED_PWR_LIGHT_EN_ENTRY_SIZE];
} LED_PWR_LIGHT_EN_t;

#define LED_PWR_LIGHT_CTRL                                                                     ((jl_uint32)0x00143430U)
#define LED_PWR_LIGHT_CTRL_NUM                                                                 ((jl_uint32)0x00000001U)
#define LED_PWR_LIGHT_CTRL_ENTRY_SIZE                                                                               (1)
#define LED_PWR_LIGHT_CTRL_OFFSET_RSVD0                                                                            (20)
#define LED_PWR_LIGHT_CTRL_OFFSET_RSVD0_WIDTH                                                                      (12)
#define LED_PWR_LIGHT_CTRL_OFFSET_CFG_PWRLIGHT_OFF_TIME                                                             (0)
#define LED_PWR_LIGHT_CTRL_OFFSET_CFG_PWRLIGHT_OFF_TIME_WIDTH                                                       (8)
#define LED_PWR_LIGHT_CTRL_OFFSET_CFG_PWRLIGHT_ON_TIME                                                              (8)
#define LED_PWR_LIGHT_CTRL_OFFSET_CFG_PWRLIGHT_ON_TIME_WIDTH                                                        (8)
#define LED_PWR_LIGHT_CTRL_OFFSET_CFG_PWRLIGHT_TIMES                                                               (16)
#define LED_PWR_LIGHT_CTRL_OFFSET_CFG_PWRLIGHT_TIMES_WIDTH                                                          (4)
typedef union LED_PWR_LIGHT_CTRL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_pwrlight_off_time:LED_PWR_LIGHT_CTRL_OFFSET_CFG_PWRLIGHT_OFF_TIME_WIDTH;                            //[ 7: 0]
        jl_uint32 cfg_pwrlight_on_time:LED_PWR_LIGHT_CTRL_OFFSET_CFG_PWRLIGHT_ON_TIME_WIDTH;                              //[15: 8]
        jl_uint32 cfg_pwrlight_times:LED_PWR_LIGHT_CTRL_OFFSET_CFG_PWRLIGHT_TIMES_WIDTH;                                  //[19:16]
        jl_uint32 rsvd0:LED_PWR_LIGHT_CTRL_OFFSET_RSVD0_WIDTH;                                                            //[31:20]
    } BF;
    jl_uint32 val[LED_PWR_LIGHT_CTRL_ENTRY_SIZE];
} LED_PWR_LIGHT_CTRL_t;

#define LED_ENABLE_LED_TDR                                                                     ((jl_uint32)0x00143434U)
#define LED_ENABLE_LED_TDR_NUM                                                                 ((jl_uint32)0x00000001U)
#define LED_ENABLE_LED_TDR_ENTRY_SIZE                                                                               (1)
#define LED_ENABLE_LED_TDR_OFFSET_RSVD2                                                                            (17)
#define LED_ENABLE_LED_TDR_OFFSET_RSVD2_WIDTH                                                                      (15)
#define LED_ENABLE_LED_TDR_OFFSET_CFG_LED_TDR_ENABLE                                                                (0)
#define LED_ENABLE_LED_TDR_OFFSET_CFG_LED_TDR_ENABLE_WIDTH                                                          (5)
#define LED_ENABLE_LED_TDR_OFFSET_RSVD1                                                                             (5)
#define LED_ENABLE_LED_TDR_OFFSET_RSVD1_WIDTH                                                                       (3)
#define LED_ENABLE_LED_TDR_OFFSET_CFG_LED_TDR_FAKE_ENABLE                                                           (8)
#define LED_ENABLE_LED_TDR_OFFSET_CFG_LED_TDR_FAKE_ENABLE_WIDTH                                                     (5)
#define LED_ENABLE_LED_TDR_OFFSET_RSVD0                                                                            (13)
#define LED_ENABLE_LED_TDR_OFFSET_RSVD0_WIDTH                                                                       (3)
#define LED_ENABLE_LED_TDR_OFFSET_CFG_TDR_SCAN_ENABLE                                                              (16)
#define LED_ENABLE_LED_TDR_OFFSET_CFG_TDR_SCAN_ENABLE_WIDTH                                                         (1)
typedef union LED_ENABLE_LED_TDR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led_tdr_enable:LED_ENABLE_LED_TDR_OFFSET_CFG_LED_TDR_ENABLE_WIDTH;                                  //[ 4: 0]
        jl_uint32 rsvd1:LED_ENABLE_LED_TDR_OFFSET_RSVD1_WIDTH;                                                            //[ 7: 5]
        jl_uint32 cfg_led_tdr_fake_enable:LED_ENABLE_LED_TDR_OFFSET_CFG_LED_TDR_FAKE_ENABLE_WIDTH;                        //[12: 8]
        jl_uint32 rsvd0:LED_ENABLE_LED_TDR_OFFSET_RSVD0_WIDTH;                                                            //[15:13]
        jl_uint32 cfg_tdr_scan_enable:LED_ENABLE_LED_TDR_OFFSET_CFG_TDR_SCAN_ENABLE_WIDTH;                                //[16:16]
        jl_uint32 rsvd2:LED_ENABLE_LED_TDR_OFFSET_RSVD2_WIDTH;                                                            //[31:17]
    } BF;
    jl_uint32 val[LED_ENABLE_LED_TDR_ENTRY_SIZE];
} LED_ENABLE_LED_TDR_t;

#define LED_TDR_TEST_TIME                                                                      ((jl_uint32)0x00143438U)
#define LED_TDR_TEST_TIME_NUM                                                                  ((jl_uint32)0x00000001U)
#define LED_TDR_TEST_TIME_ENTRY_SIZE                                                                                (1)
#define LED_TDR_TEST_TIME_OFFSET_RSVD0                                                                             (11)
#define LED_TDR_TEST_TIME_OFFSET_RSVD0_WIDTH                                                                       (21)
#define LED_TDR_TEST_TIME_OFFSET_CFG_TDR_TESTING_TIME                                                               (0)
#define LED_TDR_TEST_TIME_OFFSET_CFG_TDR_TESTING_TIME_WIDTH                                                        (11)
typedef union LED_TDR_TEST_TIME_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_tdr_testing_time:LED_TDR_TEST_TIME_OFFSET_CFG_TDR_TESTING_TIME_WIDTH;                               //[10: 0]
        jl_uint32 rsvd0:LED_TDR_TEST_TIME_OFFSET_RSVD0_WIDTH;                                                             //[31:11]
    } BF;
    jl_uint32 val[LED_TDR_TEST_TIME_ENTRY_SIZE];
} LED_TDR_TEST_TIME_t;

#define LED_TDR_RESULT_TIME                                                                    ((jl_uint32)0x0014343CU)
#define LED_TDR_RESULT_TIME_NUM                                                                ((jl_uint32)0x00000001U)
#define LED_TDR_RESULT_TIME_ENTRY_SIZE                                                                              (1)
#define LED_TDR_RESULT_TIME_OFFSET_RSVD0                                                                           (11)
#define LED_TDR_RESULT_TIME_OFFSET_RSVD0_WIDTH                                                                     (21)
#define LED_TDR_RESULT_TIME_OFFSET_CFG_TDR_RESULT_TIME                                                              (0)
#define LED_TDR_RESULT_TIME_OFFSET_CFG_TDR_RESULT_TIME_WIDTH                                                       (11)
typedef union LED_TDR_RESULT_TIME_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_tdr_result_time:LED_TDR_RESULT_TIME_OFFSET_CFG_TDR_RESULT_TIME_WIDTH;                               //[10: 0]
        jl_uint32 rsvd0:LED_TDR_RESULT_TIME_OFFSET_RSVD0_WIDTH;                                                           //[31:11]
    } BF;
    jl_uint32 val[LED_TDR_RESULT_TIME_ENTRY_SIZE];
} LED_TDR_RESULT_TIME_t;

#define LED_TDR_END_TIME                                                                       ((jl_uint32)0x00143440U)
#define LED_TDR_END_TIME_NUM                                                                   ((jl_uint32)0x00000001U)
#define LED_TDR_END_TIME_ENTRY_SIZE                                                                                 (1)
#define LED_TDR_END_TIME_OFFSET_RSVD0                                                                              (11)
#define LED_TDR_END_TIME_OFFSET_RSVD0_WIDTH                                                                        (21)
#define LED_TDR_END_TIME_OFFSET_CFG_TDR_END_TIME                                                                    (0)
#define LED_TDR_END_TIME_OFFSET_CFG_TDR_END_TIME_WIDTH                                                             (11)
typedef union LED_TDR_END_TIME_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_tdr_end_time:LED_TDR_END_TIME_OFFSET_CFG_TDR_END_TIME_WIDTH;                                        //[10: 0]
        jl_uint32 rsvd0:LED_TDR_END_TIME_OFFSET_RSVD0_WIDTH;                                                              //[31:11]
    } BF;
    jl_uint32 val[LED_TDR_END_TIME_ENTRY_SIZE];
} LED_TDR_END_TIME_t;

#define LED_LED_TDR_FORMAT                                                                     ((jl_uint32)0x00143444U)
#define LED_LED_TDR_FORMAT_NUM                                                                 ((jl_uint32)0x00000001U)
#define LED_LED_TDR_FORMAT_ENTRY_SIZE                                                                               (1)
#define LED_LED_TDR_FORMAT_OFFSET_RSVD0                                                                             (2)
#define LED_LED_TDR_FORMAT_OFFSET_RSVD0_WIDTH                                                                      (30)
#define LED_LED_TDR_FORMAT_OFFSET_CFG_RESULT_LED_FORMAT                                                             (0)
#define LED_LED_TDR_FORMAT_OFFSET_CFG_RESULT_LED_FORMAT_WIDTH                                                       (1)
#define LED_LED_TDR_FORMAT_OFFSET_CFG_TESTING_LED_FORMAT                                                            (1)
#define LED_LED_TDR_FORMAT_OFFSET_CFG_TESTING_LED_FORMAT_WIDTH                                                      (1)
typedef union LED_LED_TDR_FORMAT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_result_led_format:LED_LED_TDR_FORMAT_OFFSET_CFG_RESULT_LED_FORMAT_WIDTH;                            //[ 0: 0]
        jl_uint32 cfg_testing_led_format:LED_LED_TDR_FORMAT_OFFSET_CFG_TESTING_LED_FORMAT_WIDTH;                          //[ 1: 1]
        jl_uint32 rsvd0:LED_LED_TDR_FORMAT_OFFSET_RSVD0_WIDTH;                                                            //[31: 2]
    } BF;
    jl_uint32 val[LED_LED_TDR_FORMAT_ENTRY_SIZE];
} LED_LED_TDR_FORMAT_t;

#define LED_LED_TDR_MODE                                                                       ((jl_uint32)0x00143448U)
#define LED_LED_TDR_MODE_NUM                                                                   ((jl_uint32)0x00000001U)
#define LED_LED_TDR_MODE_ENTRY_SIZE                                                                                 (1)
#define LED_LED_TDR_MODE_OFFSET_RSVD0                                                                              (12)
#define LED_LED_TDR_MODE_OFFSET_RSVD0_WIDTH                                                                        (20)
#define LED_LED_TDR_MODE_OFFSET_CFG_LED0_TDR_MODE                                                                   (0)
#define LED_LED_TDR_MODE_OFFSET_CFG_LED0_TDR_MODE_WIDTH                                                             (4)
#define LED_LED_TDR_MODE_OFFSET_CFG_LED1_TDR_MODE                                                                   (4)
#define LED_LED_TDR_MODE_OFFSET_CFG_LED1_TDR_MODE_WIDTH                                                             (4)
#define LED_LED_TDR_MODE_OFFSET_CFG_LED2_TDR_MODE                                                                   (8)
#define LED_LED_TDR_MODE_OFFSET_CFG_LED2_TDR_MODE_WIDTH                                                             (4)
typedef union LED_LED_TDR_MODE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led0_tdr_mode:LED_LED_TDR_MODE_OFFSET_CFG_LED0_TDR_MODE_WIDTH;                                      //[ 3: 0]
        jl_uint32 cfg_led1_tdr_mode:LED_LED_TDR_MODE_OFFSET_CFG_LED1_TDR_MODE_WIDTH;                                      //[ 7: 4]
        jl_uint32 cfg_led2_tdr_mode:LED_LED_TDR_MODE_OFFSET_CFG_LED2_TDR_MODE_WIDTH;                                      //[11: 8]
        jl_uint32 rsvd0:LED_LED_TDR_MODE_OFFSET_RSVD0_WIDTH;                                                              //[31:12]
    } BF;
    jl_uint32 val[LED_LED_TDR_MODE_ENTRY_SIZE];
} LED_LED_TDR_MODE_t;

#define LED_LED_TDR_STATUS                                                                     ((jl_uint32)0x0014344CU)
#define LED_LED_TDR_STATUS_NUM                                                                 ((jl_uint32)0x00000001U)
#define LED_LED_TDR_STATUS_ENTRY_SIZE                                                                               (1)
#define LED_LED_TDR_STATUS_OFFSET_RSVD0                                                                             (1)
#define LED_LED_TDR_STATUS_OFFSET_RSVD0_WIDTH                                                                      (31)
#define LED_LED_TDR_STATUS_OFFSET_STAT_TDR_BUSY                                                                     (0)
#define LED_LED_TDR_STATUS_OFFSET_STAT_TDR_BUSY_WIDTH                                                               (1)
typedef union LED_LED_TDR_STATUS_u {
    struct __attribute__ ((packed)) {
        jl_uint32 stat_tdr_busy:LED_LED_TDR_STATUS_OFFSET_STAT_TDR_BUSY_WIDTH;                                            //[ 0: 0]
        jl_uint32 rsvd0:LED_LED_TDR_STATUS_OFFSET_RSVD0_WIDTH;                                                            //[31: 1]
    } BF;
    jl_uint32 val[LED_LED_TDR_STATUS_ENTRY_SIZE];
} LED_LED_TDR_STATUS_t;

#define LED_LOOP_STATUS                                                                        ((jl_uint32)0x00143450U)
#define LED_LOOP_STATUS_NUM                                                                    ((jl_uint32)0x00000001U)
#define LED_LOOP_STATUS_ENTRY_SIZE                                                                                  (1)
#define LED_LOOP_STATUS_OFFSET_RSVD0                                                                                (5)
#define LED_LOOP_STATUS_OFFSET_RSVD0_WIDTH                                                                         (27)
#define LED_LOOP_STATUS_OFFSET_STAT_PORT0_LOOP                                                                      (0)
#define LED_LOOP_STATUS_OFFSET_STAT_PORT0_LOOP_WIDTH                                                                (1)
#define LED_LOOP_STATUS_OFFSET_STAT_PORT1_LOOP                                                                      (1)
#define LED_LOOP_STATUS_OFFSET_STAT_PORT1_LOOP_WIDTH                                                                (1)
#define LED_LOOP_STATUS_OFFSET_STAT_PORT2_LOOP                                                                      (2)
#define LED_LOOP_STATUS_OFFSET_STAT_PORT2_LOOP_WIDTH                                                                (1)
#define LED_LOOP_STATUS_OFFSET_STAT_PORT3_LOOP                                                                      (3)
#define LED_LOOP_STATUS_OFFSET_STAT_PORT3_LOOP_WIDTH                                                                (1)
#define LED_LOOP_STATUS_OFFSET_STAT_PORT4_LOOP                                                                      (4)
#define LED_LOOP_STATUS_OFFSET_STAT_PORT4_LOOP_WIDTH                                                                (1)
typedef union LED_LOOP_STATUS_u {
    struct __attribute__ ((packed)) {
        jl_uint32 stat_port0_loop:LED_LOOP_STATUS_OFFSET_STAT_PORT0_LOOP_WIDTH;                                           //[ 0: 0]
        jl_uint32 stat_port1_loop:LED_LOOP_STATUS_OFFSET_STAT_PORT1_LOOP_WIDTH;                                           //[ 1: 1]
        jl_uint32 stat_port2_loop:LED_LOOP_STATUS_OFFSET_STAT_PORT2_LOOP_WIDTH;                                           //[ 2: 2]
        jl_uint32 stat_port3_loop:LED_LOOP_STATUS_OFFSET_STAT_PORT3_LOOP_WIDTH;                                           //[ 3: 3]
        jl_uint32 stat_port4_loop:LED_LOOP_STATUS_OFFSET_STAT_PORT4_LOOP_WIDTH;                                           //[ 4: 4]
        jl_uint32 rsvd0:LED_LOOP_STATUS_OFFSET_RSVD0_WIDTH;                                                               //[31: 5]
    } BF;
    jl_uint32 val[LED_LOOP_STATUS_ENTRY_SIZE];
} LED_LOOP_STATUS_t;

#define LED_PLED0_POLARITY                                                                     ((jl_uint32)0x00143454U)
#define LED_PLED0_POLARITY_NUM                                                                 ((jl_uint32)0x00000001U)
#define LED_PLED0_POLARITY_ENTRY_SIZE                                                                               (1)
#define LED_PLED0_POLARITY_OFFSET_RSVD0                                                                             (5)
#define LED_PLED0_POLARITY_OFFSET_RSVD0_WIDTH                                                                      (27)
#define LED_PLED0_POLARITY_OFFSET_DBG_PLED0_POLARITY                                                                (0)
#define LED_PLED0_POLARITY_OFFSET_DBG_PLED0_POLARITY_WIDTH                                                          (5)
typedef union LED_PLED0_POLARITY_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_pled0_polarity:LED_PLED0_POLARITY_OFFSET_DBG_PLED0_POLARITY_WIDTH;                                  //[ 4: 0]
        jl_uint32 rsvd0:LED_PLED0_POLARITY_OFFSET_RSVD0_WIDTH;                                                            //[31: 5]
    } BF;
    jl_uint32 val[LED_PLED0_POLARITY_ENTRY_SIZE];
} LED_PLED0_POLARITY_t;

#define LED_PLED1_POLARITY                                                                     ((jl_uint32)0x00143458U)
#define LED_PLED1_POLARITY_NUM                                                                 ((jl_uint32)0x00000001U)
#define LED_PLED1_POLARITY_ENTRY_SIZE                                                                               (1)
#define LED_PLED1_POLARITY_OFFSET_RSVD0                                                                             (5)
#define LED_PLED1_POLARITY_OFFSET_RSVD0_WIDTH                                                                      (27)
#define LED_PLED1_POLARITY_OFFSET_DBG_PLED1_POLARITY                                                                (0)
#define LED_PLED1_POLARITY_OFFSET_DBG_PLED1_POLARITY_WIDTH                                                          (5)
typedef union LED_PLED1_POLARITY_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_pled1_polarity:LED_PLED1_POLARITY_OFFSET_DBG_PLED1_POLARITY_WIDTH;                                  //[ 4: 0]
        jl_uint32 rsvd0:LED_PLED1_POLARITY_OFFSET_RSVD0_WIDTH;                                                            //[31: 5]
    } BF;
    jl_uint32 val[LED_PLED1_POLARITY_ENTRY_SIZE];
} LED_PLED1_POLARITY_t;

#define LED_PLED2_POLARITY                                                                     ((jl_uint32)0x0014345CU)
#define LED_PLED2_POLARITY_NUM                                                                 ((jl_uint32)0x00000001U)
#define LED_PLED2_POLARITY_ENTRY_SIZE                                                                               (1)
#define LED_PLED2_POLARITY_OFFSET_RSVD0                                                                             (5)
#define LED_PLED2_POLARITY_OFFSET_RSVD0_WIDTH                                                                      (27)
#define LED_PLED2_POLARITY_OFFSET_DBG_PLED2_POLARITY                                                                (0)
#define LED_PLED2_POLARITY_OFFSET_DBG_PLED2_POLARITY_WIDTH                                                          (5)
typedef union LED_PLED2_POLARITY_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_pled2_polarity:LED_PLED2_POLARITY_OFFSET_DBG_PLED2_POLARITY_WIDTH;                                  //[ 4: 0]
        jl_uint32 rsvd0:LED_PLED2_POLARITY_OFFSET_RSVD0_WIDTH;                                                            //[31: 5]
    } BF;
    jl_uint32 val[LED_PLED2_POLARITY_ENTRY_SIZE];
} LED_PLED2_POLARITY_t;

#define LED_PHY_TDR_STATUS                                                                     ((jl_uint32)0x00143460U)
#define LED_PHY_TDR_STATUS_NUM                                                                 ((jl_uint32)0x00000001U)
#define LED_PHY_TDR_STATUS_ENTRY_SIZE                                                                               (1)
#define LED_PHY_TDR_STATUS_OFFSET_RSVD0                                                                             (5)
#define LED_PHY_TDR_STATUS_OFFSET_RSVD0_WIDTH                                                                      (27)
#define LED_PHY_TDR_STATUS_OFFSET_STAT_TDR_DONE                                                                     (0)
#define LED_PHY_TDR_STATUS_OFFSET_STAT_TDR_DONE_WIDTH                                                               (5)
typedef union LED_PHY_TDR_STATUS_u {
    struct __attribute__ ((packed)) {
        jl_uint32 stat_tdr_done:LED_PHY_TDR_STATUS_OFFSET_STAT_TDR_DONE_WIDTH;                                            //[ 4: 0]
        jl_uint32 rsvd0:LED_PHY_TDR_STATUS_OFFSET_RSVD0_WIDTH;                                                            //[31: 5]
    } BF;
    jl_uint32 val[LED_PHY_TDR_STATUS_ENTRY_SIZE];
} LED_PHY_TDR_STATUS_t;

#define LED_LED_REMAP_0                                                                        ((jl_uint32)0x00143464U)
#define LED_LED_REMAP_0_NUM                                                                    ((jl_uint32)0x00000001U)
#define LED_LED_REMAP_0_ENTRY_SIZE                                                                                  (1)
#define LED_LED_REMAP_0_OFFSET_CFG_PAD_P2LED0_SEL                                                                   (0)
#define LED_LED_REMAP_0_OFFSET_CFG_PAD_P2LED0_SEL_WIDTH                                                             (4)
#define LED_LED_REMAP_0_OFFSET_CFG_PAD_P2LED2_SEL                                                                   (4)
#define LED_LED_REMAP_0_OFFSET_CFG_PAD_P2LED2_SEL_WIDTH                                                             (4)
#define LED_LED_REMAP_0_OFFSET_CFG_PAD_P3LED0_SEL                                                                   (8)
#define LED_LED_REMAP_0_OFFSET_CFG_PAD_P3LED0_SEL_WIDTH                                                             (4)
#define LED_LED_REMAP_0_OFFSET_CFG_PAD_P3LED2_SEL                                                                  (12)
#define LED_LED_REMAP_0_OFFSET_CFG_PAD_P3LED2_SEL_WIDTH                                                             (4)
#define LED_LED_REMAP_0_OFFSET_CFG_PAD_P3LED1_SEL                                                                  (16)
#define LED_LED_REMAP_0_OFFSET_CFG_PAD_P3LED1_SEL_WIDTH                                                             (4)
#define LED_LED_REMAP_0_OFFSET_CFG_PAD_P4LED1_SEL                                                                  (20)
#define LED_LED_REMAP_0_OFFSET_CFG_PAD_P4LED1_SEL_WIDTH                                                             (4)
#define LED_LED_REMAP_0_OFFSET_CFG_PAD_P4LED0_SEL                                                                  (24)
#define LED_LED_REMAP_0_OFFSET_CFG_PAD_P4LED0_SEL_WIDTH                                                             (4)
#define LED_LED_REMAP_0_OFFSET_CFG_PAD_P4LED2_SEL                                                                  (28)
#define LED_LED_REMAP_0_OFFSET_CFG_PAD_P4LED2_SEL_WIDTH                                                             (4)
typedef union LED_LED_REMAP_0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_pad_p2led0_sel:LED_LED_REMAP_0_OFFSET_CFG_PAD_P2LED0_SEL_WIDTH;                                     //[ 3: 0]
        jl_uint32 cfg_pad_p2led2_sel:LED_LED_REMAP_0_OFFSET_CFG_PAD_P2LED2_SEL_WIDTH;                                     //[ 7: 4]
        jl_uint32 cfg_pad_p3led0_sel:LED_LED_REMAP_0_OFFSET_CFG_PAD_P3LED0_SEL_WIDTH;                                     //[11: 8]
        jl_uint32 cfg_pad_p3led2_sel:LED_LED_REMAP_0_OFFSET_CFG_PAD_P3LED2_SEL_WIDTH;                                     //[15:12]
        jl_uint32 cfg_pad_p3led1_sel:LED_LED_REMAP_0_OFFSET_CFG_PAD_P3LED1_SEL_WIDTH;                                     //[19:16]
        jl_uint32 cfg_pad_p4led1_sel:LED_LED_REMAP_0_OFFSET_CFG_PAD_P4LED1_SEL_WIDTH;                                     //[23:20]
        jl_uint32 cfg_pad_p4led0_sel:LED_LED_REMAP_0_OFFSET_CFG_PAD_P4LED0_SEL_WIDTH;                                     //[27:24]
        jl_uint32 cfg_pad_p4led2_sel:LED_LED_REMAP_0_OFFSET_CFG_PAD_P4LED2_SEL_WIDTH;                                     //[31:28]
    } BF;
    jl_uint32 val[LED_LED_REMAP_0_ENTRY_SIZE];
} LED_LED_REMAP_0_t;

#define LED_LED_REMAP_1                                                                        ((jl_uint32)0x00143468U)
#define LED_LED_REMAP_1_NUM                                                                    ((jl_uint32)0x00000001U)
#define LED_LED_REMAP_1_ENTRY_SIZE                                                                                  (1)
#define LED_LED_REMAP_1_OFFSET_RSVD0                                                                               (28)
#define LED_LED_REMAP_1_OFFSET_RSVD0_WIDTH                                                                          (4)
#define LED_LED_REMAP_1_OFFSET_CFG_PAD_P0LED0_SEL                                                                   (0)
#define LED_LED_REMAP_1_OFFSET_CFG_PAD_P0LED0_SEL_WIDTH                                                             (4)
#define LED_LED_REMAP_1_OFFSET_CFG_PAD_P0LED1_SEL                                                                   (4)
#define LED_LED_REMAP_1_OFFSET_CFG_PAD_P0LED1_SEL_WIDTH                                                             (4)
#define LED_LED_REMAP_1_OFFSET_CFG_PAD_P0LED2_SEL                                                                   (8)
#define LED_LED_REMAP_1_OFFSET_CFG_PAD_P0LED2_SEL_WIDTH                                                             (4)
#define LED_LED_REMAP_1_OFFSET_CFG_PAD_P1LED1_SEL                                                                  (12)
#define LED_LED_REMAP_1_OFFSET_CFG_PAD_P1LED1_SEL_WIDTH                                                             (4)
#define LED_LED_REMAP_1_OFFSET_CFG_PAD_P1LED0_SEL                                                                  (16)
#define LED_LED_REMAP_1_OFFSET_CFG_PAD_P1LED0_SEL_WIDTH                                                             (4)
#define LED_LED_REMAP_1_OFFSET_CFG_PAD_P1LED2_SEL                                                                  (20)
#define LED_LED_REMAP_1_OFFSET_CFG_PAD_P1LED2_SEL_WIDTH                                                             (4)
#define LED_LED_REMAP_1_OFFSET_CFG_PAD_P2LED1_SEL                                                                  (24)
#define LED_LED_REMAP_1_OFFSET_CFG_PAD_P2LED1_SEL_WIDTH                                                             (4)
typedef union LED_LED_REMAP_1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_pad_p0led0_sel:LED_LED_REMAP_1_OFFSET_CFG_PAD_P0LED0_SEL_WIDTH;                                     //[ 3: 0]
        jl_uint32 cfg_pad_p0led1_sel:LED_LED_REMAP_1_OFFSET_CFG_PAD_P0LED1_SEL_WIDTH;                                     //[ 7: 4]
        jl_uint32 cfg_pad_p0led2_sel:LED_LED_REMAP_1_OFFSET_CFG_PAD_P0LED2_SEL_WIDTH;                                     //[11: 8]
        jl_uint32 cfg_pad_p1led1_sel:LED_LED_REMAP_1_OFFSET_CFG_PAD_P1LED1_SEL_WIDTH;                                     //[15:12]
        jl_uint32 cfg_pad_p1led0_sel:LED_LED_REMAP_1_OFFSET_CFG_PAD_P1LED0_SEL_WIDTH;                                     //[19:16]
        jl_uint32 cfg_pad_p1led2_sel:LED_LED_REMAP_1_OFFSET_CFG_PAD_P1LED2_SEL_WIDTH;                                     //[23:20]
        jl_uint32 cfg_pad_p2led1_sel:LED_LED_REMAP_1_OFFSET_CFG_PAD_P2LED1_SEL_WIDTH;                                     //[27:24]
        jl_uint32 rsvd0:LED_LED_REMAP_1_OFFSET_RSVD0_WIDTH;                                                               //[31:28]
    } BF;
    jl_uint32 val[LED_LED_REMAP_1_ENTRY_SIZE];
} LED_LED_REMAP_1_t;

#endif /* __JL_REG_LED_H__ */

