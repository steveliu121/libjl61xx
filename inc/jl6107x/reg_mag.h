//reg_mag.h
/*
* Automatically generated by gen_c_api.py, don't edit it
*/
#ifndef __JL_REG_MAG_H__
#define __JL_REG_MAG_H__

#include <jl_types.h>

#define MAG_BASE                                                                               ((jl_uint32)0x00143000U)
#define MAG_BLOCK_SIZE                                                                         ((jl_uint32)0x00000400U)

#define MAG_MAG_INT                                                                            ((jl_uint32)0x00143000U)
#define MAG_MAG_INT_NUM                                                                        ((jl_uint32)0x00000001U)
#define MAG_MAG_INT_ENTRY_SIZE                                                                                      (1)
#define MAG_MAG_INT_OFFSET_RSVD0                                                                                   (11)
#define MAG_MAG_INT_OFFSET_RSVD0_WIDTH                                                                             (21)
#define MAG_MAG_INT_OFFSET_INT_ETHMAC                                                                               (0)
#define MAG_MAG_INT_OFFSET_INT_ETHMAC_WIDTH                                                                        (11)
typedef union MAG_MAG_INT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 int_ethmac:MAG_MAG_INT_OFFSET_INT_ETHMAC_WIDTH;                                                         //[10: 0]
        jl_uint32 rsvd0:MAG_MAG_INT_OFFSET_RSVD0_WIDTH;                                                                   //[31:11]
    } BF;
    jl_uint32 val[MAG_MAG_INT_ENTRY_SIZE];
} MAG_MAG_INT_t;

#define MAG_MAG_SCRATCH_REG                                                                    ((jl_uint32)0x00143004U)
#define MAG_MAG_SCRATCH_REG_NUM                                                                ((jl_uint32)0x00000001U)
#define MAG_MAG_SCRATCH_REG_ENTRY_SIZE                                                                              (1)
#define MAG_MAG_SCRATCH_REG_OFFSET_SCRATCH                                                                          (0)
#define MAG_MAG_SCRATCH_REG_OFFSET_SCRATCH_WIDTH                                                                   (32)
typedef union MAG_MAG_SCRATCH_REG_u {
    struct __attribute__ ((packed)) {
        jl_uint32 scratch:MAG_MAG_SCRATCH_REG_OFFSET_SCRATCH_WIDTH;                                                       //[31: 0]
    } BF;
    jl_uint32 val[MAG_MAG_SCRATCH_REG_ENTRY_SIZE];
} MAG_MAG_SCRATCH_REG_t;

#define MAG_LOOP_DETECT_CONTROL                                                                ((jl_uint32)0x00143008U)
#define MAG_LOOP_DETECT_CONTROL_NUM                                                            ((jl_uint32)0x00000001U)
#define MAG_LOOP_DETECT_CONTROL_ENTRY_SIZE                                                                          (1)
#define MAG_LOOP_DETECT_CONTROL_OFFSET_RSVD1                                                                       (13)
#define MAG_LOOP_DETECT_CONTROL_OFFSET_RSVD1_WIDTH                                                                 (19)
#define MAG_LOOP_DETECT_CONTROL_OFFSET_CFG_LP_DETECT_EN                                                             (0)
#define MAG_LOOP_DETECT_CONTROL_OFFSET_CFG_LP_DETECT_EN_WIDTH                                                      (11)
#define MAG_LOOP_DETECT_CONTROL_OFFSET_RSVD0                                                                       (11)
#define MAG_LOOP_DETECT_CONTROL_OFFSET_RSVD0_WIDTH                                                                  (1)
#define MAG_LOOP_DETECT_CONTROL_OFFSET_CFG_LP_DETECT_CHK                                                           (12)
#define MAG_LOOP_DETECT_CONTROL_OFFSET_CFG_LP_DETECT_CHK_WIDTH                                                      (1)
typedef union MAG_LOOP_DETECT_CONTROL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_lp_detect_en:MAG_LOOP_DETECT_CONTROL_OFFSET_CFG_LP_DETECT_EN_WIDTH;                                 //[10: 0]
        jl_uint32 rsvd0:MAG_LOOP_DETECT_CONTROL_OFFSET_RSVD0_WIDTH;                                                       //[11:11]
        jl_uint32 cfg_lp_detect_chk:MAG_LOOP_DETECT_CONTROL_OFFSET_CFG_LP_DETECT_CHK_WIDTH;                               //[12:12]
        jl_uint32 rsvd1:MAG_LOOP_DETECT_CONTROL_OFFSET_RSVD1_WIDTH;                                                       //[31:13]
    } BF;
    jl_uint32 val[MAG_LOOP_DETECT_CONTROL_ENTRY_SIZE];
} MAG_LOOP_DETECT_CONTROL_t;

#define MAG_LOOP_DETECT_STATUS                                                                 ((jl_uint32)0x0014300CU)
#define MAG_LOOP_DETECT_STATUS_NUM                                                             ((jl_uint32)0x00000001U)
#define MAG_LOOP_DETECT_STATUS_ENTRY_SIZE                                                                           (1)
#define MAG_LOOP_DETECT_STATUS_OFFSET_RSVD0                                                                        (11)
#define MAG_LOOP_DETECT_STATUS_OFFSET_RSVD0_WIDTH                                                                  (21)
#define MAG_LOOP_DETECT_STATUS_OFFSET_LP_DETECT_STA                                                                 (0)
#define MAG_LOOP_DETECT_STATUS_OFFSET_LP_DETECT_STA_WIDTH                                                          (11)
typedef union MAG_LOOP_DETECT_STATUS_u {
    struct __attribute__ ((packed)) {
        jl_uint32 lp_detect_sta:MAG_LOOP_DETECT_STATUS_OFFSET_LP_DETECT_STA_WIDTH;                                        //[10: 0]
        jl_uint32 rsvd0:MAG_LOOP_DETECT_STATUS_OFFSET_RSVD0_WIDTH;                                                        //[31:11]
    } BF;
    jl_uint32 val[MAG_LOOP_DETECT_STATUS_ENTRY_SIZE];
} MAG_LOOP_DETECT_STATUS_t;

#define MAG_LOOP_DETECT_HISTORY                                                                ((jl_uint32)0x00143010U)
#define MAG_LOOP_DETECT_HISTORY_NUM                                                            ((jl_uint32)0x00000001U)
#define MAG_LOOP_DETECT_HISTORY_ENTRY_SIZE                                                                          (1)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_RSVD0                                                                       (11)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_RSVD0_WIDTH                                                                 (21)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_0                                                             (0)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_0_WIDTH                                                       (1)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_1                                                             (1)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_1_WIDTH                                                       (1)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_2                                                             (2)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_2_WIDTH                                                       (1)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_3                                                             (3)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_3_WIDTH                                                       (1)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_4                                                             (4)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_4_WIDTH                                                       (1)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_5                                                             (5)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_5_WIDTH                                                       (1)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_6                                                             (6)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_6_WIDTH                                                       (1)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_7                                                             (7)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_7_WIDTH                                                       (1)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_8                                                             (8)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_8_WIDTH                                                       (1)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_9                                                             (9)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_9_WIDTH                                                       (1)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_10                                                           (10)
#define MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_10_WIDTH                                                      (1)
typedef union MAG_LOOP_DETECT_HISTORY_u {
    struct __attribute__ ((packed)) {
        jl_uint32 diag_lp_detect_0:MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_0_WIDTH;                                 //[ 0: 0]
        jl_uint32 diag_lp_detect_1:MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_1_WIDTH;                                 //[ 1: 1]
        jl_uint32 diag_lp_detect_2:MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_2_WIDTH;                                 //[ 2: 2]
        jl_uint32 diag_lp_detect_3:MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_3_WIDTH;                                 //[ 3: 3]
        jl_uint32 diag_lp_detect_4:MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_4_WIDTH;                                 //[ 4: 4]
        jl_uint32 diag_lp_detect_5:MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_5_WIDTH;                                 //[ 5: 5]
        jl_uint32 diag_lp_detect_6:MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_6_WIDTH;                                 //[ 6: 6]
        jl_uint32 diag_lp_detect_7:MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_7_WIDTH;                                 //[ 7: 7]
        jl_uint32 diag_lp_detect_8:MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_8_WIDTH;                                 //[ 8: 8]
        jl_uint32 diag_lp_detect_9:MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_9_WIDTH;                                 //[ 9: 9]
        jl_uint32 diag_lp_detect_10:MAG_LOOP_DETECT_HISTORY_OFFSET_DIAG_LP_DETECT_10_WIDTH;                               //[10:10]
        jl_uint32 rsvd0:MAG_LOOP_DETECT_HISTORY_OFFSET_RSVD0_WIDTH;                                                       //[31:11]
    } BF;
    jl_uint32 val[MAG_LOOP_DETECT_HISTORY_ENTRY_SIZE];
} MAG_LOOP_DETECT_HISTORY_t;

#define MAG_SMUX_SELECT                                                                        ((jl_uint32)0x00143014U)
#define MAG_SMUX_SELECT_NUM                                                                    ((jl_uint32)0x00000001U)
#define MAG_SMUX_SELECT_ENTRY_SIZE                                                                                  (1)
#define MAG_SMUX_SELECT_OFFSET_RSVD0                                                                                (2)
#define MAG_SMUX_SELECT_OFFSET_RSVD0_WIDTH                                                                         (30)
#define MAG_SMUX_SELECT_OFFSET_CFG_SMUX_SEL                                                                         (0)
#define MAG_SMUX_SELECT_OFFSET_CFG_SMUX_SEL_WIDTH                                                                   (2)
typedef union MAG_SMUX_SELECT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_smux_sel:MAG_SMUX_SELECT_OFFSET_CFG_SMUX_SEL_WIDTH;                                                 //[ 1: 0]
        jl_uint32 rsvd0:MAG_SMUX_SELECT_OFFSET_RSVD0_WIDTH;                                                               //[31: 2]
    } BF;
    jl_uint32 val[MAG_SMUX_SELECT_ENTRY_SIZE];
} MAG_SMUX_SELECT_t;

#define MAG_LOOP_INSERT_ENABLE                                                                 ((jl_uint32)0x00143018U)
#define MAG_LOOP_INSERT_ENABLE_NUM                                                             ((jl_uint32)0x00000001U)
#define MAG_LOOP_INSERT_ENABLE_ENTRY_SIZE                                                                           (1)
#define MAG_LOOP_INSERT_ENABLE_OFFSET_RSVD0                                                                         (1)
#define MAG_LOOP_INSERT_ENABLE_OFFSET_RSVD0_WIDTH                                                                  (31)
#define MAG_LOOP_INSERT_ENABLE_OFFSET_CFG_LP_INSERT_EN                                                              (0)
#define MAG_LOOP_INSERT_ENABLE_OFFSET_CFG_LP_INSERT_EN_WIDTH                                                        (1)
typedef union MAG_LOOP_INSERT_ENABLE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_lp_insert_en:MAG_LOOP_INSERT_ENABLE_OFFSET_CFG_LP_INSERT_EN_WIDTH;                                  //[ 0: 0]
        jl_uint32 rsvd0:MAG_LOOP_INSERT_ENABLE_OFFSET_RSVD0_WIDTH;                                                        //[31: 1]
    } BF;
    jl_uint32 val[MAG_LOOP_INSERT_ENABLE_ENTRY_SIZE];
} MAG_LOOP_INSERT_ENABLE_t;

#define MAG_LOOP_INSERT_TIMESCALE                                                              ((jl_uint32)0x0014301CU)
#define MAG_LOOP_INSERT_TIMESCALE_NUM                                                          ((jl_uint32)0x00000001U)
#define MAG_LOOP_INSERT_TIMESCALE_ENTRY_SIZE                                                                        (1)
#define MAG_LOOP_INSERT_TIMESCALE_OFFSET_RSVD0                                                                      (2)
#define MAG_LOOP_INSERT_TIMESCALE_OFFSET_RSVD0_WIDTH                                                               (30)
#define MAG_LOOP_INSERT_TIMESCALE_OFFSET_CFG_TIMESCALE                                                              (0)
#define MAG_LOOP_INSERT_TIMESCALE_OFFSET_CFG_TIMESCALE_WIDTH                                                        (2)
typedef union MAG_LOOP_INSERT_TIMESCALE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_timescale:MAG_LOOP_INSERT_TIMESCALE_OFFSET_CFG_TIMESCALE_WIDTH;                                     //[ 1: 0]
        jl_uint32 rsvd0:MAG_LOOP_INSERT_TIMESCALE_OFFSET_RSVD0_WIDTH;                                                     //[31: 2]
    } BF;
    jl_uint32 val[MAG_LOOP_INSERT_TIMESCALE_ENTRY_SIZE];
} MAG_LOOP_INSERT_TIMESCALE_t;

#define MAG_LOOP_INSERT_TIME                                                                   ((jl_uint32)0x00143020U)
#define MAG_LOOP_INSERT_TIME_NUM                                                               ((jl_uint32)0x00000001U)
#define MAG_LOOP_INSERT_TIME_ENTRY_SIZE                                                                             (1)
#define MAG_LOOP_INSERT_TIME_OFFSET_RSVD0                                                                           (8)
#define MAG_LOOP_INSERT_TIME_OFFSET_RSVD0_WIDTH                                                                    (24)
#define MAG_LOOP_INSERT_TIME_OFFSET_CFG_LP_TRIG_TIME                                                                (0)
#define MAG_LOOP_INSERT_TIME_OFFSET_CFG_LP_TRIG_TIME_WIDTH                                                          (8)
typedef union MAG_LOOP_INSERT_TIME_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_lp_trig_time:MAG_LOOP_INSERT_TIME_OFFSET_CFG_LP_TRIG_TIME_WIDTH;                                    //[ 7: 0]
        jl_uint32 rsvd0:MAG_LOOP_INSERT_TIME_OFFSET_RSVD0_WIDTH;                                                          //[31: 8]
    } BF;
    jl_uint32 val[MAG_LOOP_INSERT_TIME_ENTRY_SIZE];
} MAG_LOOP_INSERT_TIME_t;

#define MAG_LOOP_WITH_CPU_TAG                                                                  ((jl_uint32)0x00143024U)
#define MAG_LOOP_WITH_CPU_TAG_NUM                                                              ((jl_uint32)0x00000001U)
#define MAG_LOOP_WITH_CPU_TAG_ENTRY_SIZE                                                                            (1)
#define MAG_LOOP_WITH_CPU_TAG_OFFSET_RSVD0                                                                          (1)
#define MAG_LOOP_WITH_CPU_TAG_OFFSET_RSVD0_WIDTH                                                                   (31)
#define MAG_LOOP_WITH_CPU_TAG_OFFSET_CFG_CPU_TAG_EN                                                                 (0)
#define MAG_LOOP_WITH_CPU_TAG_OFFSET_CFG_CPU_TAG_EN_WIDTH                                                           (1)
typedef union MAG_LOOP_WITH_CPU_TAG_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_cpu_tag_en:MAG_LOOP_WITH_CPU_TAG_OFFSET_CFG_CPU_TAG_EN_WIDTH;                                       //[ 0: 0]
        jl_uint32 rsvd0:MAG_LOOP_WITH_CPU_TAG_OFFSET_RSVD0_WIDTH;                                                         //[31: 1]
    } BF;
    jl_uint32 val[MAG_LOOP_WITH_CPU_TAG_ENTRY_SIZE];
} MAG_LOOP_WITH_CPU_TAG_t;

#define MAG_LOOP_FRAME_DA                                                                      ((jl_uint32)0x00143028U)
#define MAG_LOOP_FRAME_DA_NUM                                                                  ((jl_uint32)0x00000001U)
#define MAG_LOOP_FRAME_DA_ENTRY_SIZE                                                                                (2)
#define MAG_LOOP_FRAME_DA_OFFSET_RSVD0                                                                             (48)
#define MAG_LOOP_FRAME_DA_OFFSET_RSVD0_WIDTH                                                                       (16)
#define MAG_LOOP_FRAME_DA_OFFSET_CFG_LP_FRAME_DA_0_31                                                               (0)
#define MAG_LOOP_FRAME_DA_OFFSET_CFG_LP_FRAME_DA_0_31_WIDTH                                                        (32)
#define MAG_LOOP_FRAME_DA_OFFSET_CFG_LP_FRAME_DA_32_47                                                             (32)
#define MAG_LOOP_FRAME_DA_OFFSET_CFG_LP_FRAME_DA_32_47_WIDTH                                                       (16)
typedef union MAG_LOOP_FRAME_DA_u {
    struct __attribute__ ((packed)) {
        jl_uint64 cfg_lp_frame_da_0_31:MAG_LOOP_FRAME_DA_OFFSET_CFG_LP_FRAME_DA_0_31_WIDTH;                               //[31: 0]
        jl_uint64 cfg_lp_frame_da_32_47:MAG_LOOP_FRAME_DA_OFFSET_CFG_LP_FRAME_DA_32_47_WIDTH;                             //[47:32]
        jl_uint64 rsvd0:MAG_LOOP_FRAME_DA_OFFSET_RSVD0_WIDTH;                                                             //[63:48]
    } BF;
    jl_uint32 val[MAG_LOOP_FRAME_DA_ENTRY_SIZE];
} MAG_LOOP_FRAME_DA_t;

#define MAG_LOOP_FRAME_SA                                                                      ((jl_uint32)0x00143030U)
#define MAG_LOOP_FRAME_SA_NUM                                                                  ((jl_uint32)0x00000001U)
#define MAG_LOOP_FRAME_SA_ENTRY_SIZE                                                                                (2)
#define MAG_LOOP_FRAME_SA_OFFSET_RSVD0                                                                             (48)
#define MAG_LOOP_FRAME_SA_OFFSET_RSVD0_WIDTH                                                                       (16)
#define MAG_LOOP_FRAME_SA_OFFSET_CFG_LP_FRAME_SA_0_31                                                               (0)
#define MAG_LOOP_FRAME_SA_OFFSET_CFG_LP_FRAME_SA_0_31_WIDTH                                                        (32)
#define MAG_LOOP_FRAME_SA_OFFSET_CFG_LP_FRAME_SA_32_47                                                             (32)
#define MAG_LOOP_FRAME_SA_OFFSET_CFG_LP_FRAME_SA_32_47_WIDTH                                                       (16)
typedef union MAG_LOOP_FRAME_SA_u {
    struct __attribute__ ((packed)) {
        jl_uint64 cfg_lp_frame_sa_0_31:MAG_LOOP_FRAME_SA_OFFSET_CFG_LP_FRAME_SA_0_31_WIDTH;                               //[31: 0]
        jl_uint64 cfg_lp_frame_sa_32_47:MAG_LOOP_FRAME_SA_OFFSET_CFG_LP_FRAME_SA_32_47_WIDTH;                             //[47:32]
        jl_uint64 rsvd0:MAG_LOOP_FRAME_SA_OFFSET_RSVD0_WIDTH;                                                             //[63:48]
    } BF;
    jl_uint32 val[MAG_LOOP_FRAME_SA_ENTRY_SIZE];
} MAG_LOOP_FRAME_SA_t;

#define MAG_LOOP_FRAME_TYPE                                                                    ((jl_uint32)0x00143038U)
#define MAG_LOOP_FRAME_TYPE_NUM                                                                ((jl_uint32)0x00000001U)
#define MAG_LOOP_FRAME_TYPE_ENTRY_SIZE                                                                              (1)
#define MAG_LOOP_FRAME_TYPE_OFFSET_CFG_LP_FRAME_TYPE                                                                (0)
#define MAG_LOOP_FRAME_TYPE_OFFSET_CFG_LP_FRAME_TYPE_WIDTH                                                         (32)
typedef union MAG_LOOP_FRAME_TYPE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_lp_frame_type:MAG_LOOP_FRAME_TYPE_OFFSET_CFG_LP_FRAME_TYPE_WIDTH;                                   //[31: 0]
    } BF;
    jl_uint32 val[MAG_LOOP_FRAME_TYPE_ENTRY_SIZE];
} MAG_LOOP_FRAME_TYPE_t;

#define MAG_LOOP_FRAME_TTL                                                                     ((jl_uint32)0x0014303CU)
#define MAG_LOOP_FRAME_TTL_NUM                                                                 ((jl_uint32)0x00000001U)
#define MAG_LOOP_FRAME_TTL_ENTRY_SIZE                                                                               (1)
#define MAG_LOOP_FRAME_TTL_OFFSET_RSVD0                                                                            (16)
#define MAG_LOOP_FRAME_TTL_OFFSET_RSVD0_WIDTH                                                                      (16)
#define MAG_LOOP_FRAME_TTL_OFFSET_CFG_LP_FRAME_TTL                                                                  (0)
#define MAG_LOOP_FRAME_TTL_OFFSET_CFG_LP_FRAME_TTL_WIDTH                                                           (16)
typedef union MAG_LOOP_FRAME_TTL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_lp_frame_ttl:MAG_LOOP_FRAME_TTL_OFFSET_CFG_LP_FRAME_TTL_WIDTH;                                      //[15: 0]
        jl_uint32 rsvd0:MAG_LOOP_FRAME_TTL_OFFSET_RSVD0_WIDTH;                                                            //[31:16]
    } BF;
    jl_uint32 val[MAG_LOOP_FRAME_TTL_ENTRY_SIZE];
} MAG_LOOP_FRAME_TTL_t;

#define MAG_LOOP_FRAME_CPU_TAG                                                                 ((jl_uint32)0x00143040U)
#define MAG_LOOP_FRAME_CPU_TAG_NUM                                                             ((jl_uint32)0x00000001U)
#define MAG_LOOP_FRAME_CPU_TAG_ENTRY_SIZE                                                                           (1)
#define MAG_LOOP_FRAME_CPU_TAG_OFFSET_CFG_LP_CPU_TAG                                                                (0)
#define MAG_LOOP_FRAME_CPU_TAG_OFFSET_CFG_LP_CPU_TAG_WIDTH                                                         (32)
typedef union MAG_LOOP_FRAME_CPU_TAG_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_lp_cpu_tag:MAG_LOOP_FRAME_CPU_TAG_OFFSET_CFG_LP_CPU_TAG_WIDTH;                                      //[31: 0]
    } BF;
    jl_uint32 val[MAG_LOOP_FRAME_CPU_TAG_ENTRY_SIZE];
} MAG_LOOP_FRAME_CPU_TAG_t;

#define MAG_LOOP_FRAME_INDIR_SET0                                                              ((jl_uint32)0x00143048U)
#define MAG_LOOP_FRAME_INDIR_SET0_NUM                                                          ((jl_uint32)0x00000001U)
#define MAG_LOOP_FRAME_INDIR_SET0_ENTRY_SIZE                                                                        (1)
#define MAG_LOOP_FRAME_INDIR_SET0_OFFSET_RSVD0                                                                      (2)
#define MAG_LOOP_FRAME_INDIR_SET0_OFFSET_RSVD0_WIDTH                                                               (30)
#define MAG_LOOP_FRAME_INDIR_SET0_OFFSET_CFG_LP_FRAME_CTRL                                                          (0)
#define MAG_LOOP_FRAME_INDIR_SET0_OFFSET_CFG_LP_FRAME_CTRL_WIDTH                                                    (2)
typedef union MAG_LOOP_FRAME_INDIR_SET0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_lp_frame_ctrl:MAG_LOOP_FRAME_INDIR_SET0_OFFSET_CFG_LP_FRAME_CTRL_WIDTH;                             //[ 1: 0]
        jl_uint32 rsvd0:MAG_LOOP_FRAME_INDIR_SET0_OFFSET_RSVD0_WIDTH;                                                     //[31: 2]
    } BF;
    jl_uint32 val[MAG_LOOP_FRAME_INDIR_SET0_ENTRY_SIZE];
} MAG_LOOP_FRAME_INDIR_SET0_t;

#define MAG_LOOP_FRAME_INDIR_SET1                                                              ((jl_uint32)0x0014304CU)
#define MAG_LOOP_FRAME_INDIR_SET1_NUM                                                          ((jl_uint32)0x00000001U)
#define MAG_LOOP_FRAME_INDIR_SET1_ENTRY_SIZE                                                                        (1)
#define MAG_LOOP_FRAME_INDIR_SET1_OFFSET_RSVD0                                                                      (5)
#define MAG_LOOP_FRAME_INDIR_SET1_OFFSET_RSVD0_WIDTH                                                               (27)
#define MAG_LOOP_FRAME_INDIR_SET1_OFFSET_CFG_LP_FRAME_ADDR                                                          (0)
#define MAG_LOOP_FRAME_INDIR_SET1_OFFSET_CFG_LP_FRAME_ADDR_WIDTH                                                    (5)
typedef union MAG_LOOP_FRAME_INDIR_SET1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_lp_frame_addr:MAG_LOOP_FRAME_INDIR_SET1_OFFSET_CFG_LP_FRAME_ADDR_WIDTH;                             //[ 4: 0]
        jl_uint32 rsvd0:MAG_LOOP_FRAME_INDIR_SET1_OFFSET_RSVD0_WIDTH;                                                     //[31: 5]
    } BF;
    jl_uint32 val[MAG_LOOP_FRAME_INDIR_SET1_ENTRY_SIZE];
} MAG_LOOP_FRAME_INDIR_SET1_t;

#define MAG_LOOP_INSERT_INDIR_SET2                                                             ((jl_uint32)0x00143050U)
#define MAG_LOOP_INSERT_INDIR_SET2_NUM                                                         ((jl_uint32)0x00000001U)
#define MAG_LOOP_INSERT_INDIR_SET2_ENTRY_SIZE                                                                       (1)
#define MAG_LOOP_INSERT_INDIR_SET2_OFFSET_CFG_LP_FRAME_DATA                                                         (0)
#define MAG_LOOP_INSERT_INDIR_SET2_OFFSET_CFG_LP_FRAME_DATA_WIDTH                                                  (32)
typedef union MAG_LOOP_INSERT_INDIR_SET2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_lp_frame_data:MAG_LOOP_INSERT_INDIR_SET2_OFFSET_CFG_LP_FRAME_DATA_WIDTH;                            //[31: 0]
    } BF;
    jl_uint32 val[MAG_LOOP_INSERT_INDIR_SET2_ENTRY_SIZE];
} MAG_LOOP_INSERT_INDIR_SET2_t;

#define MAG_LOOP_INSERT_INDIR_SET3                                                             ((jl_uint32)0x00143054U)
#define MAG_LOOP_INSERT_INDIR_SET3_NUM                                                         ((jl_uint32)0x00000001U)
#define MAG_LOOP_INSERT_INDIR_SET3_ENTRY_SIZE                                                                       (1)
#define MAG_LOOP_INSERT_INDIR_SET3_OFFSET_DBG_LP_FRAME_DATA                                                         (0)
#define MAG_LOOP_INSERT_INDIR_SET3_OFFSET_DBG_LP_FRAME_DATA_WIDTH                                                  (32)
typedef union MAG_LOOP_INSERT_INDIR_SET3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_lp_frame_data:MAG_LOOP_INSERT_INDIR_SET3_OFFSET_DBG_LP_FRAME_DATA_WIDTH;                            //[31: 0]
    } BF;
    jl_uint32 val[MAG_LOOP_INSERT_INDIR_SET3_ENTRY_SIZE];
} MAG_LOOP_INSERT_INDIR_SET3_t;

#define MAG_TX_PKT_CNT_SMAC0                                                                   ((jl_uint32)0x00143058U)
#define MAG_TX_PKT_CNT_SMAC0_NUM                                                               ((jl_uint32)0x00000001U)
#define MAG_TX_PKT_CNT_SMAC0_ENTRY_SIZE                                                                             (2)
#define MAG_TX_PKT_CNT_SMAC0_OFFSET_TX_PKT_CNT_SMAC0_0_31                                                           (0)
#define MAG_TX_PKT_CNT_SMAC0_OFFSET_TX_PKT_CNT_SMAC0_0_31_WIDTH                                                    (32)
#define MAG_TX_PKT_CNT_SMAC0_OFFSET_TX_PKT_CNT_SMAC0_32_63                                                         (32)
#define MAG_TX_PKT_CNT_SMAC0_OFFSET_TX_PKT_CNT_SMAC0_32_63_WIDTH                                                   (32)
typedef union MAG_TX_PKT_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_cnt_smac0_0_31:MAG_TX_PKT_CNT_SMAC0_OFFSET_TX_PKT_CNT_SMAC0_0_31_WIDTH;                          //[31: 0]
        jl_uint64 tx_pkt_cnt_smac0_32_63:MAG_TX_PKT_CNT_SMAC0_OFFSET_TX_PKT_CNT_SMAC0_32_63_WIDTH;                        //[63:32]
    } BF;
    jl_uint32 val[MAG_TX_PKT_CNT_SMAC0_ENTRY_SIZE];
} MAG_TX_PKT_CNT_SMAC0_t;

#define MAG_TX_PKT_BYTE_CNT_SMAC0                                                              ((jl_uint32)0x00143060U)
#define MAG_TX_PKT_BYTE_CNT_SMAC0_NUM                                                          ((jl_uint32)0x00000001U)
#define MAG_TX_PKT_BYTE_CNT_SMAC0_ENTRY_SIZE                                                                        (2)
#define MAG_TX_PKT_BYTE_CNT_SMAC0_OFFSET_TX_PKT_BYTE_CNT_SMAC0_0_31                                                 (0)
#define MAG_TX_PKT_BYTE_CNT_SMAC0_OFFSET_TX_PKT_BYTE_CNT_SMAC0_0_31_WIDTH                                          (32)
#define MAG_TX_PKT_BYTE_CNT_SMAC0_OFFSET_TX_PKT_BYTE_CNT_SMAC0_32_63                                               (32)
#define MAG_TX_PKT_BYTE_CNT_SMAC0_OFFSET_TX_PKT_BYTE_CNT_SMAC0_32_63_WIDTH                                         (32)
typedef union MAG_TX_PKT_BYTE_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_byte_cnt_smac0_0_31:MAG_TX_PKT_BYTE_CNT_SMAC0_OFFSET_TX_PKT_BYTE_CNT_SMAC0_0_31_WIDTH;           //[31: 0]
        jl_uint64 tx_pkt_byte_cnt_smac0_32_63:MAG_TX_PKT_BYTE_CNT_SMAC0_OFFSET_TX_PKT_BYTE_CNT_SMAC0_32_63_WIDTH;         //[63:32]
    } BF;
    jl_uint32 val[MAG_TX_PKT_BYTE_CNT_SMAC0_ENTRY_SIZE];
} MAG_TX_PKT_BYTE_CNT_SMAC0_t;

#define MAG_TX_PKT_UC_CNT_SMAC0                                                                ((jl_uint32)0x00143068U)
#define MAG_TX_PKT_UC_CNT_SMAC0_NUM                                                            ((jl_uint32)0x00000001U)
#define MAG_TX_PKT_UC_CNT_SMAC0_ENTRY_SIZE                                                                          (2)
#define MAG_TX_PKT_UC_CNT_SMAC0_OFFSET_TX_PKT_UC_CNT_SMAC0_0_31                                                     (0)
#define MAG_TX_PKT_UC_CNT_SMAC0_OFFSET_TX_PKT_UC_CNT_SMAC0_0_31_WIDTH                                              (32)
#define MAG_TX_PKT_UC_CNT_SMAC0_OFFSET_TX_PKT_UC_CNT_SMAC0_32_63                                                   (32)
#define MAG_TX_PKT_UC_CNT_SMAC0_OFFSET_TX_PKT_UC_CNT_SMAC0_32_63_WIDTH                                             (32)
typedef union MAG_TX_PKT_UC_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_uc_cnt_smac0_0_31:MAG_TX_PKT_UC_CNT_SMAC0_OFFSET_TX_PKT_UC_CNT_SMAC0_0_31_WIDTH;                 //[31: 0]
        jl_uint64 tx_pkt_uc_cnt_smac0_32_63:MAG_TX_PKT_UC_CNT_SMAC0_OFFSET_TX_PKT_UC_CNT_SMAC0_32_63_WIDTH;               //[63:32]
    } BF;
    jl_uint32 val[MAG_TX_PKT_UC_CNT_SMAC0_ENTRY_SIZE];
} MAG_TX_PKT_UC_CNT_SMAC0_t;

#define MAG_TX_PKT_UC_BYTE_CNT_SMAC0                                                           ((jl_uint32)0x00143070U)
#define MAG_TX_PKT_UC_BYTE_CNT_SMAC0_NUM                                                       ((jl_uint32)0x00000001U)
#define MAG_TX_PKT_UC_BYTE_CNT_SMAC0_ENTRY_SIZE                                                                     (2)
#define MAG_TX_PKT_UC_BYTE_CNT_SMAC0_OFFSET_TX_PKT_UC_BYTE_CNT_SMAC0_0_31                                           (0)
#define MAG_TX_PKT_UC_BYTE_CNT_SMAC0_OFFSET_TX_PKT_UC_BYTE_CNT_SMAC0_0_31_WIDTH                                    (32)
#define MAG_TX_PKT_UC_BYTE_CNT_SMAC0_OFFSET_TX_PKT_UC_BYTE_CNT_SMAC0_32_63                                         (32)
#define MAG_TX_PKT_UC_BYTE_CNT_SMAC0_OFFSET_TX_PKT_UC_BYTE_CNT_SMAC0_32_63_WIDTH                                   (32)
typedef union MAG_TX_PKT_UC_BYTE_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_uc_byte_cnt_smac0_0_31:MAG_TX_PKT_UC_BYTE_CNT_SMAC0_OFFSET_TX_PKT_UC_BYTE_CNT_SMAC0_0_31_WIDTH;  //[31: 0]
        jl_uint64 tx_pkt_uc_byte_cnt_smac0_32_63:MAG_TX_PKT_UC_BYTE_CNT_SMAC0_OFFSET_TX_PKT_UC_BYTE_CNT_SMAC0_32_63_WIDTH;  //[63:32]
    } BF;
    jl_uint32 val[MAG_TX_PKT_UC_BYTE_CNT_SMAC0_ENTRY_SIZE];
} MAG_TX_PKT_UC_BYTE_CNT_SMAC0_t;

#define MAG_TX_PKT_MC_CNT_SMAC0                                                                ((jl_uint32)0x00143078U)
#define MAG_TX_PKT_MC_CNT_SMAC0_NUM                                                            ((jl_uint32)0x00000001U)
#define MAG_TX_PKT_MC_CNT_SMAC0_ENTRY_SIZE                                                                          (2)
#define MAG_TX_PKT_MC_CNT_SMAC0_OFFSET_TX_PKT_MC_CNT_SMAC0_0_31                                                     (0)
#define MAG_TX_PKT_MC_CNT_SMAC0_OFFSET_TX_PKT_MC_CNT_SMAC0_0_31_WIDTH                                              (32)
#define MAG_TX_PKT_MC_CNT_SMAC0_OFFSET_TX_PKT_MC_CNT_SMAC0_32_63                                                   (32)
#define MAG_TX_PKT_MC_CNT_SMAC0_OFFSET_TX_PKT_MC_CNT_SMAC0_32_63_WIDTH                                             (32)
typedef union MAG_TX_PKT_MC_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_mc_cnt_smac0_0_31:MAG_TX_PKT_MC_CNT_SMAC0_OFFSET_TX_PKT_MC_CNT_SMAC0_0_31_WIDTH;                 //[31: 0]
        jl_uint64 tx_pkt_mc_cnt_smac0_32_63:MAG_TX_PKT_MC_CNT_SMAC0_OFFSET_TX_PKT_MC_CNT_SMAC0_32_63_WIDTH;               //[63:32]
    } BF;
    jl_uint32 val[MAG_TX_PKT_MC_CNT_SMAC0_ENTRY_SIZE];
} MAG_TX_PKT_MC_CNT_SMAC0_t;

#define MAG_TX_PKT_MC_BYTE_CNT_SMAC0                                                           ((jl_uint32)0x00143080U)
#define MAG_TX_PKT_MC_BYTE_CNT_SMAC0_NUM                                                       ((jl_uint32)0x00000001U)
#define MAG_TX_PKT_MC_BYTE_CNT_SMAC0_ENTRY_SIZE                                                                     (2)
#define MAG_TX_PKT_MC_BYTE_CNT_SMAC0_OFFSET_TX_PKT_MC_BYTE_CNT_SMAC0_0_31                                           (0)
#define MAG_TX_PKT_MC_BYTE_CNT_SMAC0_OFFSET_TX_PKT_MC_BYTE_CNT_SMAC0_0_31_WIDTH                                    (32)
#define MAG_TX_PKT_MC_BYTE_CNT_SMAC0_OFFSET_TX_PKT_MC_BYTE_CNT_SMAC0_32_63                                         (32)
#define MAG_TX_PKT_MC_BYTE_CNT_SMAC0_OFFSET_TX_PKT_MC_BYTE_CNT_SMAC0_32_63_WIDTH                                   (32)
typedef union MAG_TX_PKT_MC_BYTE_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_mc_byte_cnt_smac0_0_31:MAG_TX_PKT_MC_BYTE_CNT_SMAC0_OFFSET_TX_PKT_MC_BYTE_CNT_SMAC0_0_31_WIDTH;  //[31: 0]
        jl_uint64 tx_pkt_mc_byte_cnt_smac0_32_63:MAG_TX_PKT_MC_BYTE_CNT_SMAC0_OFFSET_TX_PKT_MC_BYTE_CNT_SMAC0_32_63_WIDTH;  //[63:32]
    } BF;
    jl_uint32 val[MAG_TX_PKT_MC_BYTE_CNT_SMAC0_ENTRY_SIZE];
} MAG_TX_PKT_MC_BYTE_CNT_SMAC0_t;

#define MAG_TX_PKT_BC_CNT_SMAC0                                                                ((jl_uint32)0x00143088U)
#define MAG_TX_PKT_BC_CNT_SMAC0_NUM                                                            ((jl_uint32)0x00000001U)
#define MAG_TX_PKT_BC_CNT_SMAC0_ENTRY_SIZE                                                                          (2)
#define MAG_TX_PKT_BC_CNT_SMAC0_OFFSET_TX_PKT_BC_CNT_SMAC0_0_31                                                     (0)
#define MAG_TX_PKT_BC_CNT_SMAC0_OFFSET_TX_PKT_BC_CNT_SMAC0_0_31_WIDTH                                              (32)
#define MAG_TX_PKT_BC_CNT_SMAC0_OFFSET_TX_PKT_BC_CNT_SMAC0_32_63                                                   (32)
#define MAG_TX_PKT_BC_CNT_SMAC0_OFFSET_TX_PKT_BC_CNT_SMAC0_32_63_WIDTH                                             (32)
typedef union MAG_TX_PKT_BC_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_bc_cnt_smac0_0_31:MAG_TX_PKT_BC_CNT_SMAC0_OFFSET_TX_PKT_BC_CNT_SMAC0_0_31_WIDTH;                 //[31: 0]
        jl_uint64 tx_pkt_bc_cnt_smac0_32_63:MAG_TX_PKT_BC_CNT_SMAC0_OFFSET_TX_PKT_BC_CNT_SMAC0_32_63_WIDTH;               //[63:32]
    } BF;
    jl_uint32 val[MAG_TX_PKT_BC_CNT_SMAC0_ENTRY_SIZE];
} MAG_TX_PKT_BC_CNT_SMAC0_t;

#define MAG_TX_PKT_BC_BYTE_CNT_SMAC0                                                           ((jl_uint32)0x00143090U)
#define MAG_TX_PKT_BC_BYTE_CNT_SMAC0_NUM                                                       ((jl_uint32)0x00000001U)
#define MAG_TX_PKT_BC_BYTE_CNT_SMAC0_ENTRY_SIZE                                                                     (2)
#define MAG_TX_PKT_BC_BYTE_CNT_SMAC0_OFFSET_TX_PKT_BC_BYTE_CNT_SMAC0_0_31                                           (0)
#define MAG_TX_PKT_BC_BYTE_CNT_SMAC0_OFFSET_TX_PKT_BC_BYTE_CNT_SMAC0_0_31_WIDTH                                    (32)
#define MAG_TX_PKT_BC_BYTE_CNT_SMAC0_OFFSET_TX_PKT_BC_BYTE_CNT_SMAC0_32_63                                         (32)
#define MAG_TX_PKT_BC_BYTE_CNT_SMAC0_OFFSET_TX_PKT_BC_BYTE_CNT_SMAC0_32_63_WIDTH                                   (32)
typedef union MAG_TX_PKT_BC_BYTE_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_bc_byte_cnt_smac0_0_31:MAG_TX_PKT_BC_BYTE_CNT_SMAC0_OFFSET_TX_PKT_BC_BYTE_CNT_SMAC0_0_31_WIDTH;  //[31: 0]
        jl_uint64 tx_pkt_bc_byte_cnt_smac0_32_63:MAG_TX_PKT_BC_BYTE_CNT_SMAC0_OFFSET_TX_PKT_BC_BYTE_CNT_SMAC0_32_63_WIDTH;  //[63:32]
    } BF;
    jl_uint32 val[MAG_TX_PKT_BC_BYTE_CNT_SMAC0_ENTRY_SIZE];
} MAG_TX_PKT_BC_BYTE_CNT_SMAC0_t;

#define MAG_TX_PKT_DRP_CNT_SMAC0                                                               ((jl_uint32)0x00143098U)
#define MAG_TX_PKT_DRP_CNT_SMAC0_NUM                                                           ((jl_uint32)0x00000001U)
#define MAG_TX_PKT_DRP_CNT_SMAC0_ENTRY_SIZE                                                                         (1)
#define MAG_TX_PKT_DRP_CNT_SMAC0_OFFSET_TX_PKT_DRP_CNT_SMAC0                                                        (0)
#define MAG_TX_PKT_DRP_CNT_SMAC0_OFFSET_TX_PKT_DRP_CNT_SMAC0_WIDTH                                                 (32)
typedef union MAG_TX_PKT_DRP_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tx_pkt_drp_cnt_smac0:MAG_TX_PKT_DRP_CNT_SMAC0_OFFSET_TX_PKT_DRP_CNT_SMAC0_WIDTH;                        //[31: 0]
    } BF;
    jl_uint32 val[MAG_TX_PKT_DRP_CNT_SMAC0_ENTRY_SIZE];
} MAG_TX_PKT_DRP_CNT_SMAC0_t;

#define MAG_TX_PKT_ERR_CNT_SMAC0                                                               ((jl_uint32)0x0014309CU)
#define MAG_TX_PKT_ERR_CNT_SMAC0_NUM                                                           ((jl_uint32)0x00000001U)
#define MAG_TX_PKT_ERR_CNT_SMAC0_ENTRY_SIZE                                                                         (1)
#define MAG_TX_PKT_ERR_CNT_SMAC0_OFFSET_TX_PKT_ERR_CNT_SMAC0                                                        (0)
#define MAG_TX_PKT_ERR_CNT_SMAC0_OFFSET_TX_PKT_ERR_CNT_SMAC0_WIDTH                                                 (32)
typedef union MAG_TX_PKT_ERR_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tx_pkt_err_cnt_smac0:MAG_TX_PKT_ERR_CNT_SMAC0_OFFSET_TX_PKT_ERR_CNT_SMAC0_WIDTH;                        //[31: 0]
    } BF;
    jl_uint32 val[MAG_TX_PKT_ERR_CNT_SMAC0_ENTRY_SIZE];
} MAG_TX_PKT_ERR_CNT_SMAC0_t;

#define MAG_RX_PKT_CNT_SMAC0                                                                   ((jl_uint32)0x001430A0U)
#define MAG_RX_PKT_CNT_SMAC0_NUM                                                               ((jl_uint32)0x00000001U)
#define MAG_RX_PKT_CNT_SMAC0_ENTRY_SIZE                                                                             (2)
#define MAG_RX_PKT_CNT_SMAC0_OFFSET_RX_PKT_CNT_SMAC0_0_31                                                           (0)
#define MAG_RX_PKT_CNT_SMAC0_OFFSET_RX_PKT_CNT_SMAC0_0_31_WIDTH                                                    (32)
#define MAG_RX_PKT_CNT_SMAC0_OFFSET_RX_PKT_CNT_SMAC0_32_63                                                         (32)
#define MAG_RX_PKT_CNT_SMAC0_OFFSET_RX_PKT_CNT_SMAC0_32_63_WIDTH                                                   (32)
typedef union MAG_RX_PKT_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_cnt_smac0_0_31:MAG_RX_PKT_CNT_SMAC0_OFFSET_RX_PKT_CNT_SMAC0_0_31_WIDTH;                          //[31: 0]
        jl_uint64 rx_pkt_cnt_smac0_32_63:MAG_RX_PKT_CNT_SMAC0_OFFSET_RX_PKT_CNT_SMAC0_32_63_WIDTH;                        //[63:32]
    } BF;
    jl_uint32 val[MAG_RX_PKT_CNT_SMAC0_ENTRY_SIZE];
} MAG_RX_PKT_CNT_SMAC0_t;

#define MAG_RX_PKT_BYTE_CNT_SMAC0                                                              ((jl_uint32)0x001430A8U)
#define MAG_RX_PKT_BYTE_CNT_SMAC0_NUM                                                          ((jl_uint32)0x00000001U)
#define MAG_RX_PKT_BYTE_CNT_SMAC0_ENTRY_SIZE                                                                        (2)
#define MAG_RX_PKT_BYTE_CNT_SMAC0_OFFSET_RX_PKT_BYTE_CNT_SMAC0_0_31                                                 (0)
#define MAG_RX_PKT_BYTE_CNT_SMAC0_OFFSET_RX_PKT_BYTE_CNT_SMAC0_0_31_WIDTH                                          (32)
#define MAG_RX_PKT_BYTE_CNT_SMAC0_OFFSET_RX_PKT_BYTE_CNT_SMAC0_32_63                                               (32)
#define MAG_RX_PKT_BYTE_CNT_SMAC0_OFFSET_RX_PKT_BYTE_CNT_SMAC0_32_63_WIDTH                                         (32)
typedef union MAG_RX_PKT_BYTE_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_byte_cnt_smac0_0_31:MAG_RX_PKT_BYTE_CNT_SMAC0_OFFSET_RX_PKT_BYTE_CNT_SMAC0_0_31_WIDTH;           //[31: 0]
        jl_uint64 rx_pkt_byte_cnt_smac0_32_63:MAG_RX_PKT_BYTE_CNT_SMAC0_OFFSET_RX_PKT_BYTE_CNT_SMAC0_32_63_WIDTH;         //[63:32]
    } BF;
    jl_uint32 val[MAG_RX_PKT_BYTE_CNT_SMAC0_ENTRY_SIZE];
} MAG_RX_PKT_BYTE_CNT_SMAC0_t;

#define MAG_RX_PKT_UC_CNT_SMAC0                                                                ((jl_uint32)0x001430B0U)
#define MAG_RX_PKT_UC_CNT_SMAC0_NUM                                                            ((jl_uint32)0x00000001U)
#define MAG_RX_PKT_UC_CNT_SMAC0_ENTRY_SIZE                                                                          (2)
#define MAG_RX_PKT_UC_CNT_SMAC0_OFFSET_RX_PKT_UC_CNT_SMAC0_0_31                                                     (0)
#define MAG_RX_PKT_UC_CNT_SMAC0_OFFSET_RX_PKT_UC_CNT_SMAC0_0_31_WIDTH                                              (32)
#define MAG_RX_PKT_UC_CNT_SMAC0_OFFSET_RX_PKT_UC_CNT_SMAC0_32_63                                                   (32)
#define MAG_RX_PKT_UC_CNT_SMAC0_OFFSET_RX_PKT_UC_CNT_SMAC0_32_63_WIDTH                                             (32)
typedef union MAG_RX_PKT_UC_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_uc_cnt_smac0_0_31:MAG_RX_PKT_UC_CNT_SMAC0_OFFSET_RX_PKT_UC_CNT_SMAC0_0_31_WIDTH;                 //[31: 0]
        jl_uint64 rx_pkt_uc_cnt_smac0_32_63:MAG_RX_PKT_UC_CNT_SMAC0_OFFSET_RX_PKT_UC_CNT_SMAC0_32_63_WIDTH;               //[63:32]
    } BF;
    jl_uint32 val[MAG_RX_PKT_UC_CNT_SMAC0_ENTRY_SIZE];
} MAG_RX_PKT_UC_CNT_SMAC0_t;

#define MAG_RX_PKT_UC_BYTE_CNT_SMAC0                                                           ((jl_uint32)0x001430B8U)
#define MAG_RX_PKT_UC_BYTE_CNT_SMAC0_NUM                                                       ((jl_uint32)0x00000001U)
#define MAG_RX_PKT_UC_BYTE_CNT_SMAC0_ENTRY_SIZE                                                                     (2)
#define MAG_RX_PKT_UC_BYTE_CNT_SMAC0_OFFSET_RX_PKT_UC_BYTE_CNT_SMAC0_0_31                                           (0)
#define MAG_RX_PKT_UC_BYTE_CNT_SMAC0_OFFSET_RX_PKT_UC_BYTE_CNT_SMAC0_0_31_WIDTH                                    (32)
#define MAG_RX_PKT_UC_BYTE_CNT_SMAC0_OFFSET_RX_PKT_UC_BYTE_CNT_SMAC0_32_63                                         (32)
#define MAG_RX_PKT_UC_BYTE_CNT_SMAC0_OFFSET_RX_PKT_UC_BYTE_CNT_SMAC0_32_63_WIDTH                                   (32)
typedef union MAG_RX_PKT_UC_BYTE_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_uc_byte_cnt_smac0_0_31:MAG_RX_PKT_UC_BYTE_CNT_SMAC0_OFFSET_RX_PKT_UC_BYTE_CNT_SMAC0_0_31_WIDTH;  //[31: 0]
        jl_uint64 rx_pkt_uc_byte_cnt_smac0_32_63:MAG_RX_PKT_UC_BYTE_CNT_SMAC0_OFFSET_RX_PKT_UC_BYTE_CNT_SMAC0_32_63_WIDTH;  //[63:32]
    } BF;
    jl_uint32 val[MAG_RX_PKT_UC_BYTE_CNT_SMAC0_ENTRY_SIZE];
} MAG_RX_PKT_UC_BYTE_CNT_SMAC0_t;

#define MAG_RX_PKT_MC_CNT_SMAC0                                                                ((jl_uint32)0x001430C0U)
#define MAG_RX_PKT_MC_CNT_SMAC0_NUM                                                            ((jl_uint32)0x00000001U)
#define MAG_RX_PKT_MC_CNT_SMAC0_ENTRY_SIZE                                                                          (2)
#define MAG_RX_PKT_MC_CNT_SMAC0_OFFSET_RX_PKT_MC_CNT_SMAC0_0_31                                                     (0)
#define MAG_RX_PKT_MC_CNT_SMAC0_OFFSET_RX_PKT_MC_CNT_SMAC0_0_31_WIDTH                                              (32)
#define MAG_RX_PKT_MC_CNT_SMAC0_OFFSET_RX_PKT_MC_CNT_SMAC0_32_63                                                   (32)
#define MAG_RX_PKT_MC_CNT_SMAC0_OFFSET_RX_PKT_MC_CNT_SMAC0_32_63_WIDTH                                             (32)
typedef union MAG_RX_PKT_MC_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_mc_cnt_smac0_0_31:MAG_RX_PKT_MC_CNT_SMAC0_OFFSET_RX_PKT_MC_CNT_SMAC0_0_31_WIDTH;                 //[31: 0]
        jl_uint64 rx_pkt_mc_cnt_smac0_32_63:MAG_RX_PKT_MC_CNT_SMAC0_OFFSET_RX_PKT_MC_CNT_SMAC0_32_63_WIDTH;               //[63:32]
    } BF;
    jl_uint32 val[MAG_RX_PKT_MC_CNT_SMAC0_ENTRY_SIZE];
} MAG_RX_PKT_MC_CNT_SMAC0_t;

#define MAG_RX_PKT_MC_BYTE_CNT_SMAC0                                                           ((jl_uint32)0x001430C8U)
#define MAG_RX_PKT_MC_BYTE_CNT_SMAC0_NUM                                                       ((jl_uint32)0x00000001U)
#define MAG_RX_PKT_MC_BYTE_CNT_SMAC0_ENTRY_SIZE                                                                     (2)
#define MAG_RX_PKT_MC_BYTE_CNT_SMAC0_OFFSET_RX_PKT_MC_BYTE_CNT_SMAC0_0_31                                           (0)
#define MAG_RX_PKT_MC_BYTE_CNT_SMAC0_OFFSET_RX_PKT_MC_BYTE_CNT_SMAC0_0_31_WIDTH                                    (32)
#define MAG_RX_PKT_MC_BYTE_CNT_SMAC0_OFFSET_RX_PKT_MC_BYTE_CNT_SMAC0_32_63                                         (32)
#define MAG_RX_PKT_MC_BYTE_CNT_SMAC0_OFFSET_RX_PKT_MC_BYTE_CNT_SMAC0_32_63_WIDTH                                   (32)
typedef union MAG_RX_PKT_MC_BYTE_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_mc_byte_cnt_smac0_0_31:MAG_RX_PKT_MC_BYTE_CNT_SMAC0_OFFSET_RX_PKT_MC_BYTE_CNT_SMAC0_0_31_WIDTH;  //[31: 0]
        jl_uint64 rx_pkt_mc_byte_cnt_smac0_32_63:MAG_RX_PKT_MC_BYTE_CNT_SMAC0_OFFSET_RX_PKT_MC_BYTE_CNT_SMAC0_32_63_WIDTH;  //[63:32]
    } BF;
    jl_uint32 val[MAG_RX_PKT_MC_BYTE_CNT_SMAC0_ENTRY_SIZE];
} MAG_RX_PKT_MC_BYTE_CNT_SMAC0_t;

#define MAG_RX_PKT_BC_CNT_SMAC0                                                                ((jl_uint32)0x001430D0U)
#define MAG_RX_PKT_BC_CNT_SMAC0_NUM                                                            ((jl_uint32)0x00000001U)
#define MAG_RX_PKT_BC_CNT_SMAC0_ENTRY_SIZE                                                                          (2)
#define MAG_RX_PKT_BC_CNT_SMAC0_OFFSET_RX_PKT_BC_CNT_SMAC0_0_31                                                     (0)
#define MAG_RX_PKT_BC_CNT_SMAC0_OFFSET_RX_PKT_BC_CNT_SMAC0_0_31_WIDTH                                              (32)
#define MAG_RX_PKT_BC_CNT_SMAC0_OFFSET_RX_PKT_BC_CNT_SMAC0_32_63                                                   (32)
#define MAG_RX_PKT_BC_CNT_SMAC0_OFFSET_RX_PKT_BC_CNT_SMAC0_32_63_WIDTH                                             (32)
typedef union MAG_RX_PKT_BC_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_bc_cnt_smac0_0_31:MAG_RX_PKT_BC_CNT_SMAC0_OFFSET_RX_PKT_BC_CNT_SMAC0_0_31_WIDTH;                 //[31: 0]
        jl_uint64 rx_pkt_bc_cnt_smac0_32_63:MAG_RX_PKT_BC_CNT_SMAC0_OFFSET_RX_PKT_BC_CNT_SMAC0_32_63_WIDTH;               //[63:32]
    } BF;
    jl_uint32 val[MAG_RX_PKT_BC_CNT_SMAC0_ENTRY_SIZE];
} MAG_RX_PKT_BC_CNT_SMAC0_t;

#define MAG_RX_PKT_BC_BYTE_CNT_SMAC0                                                           ((jl_uint32)0x001430D8U)
#define MAG_RX_PKT_BC_BYTE_CNT_SMAC0_NUM                                                       ((jl_uint32)0x00000001U)
#define MAG_RX_PKT_BC_BYTE_CNT_SMAC0_ENTRY_SIZE                                                                     (2)
#define MAG_RX_PKT_BC_BYTE_CNT_SMAC0_OFFSET_RX_PKT_BC_BYTE_CNT_SMAC0_0_31                                           (0)
#define MAG_RX_PKT_BC_BYTE_CNT_SMAC0_OFFSET_RX_PKT_BC_BYTE_CNT_SMAC0_0_31_WIDTH                                    (32)
#define MAG_RX_PKT_BC_BYTE_CNT_SMAC0_OFFSET_RX_PKT_BC_BYTE_CNT_SMAC0_32_63                                         (32)
#define MAG_RX_PKT_BC_BYTE_CNT_SMAC0_OFFSET_RX_PKT_BC_BYTE_CNT_SMAC0_32_63_WIDTH                                   (32)
typedef union MAG_RX_PKT_BC_BYTE_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_bc_byte_cnt_smac0_0_31:MAG_RX_PKT_BC_BYTE_CNT_SMAC0_OFFSET_RX_PKT_BC_BYTE_CNT_SMAC0_0_31_WIDTH;  //[31: 0]
        jl_uint64 rx_pkt_bc_byte_cnt_smac0_32_63:MAG_RX_PKT_BC_BYTE_CNT_SMAC0_OFFSET_RX_PKT_BC_BYTE_CNT_SMAC0_32_63_WIDTH;  //[63:32]
    } BF;
    jl_uint32 val[MAG_RX_PKT_BC_BYTE_CNT_SMAC0_ENTRY_SIZE];
} MAG_RX_PKT_BC_BYTE_CNT_SMAC0_t;

#define MAG_RX_PKT_DRP_CNT_SMAC0                                                               ((jl_uint32)0x001430E0U)
#define MAG_RX_PKT_DRP_CNT_SMAC0_NUM                                                           ((jl_uint32)0x00000001U)
#define MAG_RX_PKT_DRP_CNT_SMAC0_ENTRY_SIZE                                                                         (1)
#define MAG_RX_PKT_DRP_CNT_SMAC0_OFFSET_RX_PKT_DRP_CNT_SMAC0                                                        (0)
#define MAG_RX_PKT_DRP_CNT_SMAC0_OFFSET_RX_PKT_DRP_CNT_SMAC0_WIDTH                                                 (32)
typedef union MAG_RX_PKT_DRP_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_pkt_drp_cnt_smac0:MAG_RX_PKT_DRP_CNT_SMAC0_OFFSET_RX_PKT_DRP_CNT_SMAC0_WIDTH;                        //[31: 0]
    } BF;
    jl_uint32 val[MAG_RX_PKT_DRP_CNT_SMAC0_ENTRY_SIZE];
} MAG_RX_PKT_DRP_CNT_SMAC0_t;

#define MAG_RX_PKT_CRC_ERR_CNT_SMAC0                                                           ((jl_uint32)0x001430E4U)
#define MAG_RX_PKT_CRC_ERR_CNT_SMAC0_NUM                                                       ((jl_uint32)0x00000001U)
#define MAG_RX_PKT_CRC_ERR_CNT_SMAC0_ENTRY_SIZE                                                                     (1)
#define MAG_RX_PKT_CRC_ERR_CNT_SMAC0_OFFSET_RX_PKT_CRC_ERR_CNT_SMAC0                                                (0)
#define MAG_RX_PKT_CRC_ERR_CNT_SMAC0_OFFSET_RX_PKT_CRC_ERR_CNT_SMAC0_WIDTH                                         (32)
typedef union MAG_RX_PKT_CRC_ERR_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_pkt_crc_err_cnt_smac0:MAG_RX_PKT_CRC_ERR_CNT_SMAC0_OFFSET_RX_PKT_CRC_ERR_CNT_SMAC0_WIDTH;            //[31: 0]
    } BF;
    jl_uint32 val[MAG_RX_PKT_CRC_ERR_CNT_SMAC0_ENTRY_SIZE];
} MAG_RX_PKT_CRC_ERR_CNT_SMAC0_t;

#define MAG_RX_FRAG_ERR_CNT_SMAC0                                                              ((jl_uint32)0x001430E8U)
#define MAG_RX_FRAG_ERR_CNT_SMAC0_NUM                                                          ((jl_uint32)0x00000001U)
#define MAG_RX_FRAG_ERR_CNT_SMAC0_ENTRY_SIZE                                                                        (1)
#define MAG_RX_FRAG_ERR_CNT_SMAC0_OFFSET_RX_FRAG_ERR_CNT_SMAC0                                                      (0)
#define MAG_RX_FRAG_ERR_CNT_SMAC0_OFFSET_RX_FRAG_ERR_CNT_SMAC0_WIDTH                                               (32)
typedef union MAG_RX_FRAG_ERR_CNT_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_frag_err_cnt_smac0:MAG_RX_FRAG_ERR_CNT_SMAC0_OFFSET_RX_FRAG_ERR_CNT_SMAC0_WIDTH;                     //[31: 0]
    } BF;
    jl_uint32 val[MAG_RX_FRAG_ERR_CNT_SMAC0_ENTRY_SIZE];
} MAG_RX_FRAG_ERR_CNT_SMAC0_t;

#define MAG_TX_PKT_CNT_SMAC1                                                                   ((jl_uint32)0x001430F0U)
#define MAG_TX_PKT_CNT_SMAC1_NUM                                                               ((jl_uint32)0x00000001U)
#define MAG_TX_PKT_CNT_SMAC1_ENTRY_SIZE                                                                             (2)
#define MAG_TX_PKT_CNT_SMAC1_OFFSET_TX_PKT_CNT_SMAC1_0_31                                                           (0)
#define MAG_TX_PKT_CNT_SMAC1_OFFSET_TX_PKT_CNT_SMAC1_0_31_WIDTH                                                    (32)
#define MAG_TX_PKT_CNT_SMAC1_OFFSET_TX_PKT_CNT_SMAC1_32_63                                                         (32)
#define MAG_TX_PKT_CNT_SMAC1_OFFSET_TX_PKT_CNT_SMAC1_32_63_WIDTH                                                   (32)
typedef union MAG_TX_PKT_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_cnt_smac1_0_31:MAG_TX_PKT_CNT_SMAC1_OFFSET_TX_PKT_CNT_SMAC1_0_31_WIDTH;                          //[31: 0]
        jl_uint64 tx_pkt_cnt_smac1_32_63:MAG_TX_PKT_CNT_SMAC1_OFFSET_TX_PKT_CNT_SMAC1_32_63_WIDTH;                        //[63:32]
    } BF;
    jl_uint32 val[MAG_TX_PKT_CNT_SMAC1_ENTRY_SIZE];
} MAG_TX_PKT_CNT_SMAC1_t;

#define MAG_TX_PKT_BYTE_CNT_SMAC1                                                              ((jl_uint32)0x001430F8U)
#define MAG_TX_PKT_BYTE_CNT_SMAC1_NUM                                                          ((jl_uint32)0x00000001U)
#define MAG_TX_PKT_BYTE_CNT_SMAC1_ENTRY_SIZE                                                                        (2)
#define MAG_TX_PKT_BYTE_CNT_SMAC1_OFFSET_TX_PKT_BYTE_CNT_SMAC1_0_31                                                 (0)
#define MAG_TX_PKT_BYTE_CNT_SMAC1_OFFSET_TX_PKT_BYTE_CNT_SMAC1_0_31_WIDTH                                          (32)
#define MAG_TX_PKT_BYTE_CNT_SMAC1_OFFSET_TX_PKT_BYTE_CNT_SMAC1_32_63                                               (32)
#define MAG_TX_PKT_BYTE_CNT_SMAC1_OFFSET_TX_PKT_BYTE_CNT_SMAC1_32_63_WIDTH                                         (32)
typedef union MAG_TX_PKT_BYTE_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_byte_cnt_smac1_0_31:MAG_TX_PKT_BYTE_CNT_SMAC1_OFFSET_TX_PKT_BYTE_CNT_SMAC1_0_31_WIDTH;           //[31: 0]
        jl_uint64 tx_pkt_byte_cnt_smac1_32_63:MAG_TX_PKT_BYTE_CNT_SMAC1_OFFSET_TX_PKT_BYTE_CNT_SMAC1_32_63_WIDTH;         //[63:32]
    } BF;
    jl_uint32 val[MAG_TX_PKT_BYTE_CNT_SMAC1_ENTRY_SIZE];
} MAG_TX_PKT_BYTE_CNT_SMAC1_t;

#define MAG_TX_PKT_UC_CNT_SMAC1                                                                ((jl_uint32)0x00143100U)
#define MAG_TX_PKT_UC_CNT_SMAC1_NUM                                                            ((jl_uint32)0x00000001U)
#define MAG_TX_PKT_UC_CNT_SMAC1_ENTRY_SIZE                                                                          (2)
#define MAG_TX_PKT_UC_CNT_SMAC1_OFFSET_TX_PKT_UC_CNT_SMAC1_0_31                                                     (0)
#define MAG_TX_PKT_UC_CNT_SMAC1_OFFSET_TX_PKT_UC_CNT_SMAC1_0_31_WIDTH                                              (32)
#define MAG_TX_PKT_UC_CNT_SMAC1_OFFSET_TX_PKT_UC_CNT_SMAC1_32_63                                                   (32)
#define MAG_TX_PKT_UC_CNT_SMAC1_OFFSET_TX_PKT_UC_CNT_SMAC1_32_63_WIDTH                                             (32)
typedef union MAG_TX_PKT_UC_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_uc_cnt_smac1_0_31:MAG_TX_PKT_UC_CNT_SMAC1_OFFSET_TX_PKT_UC_CNT_SMAC1_0_31_WIDTH;                 //[31: 0]
        jl_uint64 tx_pkt_uc_cnt_smac1_32_63:MAG_TX_PKT_UC_CNT_SMAC1_OFFSET_TX_PKT_UC_CNT_SMAC1_32_63_WIDTH;               //[63:32]
    } BF;
    jl_uint32 val[MAG_TX_PKT_UC_CNT_SMAC1_ENTRY_SIZE];
} MAG_TX_PKT_UC_CNT_SMAC1_t;

#define MAG_TX_PKT_UC_BYTE_CNT_SMAC1                                                           ((jl_uint32)0x00143108U)
#define MAG_TX_PKT_UC_BYTE_CNT_SMAC1_NUM                                                       ((jl_uint32)0x00000001U)
#define MAG_TX_PKT_UC_BYTE_CNT_SMAC1_ENTRY_SIZE                                                                     (2)
#define MAG_TX_PKT_UC_BYTE_CNT_SMAC1_OFFSET_TX_PKT_UC_BYTE_CNT_SMAC1_0_31                                           (0)
#define MAG_TX_PKT_UC_BYTE_CNT_SMAC1_OFFSET_TX_PKT_UC_BYTE_CNT_SMAC1_0_31_WIDTH                                    (32)
#define MAG_TX_PKT_UC_BYTE_CNT_SMAC1_OFFSET_TX_PKT_UC_BYTE_CNT_SMAC1_32_63                                         (32)
#define MAG_TX_PKT_UC_BYTE_CNT_SMAC1_OFFSET_TX_PKT_UC_BYTE_CNT_SMAC1_32_63_WIDTH                                   (32)
typedef union MAG_TX_PKT_UC_BYTE_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_uc_byte_cnt_smac1_0_31:MAG_TX_PKT_UC_BYTE_CNT_SMAC1_OFFSET_TX_PKT_UC_BYTE_CNT_SMAC1_0_31_WIDTH;  //[31: 0]
        jl_uint64 tx_pkt_uc_byte_cnt_smac1_32_63:MAG_TX_PKT_UC_BYTE_CNT_SMAC1_OFFSET_TX_PKT_UC_BYTE_CNT_SMAC1_32_63_WIDTH;  //[63:32]
    } BF;
    jl_uint32 val[MAG_TX_PKT_UC_BYTE_CNT_SMAC1_ENTRY_SIZE];
} MAG_TX_PKT_UC_BYTE_CNT_SMAC1_t;

#define MAG_TX_PKT_MC_CNT_SMAC1                                                                ((jl_uint32)0x00143110U)
#define MAG_TX_PKT_MC_CNT_SMAC1_NUM                                                            ((jl_uint32)0x00000001U)
#define MAG_TX_PKT_MC_CNT_SMAC1_ENTRY_SIZE                                                                          (2)
#define MAG_TX_PKT_MC_CNT_SMAC1_OFFSET_TX_PKT_MC_CNT_SMAC1_0_31                                                     (0)
#define MAG_TX_PKT_MC_CNT_SMAC1_OFFSET_TX_PKT_MC_CNT_SMAC1_0_31_WIDTH                                              (32)
#define MAG_TX_PKT_MC_CNT_SMAC1_OFFSET_TX_PKT_MC_CNT_SMAC1_32_63                                                   (32)
#define MAG_TX_PKT_MC_CNT_SMAC1_OFFSET_TX_PKT_MC_CNT_SMAC1_32_63_WIDTH                                             (32)
typedef union MAG_TX_PKT_MC_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_mc_cnt_smac1_0_31:MAG_TX_PKT_MC_CNT_SMAC1_OFFSET_TX_PKT_MC_CNT_SMAC1_0_31_WIDTH;                 //[31: 0]
        jl_uint64 tx_pkt_mc_cnt_smac1_32_63:MAG_TX_PKT_MC_CNT_SMAC1_OFFSET_TX_PKT_MC_CNT_SMAC1_32_63_WIDTH;               //[63:32]
    } BF;
    jl_uint32 val[MAG_TX_PKT_MC_CNT_SMAC1_ENTRY_SIZE];
} MAG_TX_PKT_MC_CNT_SMAC1_t;

#define MAG_TX_PKT_MC_BYTE_CNT_SMAC1                                                           ((jl_uint32)0x00143118U)
#define MAG_TX_PKT_MC_BYTE_CNT_SMAC1_NUM                                                       ((jl_uint32)0x00000001U)
#define MAG_TX_PKT_MC_BYTE_CNT_SMAC1_ENTRY_SIZE                                                                     (2)
#define MAG_TX_PKT_MC_BYTE_CNT_SMAC1_OFFSET_TX_PKT_MC_BYTE_CNT_SMAC1_0_31                                           (0)
#define MAG_TX_PKT_MC_BYTE_CNT_SMAC1_OFFSET_TX_PKT_MC_BYTE_CNT_SMAC1_0_31_WIDTH                                    (32)
#define MAG_TX_PKT_MC_BYTE_CNT_SMAC1_OFFSET_TX_PKT_MC_BYTE_CNT_SMAC1_32_63                                         (32)
#define MAG_TX_PKT_MC_BYTE_CNT_SMAC1_OFFSET_TX_PKT_MC_BYTE_CNT_SMAC1_32_63_WIDTH                                   (32)
typedef union MAG_TX_PKT_MC_BYTE_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_mc_byte_cnt_smac1_0_31:MAG_TX_PKT_MC_BYTE_CNT_SMAC1_OFFSET_TX_PKT_MC_BYTE_CNT_SMAC1_0_31_WIDTH;  //[31: 0]
        jl_uint64 tx_pkt_mc_byte_cnt_smac1_32_63:MAG_TX_PKT_MC_BYTE_CNT_SMAC1_OFFSET_TX_PKT_MC_BYTE_CNT_SMAC1_32_63_WIDTH;  //[63:32]
    } BF;
    jl_uint32 val[MAG_TX_PKT_MC_BYTE_CNT_SMAC1_ENTRY_SIZE];
} MAG_TX_PKT_MC_BYTE_CNT_SMAC1_t;

#define MAG_TX_PKT_BC_CNT_SMAC1                                                                ((jl_uint32)0x00143120U)
#define MAG_TX_PKT_BC_CNT_SMAC1_NUM                                                            ((jl_uint32)0x00000001U)
#define MAG_TX_PKT_BC_CNT_SMAC1_ENTRY_SIZE                                                                          (2)
#define MAG_TX_PKT_BC_CNT_SMAC1_OFFSET_TX_PKT_BC_CNT_SMAC1_0_31                                                     (0)
#define MAG_TX_PKT_BC_CNT_SMAC1_OFFSET_TX_PKT_BC_CNT_SMAC1_0_31_WIDTH                                              (32)
#define MAG_TX_PKT_BC_CNT_SMAC1_OFFSET_TX_PKT_BC_CNT_SMAC1_32_63                                                   (32)
#define MAG_TX_PKT_BC_CNT_SMAC1_OFFSET_TX_PKT_BC_CNT_SMAC1_32_63_WIDTH                                             (32)
typedef union MAG_TX_PKT_BC_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_bc_cnt_smac1_0_31:MAG_TX_PKT_BC_CNT_SMAC1_OFFSET_TX_PKT_BC_CNT_SMAC1_0_31_WIDTH;                 //[31: 0]
        jl_uint64 tx_pkt_bc_cnt_smac1_32_63:MAG_TX_PKT_BC_CNT_SMAC1_OFFSET_TX_PKT_BC_CNT_SMAC1_32_63_WIDTH;               //[63:32]
    } BF;
    jl_uint32 val[MAG_TX_PKT_BC_CNT_SMAC1_ENTRY_SIZE];
} MAG_TX_PKT_BC_CNT_SMAC1_t;

#define MAG_TX_PKT_BC_BYTE_CNT_SMAC1                                                           ((jl_uint32)0x00143128U)
#define MAG_TX_PKT_BC_BYTE_CNT_SMAC1_NUM                                                       ((jl_uint32)0x00000001U)
#define MAG_TX_PKT_BC_BYTE_CNT_SMAC1_ENTRY_SIZE                                                                     (2)
#define MAG_TX_PKT_BC_BYTE_CNT_SMAC1_OFFSET_TX_PKT_BC_BYTE_CNT_SMAC1_0_31                                           (0)
#define MAG_TX_PKT_BC_BYTE_CNT_SMAC1_OFFSET_TX_PKT_BC_BYTE_CNT_SMAC1_0_31_WIDTH                                    (32)
#define MAG_TX_PKT_BC_BYTE_CNT_SMAC1_OFFSET_TX_PKT_BC_BYTE_CNT_SMAC1_32_63                                         (32)
#define MAG_TX_PKT_BC_BYTE_CNT_SMAC1_OFFSET_TX_PKT_BC_BYTE_CNT_SMAC1_32_63_WIDTH                                   (32)
typedef union MAG_TX_PKT_BC_BYTE_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_bc_byte_cnt_smac1_0_31:MAG_TX_PKT_BC_BYTE_CNT_SMAC1_OFFSET_TX_PKT_BC_BYTE_CNT_SMAC1_0_31_WIDTH;  //[31: 0]
        jl_uint64 tx_pkt_bc_byte_cnt_smac1_32_63:MAG_TX_PKT_BC_BYTE_CNT_SMAC1_OFFSET_TX_PKT_BC_BYTE_CNT_SMAC1_32_63_WIDTH;  //[63:32]
    } BF;
    jl_uint32 val[MAG_TX_PKT_BC_BYTE_CNT_SMAC1_ENTRY_SIZE];
} MAG_TX_PKT_BC_BYTE_CNT_SMAC1_t;

#define MAG_TX_PKT_DRP_CNT_SMAC1                                                               ((jl_uint32)0x00143130U)
#define MAG_TX_PKT_DRP_CNT_SMAC1_NUM                                                           ((jl_uint32)0x00000001U)
#define MAG_TX_PKT_DRP_CNT_SMAC1_ENTRY_SIZE                                                                         (1)
#define MAG_TX_PKT_DRP_CNT_SMAC1_OFFSET_TX_PKT_DRP_CNT_SMAC1                                                        (0)
#define MAG_TX_PKT_DRP_CNT_SMAC1_OFFSET_TX_PKT_DRP_CNT_SMAC1_WIDTH                                                 (32)
typedef union MAG_TX_PKT_DRP_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tx_pkt_drp_cnt_smac1:MAG_TX_PKT_DRP_CNT_SMAC1_OFFSET_TX_PKT_DRP_CNT_SMAC1_WIDTH;                        //[31: 0]
    } BF;
    jl_uint32 val[MAG_TX_PKT_DRP_CNT_SMAC1_ENTRY_SIZE];
} MAG_TX_PKT_DRP_CNT_SMAC1_t;

#define MAG_TX_PKT_ERR_CNT_SMAC1                                                               ((jl_uint32)0x00143134U)
#define MAG_TX_PKT_ERR_CNT_SMAC1_NUM                                                           ((jl_uint32)0x00000001U)
#define MAG_TX_PKT_ERR_CNT_SMAC1_ENTRY_SIZE                                                                         (1)
#define MAG_TX_PKT_ERR_CNT_SMAC1_OFFSET_TX_PKT_ERR_CNT_SMAC1                                                        (0)
#define MAG_TX_PKT_ERR_CNT_SMAC1_OFFSET_TX_PKT_ERR_CNT_SMAC1_WIDTH                                                 (32)
typedef union MAG_TX_PKT_ERR_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tx_pkt_err_cnt_smac1:MAG_TX_PKT_ERR_CNT_SMAC1_OFFSET_TX_PKT_ERR_CNT_SMAC1_WIDTH;                        //[31: 0]
    } BF;
    jl_uint32 val[MAG_TX_PKT_ERR_CNT_SMAC1_ENTRY_SIZE];
} MAG_TX_PKT_ERR_CNT_SMAC1_t;

#define MAG_RX_PKT_CNT_SMAC1                                                                   ((jl_uint32)0x00143138U)
#define MAG_RX_PKT_CNT_SMAC1_NUM                                                               ((jl_uint32)0x00000001U)
#define MAG_RX_PKT_CNT_SMAC1_ENTRY_SIZE                                                                             (2)
#define MAG_RX_PKT_CNT_SMAC1_OFFSET_RX_PKT_CNT_SMAC1_0_31                                                           (0)
#define MAG_RX_PKT_CNT_SMAC1_OFFSET_RX_PKT_CNT_SMAC1_0_31_WIDTH                                                    (32)
#define MAG_RX_PKT_CNT_SMAC1_OFFSET_RX_PKT_CNT_SMAC1_32_63                                                         (32)
#define MAG_RX_PKT_CNT_SMAC1_OFFSET_RX_PKT_CNT_SMAC1_32_63_WIDTH                                                   (32)
typedef union MAG_RX_PKT_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_cnt_smac1_0_31:MAG_RX_PKT_CNT_SMAC1_OFFSET_RX_PKT_CNT_SMAC1_0_31_WIDTH;                          //[31: 0]
        jl_uint64 rx_pkt_cnt_smac1_32_63:MAG_RX_PKT_CNT_SMAC1_OFFSET_RX_PKT_CNT_SMAC1_32_63_WIDTH;                        //[63:32]
    } BF;
    jl_uint32 val[MAG_RX_PKT_CNT_SMAC1_ENTRY_SIZE];
} MAG_RX_PKT_CNT_SMAC1_t;

#define MAG_RX_PKT_BYTE_CNT_SMAC1                                                              ((jl_uint32)0x00143140U)
#define MAG_RX_PKT_BYTE_CNT_SMAC1_NUM                                                          ((jl_uint32)0x00000001U)
#define MAG_RX_PKT_BYTE_CNT_SMAC1_ENTRY_SIZE                                                                        (2)
#define MAG_RX_PKT_BYTE_CNT_SMAC1_OFFSET_RX_PKT_BYTE_CNT_SMAC1_0_31                                                 (0)
#define MAG_RX_PKT_BYTE_CNT_SMAC1_OFFSET_RX_PKT_BYTE_CNT_SMAC1_0_31_WIDTH                                          (32)
#define MAG_RX_PKT_BYTE_CNT_SMAC1_OFFSET_RX_PKT_BYTE_CNT_SMAC1_32_63                                               (32)
#define MAG_RX_PKT_BYTE_CNT_SMAC1_OFFSET_RX_PKT_BYTE_CNT_SMAC1_32_63_WIDTH                                         (32)
typedef union MAG_RX_PKT_BYTE_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_byte_cnt_smac1_0_31:MAG_RX_PKT_BYTE_CNT_SMAC1_OFFSET_RX_PKT_BYTE_CNT_SMAC1_0_31_WIDTH;           //[31: 0]
        jl_uint64 rx_pkt_byte_cnt_smac1_32_63:MAG_RX_PKT_BYTE_CNT_SMAC1_OFFSET_RX_PKT_BYTE_CNT_SMAC1_32_63_WIDTH;         //[63:32]
    } BF;
    jl_uint32 val[MAG_RX_PKT_BYTE_CNT_SMAC1_ENTRY_SIZE];
} MAG_RX_PKT_BYTE_CNT_SMAC1_t;

#define MAG_RX_PKT_UC_CNT_SMAC1                                                                ((jl_uint32)0x00143148U)
#define MAG_RX_PKT_UC_CNT_SMAC1_NUM                                                            ((jl_uint32)0x00000001U)
#define MAG_RX_PKT_UC_CNT_SMAC1_ENTRY_SIZE                                                                          (2)
#define MAG_RX_PKT_UC_CNT_SMAC1_OFFSET_RX_PKT_UC_CNT_SMAC1_0_31                                                     (0)
#define MAG_RX_PKT_UC_CNT_SMAC1_OFFSET_RX_PKT_UC_CNT_SMAC1_0_31_WIDTH                                              (32)
#define MAG_RX_PKT_UC_CNT_SMAC1_OFFSET_RX_PKT_UC_CNT_SMAC1_32_63                                                   (32)
#define MAG_RX_PKT_UC_CNT_SMAC1_OFFSET_RX_PKT_UC_CNT_SMAC1_32_63_WIDTH                                             (32)
typedef union MAG_RX_PKT_UC_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_uc_cnt_smac1_0_31:MAG_RX_PKT_UC_CNT_SMAC1_OFFSET_RX_PKT_UC_CNT_SMAC1_0_31_WIDTH;                 //[31: 0]
        jl_uint64 rx_pkt_uc_cnt_smac1_32_63:MAG_RX_PKT_UC_CNT_SMAC1_OFFSET_RX_PKT_UC_CNT_SMAC1_32_63_WIDTH;               //[63:32]
    } BF;
    jl_uint32 val[MAG_RX_PKT_UC_CNT_SMAC1_ENTRY_SIZE];
} MAG_RX_PKT_UC_CNT_SMAC1_t;

#define MAG_RX_PKT_UC_BYTE_CNT_SMAC1                                                           ((jl_uint32)0x00143150U)
#define MAG_RX_PKT_UC_BYTE_CNT_SMAC1_NUM                                                       ((jl_uint32)0x00000001U)
#define MAG_RX_PKT_UC_BYTE_CNT_SMAC1_ENTRY_SIZE                                                                     (2)
#define MAG_RX_PKT_UC_BYTE_CNT_SMAC1_OFFSET_RX_PKT_UC_BYTE_CNT_SMAC1_0_31                                           (0)
#define MAG_RX_PKT_UC_BYTE_CNT_SMAC1_OFFSET_RX_PKT_UC_BYTE_CNT_SMAC1_0_31_WIDTH                                    (32)
#define MAG_RX_PKT_UC_BYTE_CNT_SMAC1_OFFSET_RX_PKT_UC_BYTE_CNT_SMAC1_32_63                                         (32)
#define MAG_RX_PKT_UC_BYTE_CNT_SMAC1_OFFSET_RX_PKT_UC_BYTE_CNT_SMAC1_32_63_WIDTH                                   (32)
typedef union MAG_RX_PKT_UC_BYTE_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_uc_byte_cnt_smac1_0_31:MAG_RX_PKT_UC_BYTE_CNT_SMAC1_OFFSET_RX_PKT_UC_BYTE_CNT_SMAC1_0_31_WIDTH;  //[31: 0]
        jl_uint64 rx_pkt_uc_byte_cnt_smac1_32_63:MAG_RX_PKT_UC_BYTE_CNT_SMAC1_OFFSET_RX_PKT_UC_BYTE_CNT_SMAC1_32_63_WIDTH;  //[63:32]
    } BF;
    jl_uint32 val[MAG_RX_PKT_UC_BYTE_CNT_SMAC1_ENTRY_SIZE];
} MAG_RX_PKT_UC_BYTE_CNT_SMAC1_t;

#define MAG_RX_PKT_MC_CNT_SMAC1                                                                ((jl_uint32)0x00143158U)
#define MAG_RX_PKT_MC_CNT_SMAC1_NUM                                                            ((jl_uint32)0x00000001U)
#define MAG_RX_PKT_MC_CNT_SMAC1_ENTRY_SIZE                                                                          (2)
#define MAG_RX_PKT_MC_CNT_SMAC1_OFFSET_RX_PKT_MC_CNT_SMAC1_0_31                                                     (0)
#define MAG_RX_PKT_MC_CNT_SMAC1_OFFSET_RX_PKT_MC_CNT_SMAC1_0_31_WIDTH                                              (32)
#define MAG_RX_PKT_MC_CNT_SMAC1_OFFSET_RX_PKT_MC_CNT_SMAC1_32_63                                                   (32)
#define MAG_RX_PKT_MC_CNT_SMAC1_OFFSET_RX_PKT_MC_CNT_SMAC1_32_63_WIDTH                                             (32)
typedef union MAG_RX_PKT_MC_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_mc_cnt_smac1_0_31:MAG_RX_PKT_MC_CNT_SMAC1_OFFSET_RX_PKT_MC_CNT_SMAC1_0_31_WIDTH;                 //[31: 0]
        jl_uint64 rx_pkt_mc_cnt_smac1_32_63:MAG_RX_PKT_MC_CNT_SMAC1_OFFSET_RX_PKT_MC_CNT_SMAC1_32_63_WIDTH;               //[63:32]
    } BF;
    jl_uint32 val[MAG_RX_PKT_MC_CNT_SMAC1_ENTRY_SIZE];
} MAG_RX_PKT_MC_CNT_SMAC1_t;

#define MAG_RX_PKT_MC_BYTE_CNT_SMAC1                                                           ((jl_uint32)0x00143160U)
#define MAG_RX_PKT_MC_BYTE_CNT_SMAC1_NUM                                                       ((jl_uint32)0x00000001U)
#define MAG_RX_PKT_MC_BYTE_CNT_SMAC1_ENTRY_SIZE                                                                     (2)
#define MAG_RX_PKT_MC_BYTE_CNT_SMAC1_OFFSET_RX_PKT_MC_BYTE_CNT_SMAC1_0_31                                           (0)
#define MAG_RX_PKT_MC_BYTE_CNT_SMAC1_OFFSET_RX_PKT_MC_BYTE_CNT_SMAC1_0_31_WIDTH                                    (32)
#define MAG_RX_PKT_MC_BYTE_CNT_SMAC1_OFFSET_RX_PKT_MC_BYTE_CNT_SMAC1_32_63                                         (32)
#define MAG_RX_PKT_MC_BYTE_CNT_SMAC1_OFFSET_RX_PKT_MC_BYTE_CNT_SMAC1_32_63_WIDTH                                   (32)
typedef union MAG_RX_PKT_MC_BYTE_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_mc_byte_cnt_smac1_0_31:MAG_RX_PKT_MC_BYTE_CNT_SMAC1_OFFSET_RX_PKT_MC_BYTE_CNT_SMAC1_0_31_WIDTH;  //[31: 0]
        jl_uint64 rx_pkt_mc_byte_cnt_smac1_32_63:MAG_RX_PKT_MC_BYTE_CNT_SMAC1_OFFSET_RX_PKT_MC_BYTE_CNT_SMAC1_32_63_WIDTH;  //[63:32]
    } BF;
    jl_uint32 val[MAG_RX_PKT_MC_BYTE_CNT_SMAC1_ENTRY_SIZE];
} MAG_RX_PKT_MC_BYTE_CNT_SMAC1_t;

#define MAG_RX_PKT_BC_CNT_SMAC1                                                                ((jl_uint32)0x00143168U)
#define MAG_RX_PKT_BC_CNT_SMAC1_NUM                                                            ((jl_uint32)0x00000001U)
#define MAG_RX_PKT_BC_CNT_SMAC1_ENTRY_SIZE                                                                          (2)
#define MAG_RX_PKT_BC_CNT_SMAC1_OFFSET_RX_PKT_BC_CNT_SMAC1_0_31                                                     (0)
#define MAG_RX_PKT_BC_CNT_SMAC1_OFFSET_RX_PKT_BC_CNT_SMAC1_0_31_WIDTH                                              (32)
#define MAG_RX_PKT_BC_CNT_SMAC1_OFFSET_RX_PKT_BC_CNT_SMAC1_32_63                                                   (32)
#define MAG_RX_PKT_BC_CNT_SMAC1_OFFSET_RX_PKT_BC_CNT_SMAC1_32_63_WIDTH                                             (32)
typedef union MAG_RX_PKT_BC_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_bc_cnt_smac1_0_31:MAG_RX_PKT_BC_CNT_SMAC1_OFFSET_RX_PKT_BC_CNT_SMAC1_0_31_WIDTH;                 //[31: 0]
        jl_uint64 rx_pkt_bc_cnt_smac1_32_63:MAG_RX_PKT_BC_CNT_SMAC1_OFFSET_RX_PKT_BC_CNT_SMAC1_32_63_WIDTH;               //[63:32]
    } BF;
    jl_uint32 val[MAG_RX_PKT_BC_CNT_SMAC1_ENTRY_SIZE];
} MAG_RX_PKT_BC_CNT_SMAC1_t;

#define MAG_RX_PKT_BC_BYTE_CNT_SMAC1                                                           ((jl_uint32)0x00143170U)
#define MAG_RX_PKT_BC_BYTE_CNT_SMAC1_NUM                                                       ((jl_uint32)0x00000001U)
#define MAG_RX_PKT_BC_BYTE_CNT_SMAC1_ENTRY_SIZE                                                                     (2)
#define MAG_RX_PKT_BC_BYTE_CNT_SMAC1_OFFSET_RX_PKT_BC_BYTE_CNT_SMAC1_0_31                                           (0)
#define MAG_RX_PKT_BC_BYTE_CNT_SMAC1_OFFSET_RX_PKT_BC_BYTE_CNT_SMAC1_0_31_WIDTH                                    (32)
#define MAG_RX_PKT_BC_BYTE_CNT_SMAC1_OFFSET_RX_PKT_BC_BYTE_CNT_SMAC1_32_63                                         (32)
#define MAG_RX_PKT_BC_BYTE_CNT_SMAC1_OFFSET_RX_PKT_BC_BYTE_CNT_SMAC1_32_63_WIDTH                                   (32)
typedef union MAG_RX_PKT_BC_BYTE_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_bc_byte_cnt_smac1_0_31:MAG_RX_PKT_BC_BYTE_CNT_SMAC1_OFFSET_RX_PKT_BC_BYTE_CNT_SMAC1_0_31_WIDTH;  //[31: 0]
        jl_uint64 rx_pkt_bc_byte_cnt_smac1_32_63:MAG_RX_PKT_BC_BYTE_CNT_SMAC1_OFFSET_RX_PKT_BC_BYTE_CNT_SMAC1_32_63_WIDTH;  //[63:32]
    } BF;
    jl_uint32 val[MAG_RX_PKT_BC_BYTE_CNT_SMAC1_ENTRY_SIZE];
} MAG_RX_PKT_BC_BYTE_CNT_SMAC1_t;

#define MAG_RX_PKT_DRP_CNT_SMAC1                                                               ((jl_uint32)0x00143178U)
#define MAG_RX_PKT_DRP_CNT_SMAC1_NUM                                                           ((jl_uint32)0x00000001U)
#define MAG_RX_PKT_DRP_CNT_SMAC1_ENTRY_SIZE                                                                         (1)
#define MAG_RX_PKT_DRP_CNT_SMAC1_OFFSET_RX_PKT_DRP_CNT_SMAC1                                                        (0)
#define MAG_RX_PKT_DRP_CNT_SMAC1_OFFSET_RX_PKT_DRP_CNT_SMAC1_WIDTH                                                 (32)
typedef union MAG_RX_PKT_DRP_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_pkt_drp_cnt_smac1:MAG_RX_PKT_DRP_CNT_SMAC1_OFFSET_RX_PKT_DRP_CNT_SMAC1_WIDTH;                        //[31: 0]
    } BF;
    jl_uint32 val[MAG_RX_PKT_DRP_CNT_SMAC1_ENTRY_SIZE];
} MAG_RX_PKT_DRP_CNT_SMAC1_t;

#define MAG_RX_PKT_CRC_ERR_CNT_SMAC1                                                           ((jl_uint32)0x0014317CU)
#define MAG_RX_PKT_CRC_ERR_CNT_SMAC1_NUM                                                       ((jl_uint32)0x00000001U)
#define MAG_RX_PKT_CRC_ERR_CNT_SMAC1_ENTRY_SIZE                                                                     (1)
#define MAG_RX_PKT_CRC_ERR_CNT_SMAC1_OFFSET_RX_PKT_CRC_ERR_CNT_SMAC1                                                (0)
#define MAG_RX_PKT_CRC_ERR_CNT_SMAC1_OFFSET_RX_PKT_CRC_ERR_CNT_SMAC1_WIDTH                                         (32)
typedef union MAG_RX_PKT_CRC_ERR_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_pkt_crc_err_cnt_smac1:MAG_RX_PKT_CRC_ERR_CNT_SMAC1_OFFSET_RX_PKT_CRC_ERR_CNT_SMAC1_WIDTH;            //[31: 0]
    } BF;
    jl_uint32 val[MAG_RX_PKT_CRC_ERR_CNT_SMAC1_ENTRY_SIZE];
} MAG_RX_PKT_CRC_ERR_CNT_SMAC1_t;

#define MAG_RX_FRAG_ERR_CNT_SMAC1                                                              ((jl_uint32)0x00143180U)
#define MAG_RX_FRAG_ERR_CNT_SMAC1_NUM                                                          ((jl_uint32)0x00000001U)
#define MAG_RX_FRAG_ERR_CNT_SMAC1_ENTRY_SIZE                                                                        (1)
#define MAG_RX_FRAG_ERR_CNT_SMAC1_OFFSET_RX_FRAG_ERR_CNT_SMAC1                                                      (0)
#define MAG_RX_FRAG_ERR_CNT_SMAC1_OFFSET_RX_FRAG_ERR_CNT_SMAC1_WIDTH                                               (32)
typedef union MAG_RX_FRAG_ERR_CNT_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_frag_err_cnt_smac1:MAG_RX_FRAG_ERR_CNT_SMAC1_OFFSET_RX_FRAG_ERR_CNT_SMAC1_WIDTH;                     //[31: 0]
    } BF;
    jl_uint32 val[MAG_RX_FRAG_ERR_CNT_SMAC1_ENTRY_SIZE];
} MAG_RX_FRAG_ERR_CNT_SMAC1_t;

#define MAG_STATISTIC_MODE_0_SMAC0                                                             ((jl_uint32)0x00143184U)
#define MAG_STATISTIC_MODE_0_SMAC0_NUM                                                         ((jl_uint32)0x00000001U)
#define MAG_STATISTIC_MODE_0_SMAC0_ENTRY_SIZE                                                                       (1)
#define MAG_STATISTIC_MODE_0_SMAC0_OFFSET_CAR_EN_SMAC0                                                              (0)
#define MAG_STATISTIC_MODE_0_SMAC0_OFFSET_CAR_EN_SMAC0_WIDTH                                                        (1)
#define MAG_STATISTIC_MODE_0_SMAC0_OFFSET_RSVD0                                                                     (1)
#define MAG_STATISTIC_MODE_0_SMAC0_OFFSET_RSVD0_WIDTH                                                               (3)
#define MAG_STATISTIC_MODE_0_SMAC0_OFFSET_MIB_EN_SMAC0                                                              (4)
#define MAG_STATISTIC_MODE_0_SMAC0_OFFSET_MIB_EN_SMAC0_WIDTH                                                       (28)
typedef union MAG_STATISTIC_MODE_0_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 car_en_smac0:MAG_STATISTIC_MODE_0_SMAC0_OFFSET_CAR_EN_SMAC0_WIDTH;                                      //[ 0: 0]
        jl_uint32 rsvd0:MAG_STATISTIC_MODE_0_SMAC0_OFFSET_RSVD0_WIDTH;                                                    //[ 3: 1]
        jl_uint32 mib_en_smac0:MAG_STATISTIC_MODE_0_SMAC0_OFFSET_MIB_EN_SMAC0_WIDTH;                                      //[31: 4]
    } BF;
    jl_uint32 val[MAG_STATISTIC_MODE_0_SMAC0_ENTRY_SIZE];
} MAG_STATISTIC_MODE_0_SMAC0_t;

#define MAG_STATISTIC_MODE_1_SMAC0                                                             ((jl_uint32)0x00143188U)
#define MAG_STATISTIC_MODE_1_SMAC0_NUM                                                         ((jl_uint32)0x00000001U)
#define MAG_STATISTIC_MODE_1_SMAC0_ENTRY_SIZE                                                                       (1)
#define MAG_STATISTIC_MODE_1_SMAC0_OFFSET_RSVD1                                                                    (12)
#define MAG_STATISTIC_MODE_1_SMAC0_OFFSET_RSVD1_WIDTH                                                              (20)
#define MAG_STATISTIC_MODE_1_SMAC0_OFFSET_MIB_CLEAR_SMAC0                                                           (0)
#define MAG_STATISTIC_MODE_1_SMAC0_OFFSET_MIB_CLEAR_SMAC0_WIDTH                                                     (1)
#define MAG_STATISTIC_MODE_1_SMAC0_OFFSET_RSVD0                                                                     (1)
#define MAG_STATISTIC_MODE_1_SMAC0_OFFSET_RSVD0_WIDTH                                                               (3)
#define MAG_STATISTIC_MODE_1_SMAC0_OFFSET_MIB_ID_SMAC0                                                              (4)
#define MAG_STATISTIC_MODE_1_SMAC0_OFFSET_MIB_ID_SMAC0_WIDTH                                                        (8)
typedef union MAG_STATISTIC_MODE_1_SMAC0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 mib_clear_smac0:MAG_STATISTIC_MODE_1_SMAC0_OFFSET_MIB_CLEAR_SMAC0_WIDTH;                                //[ 0: 0]
        jl_uint32 rsvd0:MAG_STATISTIC_MODE_1_SMAC0_OFFSET_RSVD0_WIDTH;                                                    //[ 3: 1]
        jl_uint32 mib_id_smac0:MAG_STATISTIC_MODE_1_SMAC0_OFFSET_MIB_ID_SMAC0_WIDTH;                                      //[11: 4]
        jl_uint32 rsvd1:MAG_STATISTIC_MODE_1_SMAC0_OFFSET_RSVD1_WIDTH;                                                    //[31:12]
    } BF;
    jl_uint32 val[MAG_STATISTIC_MODE_1_SMAC0_ENTRY_SIZE];
} MAG_STATISTIC_MODE_1_SMAC0_t;

#define MAG_STATISTIC_MODE_0_SMAC1                                                             ((jl_uint32)0x0014318CU)
#define MAG_STATISTIC_MODE_0_SMAC1_NUM                                                         ((jl_uint32)0x00000001U)
#define MAG_STATISTIC_MODE_0_SMAC1_ENTRY_SIZE                                                                       (1)
#define MAG_STATISTIC_MODE_0_SMAC1_OFFSET_CAR_EN_SMAC1                                                              (0)
#define MAG_STATISTIC_MODE_0_SMAC1_OFFSET_CAR_EN_SMAC1_WIDTH                                                        (1)
#define MAG_STATISTIC_MODE_0_SMAC1_OFFSET_RSVD0                                                                     (1)
#define MAG_STATISTIC_MODE_0_SMAC1_OFFSET_RSVD0_WIDTH                                                               (3)
#define MAG_STATISTIC_MODE_0_SMAC1_OFFSET_MIB_EN_SMAC1                                                              (4)
#define MAG_STATISTIC_MODE_0_SMAC1_OFFSET_MIB_EN_SMAC1_WIDTH                                                       (28)
typedef union MAG_STATISTIC_MODE_0_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 car_en_smac1:MAG_STATISTIC_MODE_0_SMAC1_OFFSET_CAR_EN_SMAC1_WIDTH;                                      //[ 0: 0]
        jl_uint32 rsvd0:MAG_STATISTIC_MODE_0_SMAC1_OFFSET_RSVD0_WIDTH;                                                    //[ 3: 1]
        jl_uint32 mib_en_smac1:MAG_STATISTIC_MODE_0_SMAC1_OFFSET_MIB_EN_SMAC1_WIDTH;                                      //[31: 4]
    } BF;
    jl_uint32 val[MAG_STATISTIC_MODE_0_SMAC1_ENTRY_SIZE];
} MAG_STATISTIC_MODE_0_SMAC1_t;

#define MAG_STATISTIC_MODE_1_SMAC1                                                             ((jl_uint32)0x00143190U)
#define MAG_STATISTIC_MODE_1_SMAC1_NUM                                                         ((jl_uint32)0x00000001U)
#define MAG_STATISTIC_MODE_1_SMAC1_ENTRY_SIZE                                                                       (1)
#define MAG_STATISTIC_MODE_1_SMAC1_OFFSET_RSVD1                                                                    (12)
#define MAG_STATISTIC_MODE_1_SMAC1_OFFSET_RSVD1_WIDTH                                                              (20)
#define MAG_STATISTIC_MODE_1_SMAC1_OFFSET_MIB_CLEAR_SMAC1                                                           (0)
#define MAG_STATISTIC_MODE_1_SMAC1_OFFSET_MIB_CLEAR_SMAC1_WIDTH                                                     (1)
#define MAG_STATISTIC_MODE_1_SMAC1_OFFSET_RSVD0                                                                     (1)
#define MAG_STATISTIC_MODE_1_SMAC1_OFFSET_RSVD0_WIDTH                                                               (3)
#define MAG_STATISTIC_MODE_1_SMAC1_OFFSET_MIB_ID_SMAC1                                                              (4)
#define MAG_STATISTIC_MODE_1_SMAC1_OFFSET_MIB_ID_SMAC1_WIDTH                                                        (8)
typedef union MAG_STATISTIC_MODE_1_SMAC1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 mib_clear_smac1:MAG_STATISTIC_MODE_1_SMAC1_OFFSET_MIB_CLEAR_SMAC1_WIDTH;                                //[ 0: 0]
        jl_uint32 rsvd0:MAG_STATISTIC_MODE_1_SMAC1_OFFSET_RSVD0_WIDTH;                                                    //[ 3: 1]
        jl_uint32 mib_id_smac1:MAG_STATISTIC_MODE_1_SMAC1_OFFSET_MIB_ID_SMAC1_WIDTH;                                      //[11: 4]
        jl_uint32 rsvd1:MAG_STATISTIC_MODE_1_SMAC1_OFFSET_RSVD1_WIDTH;                                                    //[31:12]
    } BF;
    jl_uint32 val[MAG_STATISTIC_MODE_1_SMAC1_ENTRY_SIZE];
} MAG_STATISTIC_MODE_1_SMAC1_t;

#define MAG_PACKET_CATCH_CONTOL                                                                ((jl_uint32)0x00143198U)
#define MAG_PACKET_CATCH_CONTOL_NUM                                                            ((jl_uint32)0x00000001U)
#define MAG_PACKET_CATCH_CONTOL_ENTRY_SIZE                                                                          (1)
#define MAG_PACKET_CATCH_CONTOL_OFFSET_RSVD1                                                                       (13)
#define MAG_PACKET_CATCH_CONTOL_OFFSET_RSVD1_WIDTH                                                                 (19)
#define MAG_PACKET_CATCH_CONTOL_OFFSET_CFG_CATCH_CHANNEL                                                            (0)
#define MAG_PACKET_CATCH_CONTOL_OFFSET_CFG_CATCH_CHANNEL_WIDTH                                                      (4)
#define MAG_PACKET_CATCH_CONTOL_OFFSET_CFG_CATCH_DIRECTION                                                          (4)
#define MAG_PACKET_CATCH_CONTOL_OFFSET_CFG_CATCH_DIRECTION_WIDTH                                                    (1)
#define MAG_PACKET_CATCH_CONTOL_OFFSET_RSVD0                                                                        (5)
#define MAG_PACKET_CATCH_CONTOL_OFFSET_RSVD0_WIDTH                                                                  (7)
#define MAG_PACKET_CATCH_CONTOL_OFFSET_CFG_CATCH_EN                                                                (12)
#define MAG_PACKET_CATCH_CONTOL_OFFSET_CFG_CATCH_EN_WIDTH                                                           (1)
typedef union MAG_PACKET_CATCH_CONTOL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_catch_channel:MAG_PACKET_CATCH_CONTOL_OFFSET_CFG_CATCH_CHANNEL_WIDTH;                               //[ 3: 0]
        jl_uint32 cfg_catch_direction:MAG_PACKET_CATCH_CONTOL_OFFSET_CFG_CATCH_DIRECTION_WIDTH;                           //[ 4: 4]
        jl_uint32 rsvd0:MAG_PACKET_CATCH_CONTOL_OFFSET_RSVD0_WIDTH;                                                       //[11: 5]
        jl_uint32 cfg_catch_en:MAG_PACKET_CATCH_CONTOL_OFFSET_CFG_CATCH_EN_WIDTH;                                         //[12:12]
        jl_uint32 rsvd1:MAG_PACKET_CATCH_CONTOL_OFFSET_RSVD1_WIDTH;                                                       //[31:13]
    } BF;
    jl_uint32 val[MAG_PACKET_CATCH_CONTOL_ENTRY_SIZE];
} MAG_PACKET_CATCH_CONTOL_t;

#define MAG_PACKET_CATCH_COUNT                                                                 ((jl_uint32)0x0014319CU)
#define MAG_PACKET_CATCH_COUNT_NUM                                                             ((jl_uint32)0x00000001U)
#define MAG_PACKET_CATCH_COUNT_ENTRY_SIZE                                                                           (1)
#define MAG_PACKET_CATCH_COUNT_OFFSET_RSVD0                                                                         (8)
#define MAG_PACKET_CATCH_COUNT_OFFSET_RSVD0_WIDTH                                                                  (24)
#define MAG_PACKET_CATCH_COUNT_OFFSET_DBG_CATCH_CNT                                                                 (0)
#define MAG_PACKET_CATCH_COUNT_OFFSET_DBG_CATCH_CNT_WIDTH                                                           (8)
typedef union MAG_PACKET_CATCH_COUNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_catch_cnt:MAG_PACKET_CATCH_COUNT_OFFSET_DBG_CATCH_CNT_WIDTH;                                        //[ 7: 0]
        jl_uint32 rsvd0:MAG_PACKET_CATCH_COUNT_OFFSET_RSVD0_WIDTH;                                                        //[31: 8]
    } BF;
    jl_uint32 val[MAG_PACKET_CATCH_COUNT_ENTRY_SIZE];
} MAG_PACKET_CATCH_COUNT_t;

#define MAG_PACKET_CATCH_RECORD0                                                               ((jl_uint32)0x001431A0U)
#define MAG_PACKET_CATCH_RECORD0_NUM                                                           ((jl_uint32)0x00000001U)
#define MAG_PACKET_CATCH_RECORD0_ENTRY_SIZE                                                                         (2)
#define MAG_PACKET_CATCH_RECORD0_OFFSET_DBG_CATCH_PAYLOAD0_0_31                                                     (0)
#define MAG_PACKET_CATCH_RECORD0_OFFSET_DBG_CATCH_PAYLOAD0_0_31_WIDTH                                              (32)
#define MAG_PACKET_CATCH_RECORD0_OFFSET_DBG_CATCH_PAYLOAD0_32_63                                                   (32)
#define MAG_PACKET_CATCH_RECORD0_OFFSET_DBG_CATCH_PAYLOAD0_32_63_WIDTH                                             (32)
typedef union MAG_PACKET_CATCH_RECORD0_u {
    struct __attribute__ ((packed)) {
        jl_uint64 dbg_catch_payload0_0_31:MAG_PACKET_CATCH_RECORD0_OFFSET_DBG_CATCH_PAYLOAD0_0_31_WIDTH;                  //[31: 0]
        jl_uint64 dbg_catch_payload0_32_63:MAG_PACKET_CATCH_RECORD0_OFFSET_DBG_CATCH_PAYLOAD0_32_63_WIDTH;                //[63:32]
    } BF;
    jl_uint32 val[MAG_PACKET_CATCH_RECORD0_ENTRY_SIZE];
} MAG_PACKET_CATCH_RECORD0_t;

#define MAG_PACKET_CATCH_RECORD1                                                               ((jl_uint32)0x001431A8U)
#define MAG_PACKET_CATCH_RECORD1_NUM                                                           ((jl_uint32)0x00000001U)
#define MAG_PACKET_CATCH_RECORD1_ENTRY_SIZE                                                                         (2)
#define MAG_PACKET_CATCH_RECORD1_OFFSET_DBG_CATCH_PAYLOAD1_0_31                                                     (0)
#define MAG_PACKET_CATCH_RECORD1_OFFSET_DBG_CATCH_PAYLOAD1_0_31_WIDTH                                              (32)
#define MAG_PACKET_CATCH_RECORD1_OFFSET_DBG_CATCH_PAYLOAD1_32_63                                                   (32)
#define MAG_PACKET_CATCH_RECORD1_OFFSET_DBG_CATCH_PAYLOAD1_32_63_WIDTH                                             (32)
typedef union MAG_PACKET_CATCH_RECORD1_u {
    struct __attribute__ ((packed)) {
        jl_uint64 dbg_catch_payload1_0_31:MAG_PACKET_CATCH_RECORD1_OFFSET_DBG_CATCH_PAYLOAD1_0_31_WIDTH;                  //[31: 0]
        jl_uint64 dbg_catch_payload1_32_63:MAG_PACKET_CATCH_RECORD1_OFFSET_DBG_CATCH_PAYLOAD1_32_63_WIDTH;                //[63:32]
    } BF;
    jl_uint32 val[MAG_PACKET_CATCH_RECORD1_ENTRY_SIZE];
} MAG_PACKET_CATCH_RECORD1_t;

#define MAG_PACKET_CATCH_RECORD2                                                               ((jl_uint32)0x001431B0U)
#define MAG_PACKET_CATCH_RECORD2_NUM                                                           ((jl_uint32)0x00000001U)
#define MAG_PACKET_CATCH_RECORD2_ENTRY_SIZE                                                                         (2)
#define MAG_PACKET_CATCH_RECORD2_OFFSET_DBG_CATCH_PAYLOAD2_0_31                                                     (0)
#define MAG_PACKET_CATCH_RECORD2_OFFSET_DBG_CATCH_PAYLOAD2_0_31_WIDTH                                              (32)
#define MAG_PACKET_CATCH_RECORD2_OFFSET_DBG_CATCH_PAYLOAD2_32_63                                                   (32)
#define MAG_PACKET_CATCH_RECORD2_OFFSET_DBG_CATCH_PAYLOAD2_32_63_WIDTH                                             (32)
typedef union MAG_PACKET_CATCH_RECORD2_u {
    struct __attribute__ ((packed)) {
        jl_uint64 dbg_catch_payload2_0_31:MAG_PACKET_CATCH_RECORD2_OFFSET_DBG_CATCH_PAYLOAD2_0_31_WIDTH;                  //[31: 0]
        jl_uint64 dbg_catch_payload2_32_63:MAG_PACKET_CATCH_RECORD2_OFFSET_DBG_CATCH_PAYLOAD2_32_63_WIDTH;                //[63:32]
    } BF;
    jl_uint32 val[MAG_PACKET_CATCH_RECORD2_ENTRY_SIZE];
} MAG_PACKET_CATCH_RECORD2_t;

#define MAG_PACKET_CATCH_RECORD3                                                               ((jl_uint32)0x001431B8U)
#define MAG_PACKET_CATCH_RECORD3_NUM                                                           ((jl_uint32)0x00000001U)
#define MAG_PACKET_CATCH_RECORD3_ENTRY_SIZE                                                                         (2)
#define MAG_PACKET_CATCH_RECORD3_OFFSET_DBG_CATCH_PAYLOAD3_0_31                                                     (0)
#define MAG_PACKET_CATCH_RECORD3_OFFSET_DBG_CATCH_PAYLOAD3_0_31_WIDTH                                              (32)
#define MAG_PACKET_CATCH_RECORD3_OFFSET_DBG_CATCH_PAYLOAD3_32_63                                                   (32)
#define MAG_PACKET_CATCH_RECORD3_OFFSET_DBG_CATCH_PAYLOAD3_32_63_WIDTH                                             (32)
typedef union MAG_PACKET_CATCH_RECORD3_u {
    struct __attribute__ ((packed)) {
        jl_uint64 dbg_catch_payload3_0_31:MAG_PACKET_CATCH_RECORD3_OFFSET_DBG_CATCH_PAYLOAD3_0_31_WIDTH;                  //[31: 0]
        jl_uint64 dbg_catch_payload3_32_63:MAG_PACKET_CATCH_RECORD3_OFFSET_DBG_CATCH_PAYLOAD3_32_63_WIDTH;                //[63:32]
    } BF;
    jl_uint32 val[MAG_PACKET_CATCH_RECORD3_ENTRY_SIZE];
} MAG_PACKET_CATCH_RECORD3_t;

#define MAG_CPU_TIMEOUT                                                                        ((jl_uint32)0x001431C0U)
#define MAG_CPU_TIMEOUT_NUM                                                                    ((jl_uint32)0x00000001U)
#define MAG_CPU_TIMEOUT_ENTRY_SIZE                                                                                  (1)
#define MAG_CPU_TIMEOUT_OFFSET_CFG_CPU_TIMEOUT_CYCLE                                                                (0)
#define MAG_CPU_TIMEOUT_OFFSET_CFG_CPU_TIMEOUT_CYCLE_WIDTH                                                         (32)
typedef union MAG_CPU_TIMEOUT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_cpu_timeout_cycle:MAG_CPU_TIMEOUT_OFFSET_CFG_CPU_TIMEOUT_CYCLE_WIDTH;                               //[31: 0]
    } BF;
    jl_uint32 val[MAG_CPU_TIMEOUT_ENTRY_SIZE];
} MAG_CPU_TIMEOUT_t;

#define MAG_INT_STATUS                                                                         ((jl_uint32)0x001431C4U)
#define MAG_INT_STATUS_NUM                                                                     ((jl_uint32)0x00000001U)
#define MAG_INT_STATUS_ENTRY_SIZE                                                                                   (1)
#define MAG_INT_STATUS_OFFSET_RSVD0                                                                                 (7)
#define MAG_INT_STATUS_OFFSET_RSVD0_WIDTH                                                                          (25)
#define MAG_INT_STATUS_OFFSET_INT_LP_DETECT_0                                                                       (0)
#define MAG_INT_STATUS_OFFSET_INT_LP_DETECT_0_WIDTH                                                                 (1)
#define MAG_INT_STATUS_OFFSET_INT_LP_DETECT_1                                                                       (1)
#define MAG_INT_STATUS_OFFSET_INT_LP_DETECT_1_WIDTH                                                                 (1)
#define MAG_INT_STATUS_OFFSET_INT_LP_DETECT_2                                                                       (2)
#define MAG_INT_STATUS_OFFSET_INT_LP_DETECT_2_WIDTH                                                                 (1)
#define MAG_INT_STATUS_OFFSET_INT_LP_DETECT_3                                                                       (3)
#define MAG_INT_STATUS_OFFSET_INT_LP_DETECT_3_WIDTH                                                                 (1)
#define MAG_INT_STATUS_OFFSET_INT_LP_DETECT_4                                                                       (4)
#define MAG_INT_STATUS_OFFSET_INT_LP_DETECT_4_WIDTH                                                                 (1)
#define MAG_INT_STATUS_OFFSET_INT_LP_DETECT_5                                                                       (5)
#define MAG_INT_STATUS_OFFSET_INT_LP_DETECT_5_WIDTH                                                                 (1)
#define MAG_INT_STATUS_OFFSET_INT_LP_DETECT_6                                                                       (6)
#define MAG_INT_STATUS_OFFSET_INT_LP_DETECT_6_WIDTH                                                                 (1)
typedef union MAG_INT_STATUS_u {
    struct __attribute__ ((packed)) {
        jl_uint32 int_lp_detect_0:MAG_INT_STATUS_OFFSET_INT_LP_DETECT_0_WIDTH;                                            //[ 0: 0]
        jl_uint32 int_lp_detect_1:MAG_INT_STATUS_OFFSET_INT_LP_DETECT_1_WIDTH;                                            //[ 1: 1]
        jl_uint32 int_lp_detect_2:MAG_INT_STATUS_OFFSET_INT_LP_DETECT_2_WIDTH;                                            //[ 2: 2]
        jl_uint32 int_lp_detect_3:MAG_INT_STATUS_OFFSET_INT_LP_DETECT_3_WIDTH;                                            //[ 3: 3]
        jl_uint32 int_lp_detect_4:MAG_INT_STATUS_OFFSET_INT_LP_DETECT_4_WIDTH;                                            //[ 4: 4]
        jl_uint32 int_lp_detect_5:MAG_INT_STATUS_OFFSET_INT_LP_DETECT_5_WIDTH;                                            //[ 5: 5]
        jl_uint32 int_lp_detect_6:MAG_INT_STATUS_OFFSET_INT_LP_DETECT_6_WIDTH;                                            //[ 6: 6]
        jl_uint32 rsvd0:MAG_INT_STATUS_OFFSET_RSVD0_WIDTH;                                                                //[31: 7]
    } BF;
    jl_uint32 val[MAG_INT_STATUS_ENTRY_SIZE];
} MAG_INT_STATUS_t;

#define MAG_INT_ENABLE                                                                         ((jl_uint32)0x001431C8U)
#define MAG_INT_ENABLE_NUM                                                                     ((jl_uint32)0x00000001U)
#define MAG_INT_ENABLE_ENTRY_SIZE                                                                                   (1)
#define MAG_INT_ENABLE_OFFSET_RSVD0                                                                                 (7)
#define MAG_INT_ENABLE_OFFSET_RSVD0_WIDTH                                                                          (25)
#define MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_0_EN                                                                    (0)
#define MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_0_EN_WIDTH                                                              (1)
#define MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_1_EN                                                                    (1)
#define MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_1_EN_WIDTH                                                              (1)
#define MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_2_EN                                                                    (2)
#define MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_2_EN_WIDTH                                                              (1)
#define MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_3_EN                                                                    (3)
#define MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_3_EN_WIDTH                                                              (1)
#define MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_4_EN                                                                    (4)
#define MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_4_EN_WIDTH                                                              (1)
#define MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_5_EN                                                                    (5)
#define MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_5_EN_WIDTH                                                              (1)
#define MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_6_EN                                                                    (6)
#define MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_6_EN_WIDTH                                                              (1)
typedef union MAG_INT_ENABLE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 int_lp_detect_0_en:MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_0_EN_WIDTH;                                      //[ 0: 0]
        jl_uint32 int_lp_detect_1_en:MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_1_EN_WIDTH;                                      //[ 1: 1]
        jl_uint32 int_lp_detect_2_en:MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_2_EN_WIDTH;                                      //[ 2: 2]
        jl_uint32 int_lp_detect_3_en:MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_3_EN_WIDTH;                                      //[ 3: 3]
        jl_uint32 int_lp_detect_4_en:MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_4_EN_WIDTH;                                      //[ 4: 4]
        jl_uint32 int_lp_detect_5_en:MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_5_EN_WIDTH;                                      //[ 5: 5]
        jl_uint32 int_lp_detect_6_en:MAG_INT_ENABLE_OFFSET_INT_LP_DETECT_6_EN_WIDTH;                                      //[ 6: 6]
        jl_uint32 rsvd0:MAG_INT_ENABLE_OFFSET_RSVD0_WIDTH;                                                                //[31: 7]
    } BF;
    jl_uint32 val[MAG_INT_ENABLE_ENTRY_SIZE];
} MAG_INT_ENABLE_t;

#define MAG_INT_SET                                                                            ((jl_uint32)0x001431CCU)
#define MAG_INT_SET_NUM                                                                        ((jl_uint32)0x00000001U)
#define MAG_INT_SET_ENTRY_SIZE                                                                                      (1)
#define MAG_INT_SET_OFFSET_RSVD0                                                                                    (7)
#define MAG_INT_SET_OFFSET_RSVD0_WIDTH                                                                             (25)
#define MAG_INT_SET_OFFSET_INT_LP_DETECT_0_SET                                                                      (0)
#define MAG_INT_SET_OFFSET_INT_LP_DETECT_0_SET_WIDTH                                                                (1)
#define MAG_INT_SET_OFFSET_INT_LP_DETECT_1_SET                                                                      (1)
#define MAG_INT_SET_OFFSET_INT_LP_DETECT_1_SET_WIDTH                                                                (1)
#define MAG_INT_SET_OFFSET_INT_LP_DETECT_2_SET                                                                      (2)
#define MAG_INT_SET_OFFSET_INT_LP_DETECT_2_SET_WIDTH                                                                (1)
#define MAG_INT_SET_OFFSET_INT_LP_DETECT_3_SET                                                                      (3)
#define MAG_INT_SET_OFFSET_INT_LP_DETECT_3_SET_WIDTH                                                                (1)
#define MAG_INT_SET_OFFSET_INT_LP_DETECT_4_SET                                                                      (4)
#define MAG_INT_SET_OFFSET_INT_LP_DETECT_4_SET_WIDTH                                                                (1)
#define MAG_INT_SET_OFFSET_INT_LP_DETECT_5_SET                                                                      (5)
#define MAG_INT_SET_OFFSET_INT_LP_DETECT_5_SET_WIDTH                                                                (1)
#define MAG_INT_SET_OFFSET_INT_LP_DETECT_6_SET                                                                      (6)
#define MAG_INT_SET_OFFSET_INT_LP_DETECT_6_SET_WIDTH                                                                (1)
typedef union MAG_INT_SET_u {
    struct __attribute__ ((packed)) {
        jl_uint32 int_lp_detect_0_set:MAG_INT_SET_OFFSET_INT_LP_DETECT_0_SET_WIDTH;                                       //[ 0: 0]
        jl_uint32 int_lp_detect_1_set:MAG_INT_SET_OFFSET_INT_LP_DETECT_1_SET_WIDTH;                                       //[ 1: 1]
        jl_uint32 int_lp_detect_2_set:MAG_INT_SET_OFFSET_INT_LP_DETECT_2_SET_WIDTH;                                       //[ 2: 2]
        jl_uint32 int_lp_detect_3_set:MAG_INT_SET_OFFSET_INT_LP_DETECT_3_SET_WIDTH;                                       //[ 3: 3]
        jl_uint32 int_lp_detect_4_set:MAG_INT_SET_OFFSET_INT_LP_DETECT_4_SET_WIDTH;                                       //[ 4: 4]
        jl_uint32 int_lp_detect_5_set:MAG_INT_SET_OFFSET_INT_LP_DETECT_5_SET_WIDTH;                                       //[ 5: 5]
        jl_uint32 int_lp_detect_6_set:MAG_INT_SET_OFFSET_INT_LP_DETECT_6_SET_WIDTH;                                       //[ 6: 6]
        jl_uint32 rsvd0:MAG_INT_SET_OFFSET_RSVD0_WIDTH;                                                                   //[31: 7]
    } BF;
    jl_uint32 val[MAG_INT_SET_ENTRY_SIZE];
} MAG_INT_SET_t;

#define MAG_LINK_STATUS                                                                        ((jl_uint32)0x001431D0U)
#define MAG_LINK_STATUS_NUM                                                                    ((jl_uint32)0x00000001U)
#define MAG_LINK_STATUS_ENTRY_SIZE                                                                                  (1)
#define MAG_LINK_STATUS_OFFSET_RSVD0                                                                                (8)
#define MAG_LINK_STATUS_OFFSET_RSVD0_WIDTH                                                                         (24)
#define MAG_LINK_STATUS_OFFSET_DBG_MAG_LINK_STATUS                                                                  (0)
#define MAG_LINK_STATUS_OFFSET_DBG_MAG_LINK_STATUS_WIDTH                                                            (8)
typedef union MAG_LINK_STATUS_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_mag_link_status:MAG_LINK_STATUS_OFFSET_DBG_MAG_LINK_STATUS_WIDTH;                                   //[ 7: 0]
        jl_uint32 rsvd0:MAG_LINK_STATUS_OFFSET_RSVD0_WIDTH;                                                               //[31: 8]
    } BF;
    jl_uint32 val[MAG_LINK_STATUS_ENTRY_SIZE];
} MAG_LINK_STATUS_t;

#endif /* __JL_REG_MAG_H__ */

