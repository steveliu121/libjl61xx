//reg_led.h
/*
* Automatically generated by gen_c_api.py, don't edit it
*/
#ifndef __JL_REG_LED_H__
#define __JL_REG_LED_H__

#include <jl_types.h>

#define LED_BASE                                                                               ((jl_uint32)0x00144C00U)
#define LED_BLOCK_SIZE                                                                         ((jl_uint32)0x00000400U)

#define LED_LED_CFG_0                                                                          ((jl_uint32)0x00144C00U)
#define LED_LED_CFG_0_NUM                                                                      ((jl_uint32)0x00000001U)
#define LED_LED_CFG_0_ENTRY_SIZE                                                                                    (1)
#define LED_LED_CFG_0_OFFSET_RSVD0                                                                                  (3)
#define LED_LED_CFG_0_OFFSET_RSVD0_WIDTH                                                                           (29)
#define LED_LED_CFG_0_OFFSET_CFG_P10_MODE                                                                           (0)
#define LED_LED_CFG_0_OFFSET_CFG_P10_MODE_WIDTH                                                                     (1)
#define LED_LED_CFG_0_OFFSET_CFG_P8_MODE                                                                            (1)
#define LED_LED_CFG_0_OFFSET_CFG_P8_MODE_WIDTH                                                                      (1)
#define LED_LED_CFG_0_OFFSET_CFG_P5_MODE                                                                            (2)
#define LED_LED_CFG_0_OFFSET_CFG_P5_MODE_WIDTH                                                                      (1)
typedef union LED_LED_CFG_0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_p10_mode:LED_LED_CFG_0_OFFSET_CFG_P10_MODE_WIDTH;                                                   //[ 0: 0]
        jl_uint32 cfg_p8_mode:LED_LED_CFG_0_OFFSET_CFG_P8_MODE_WIDTH;                                                     //[ 1: 1]
        jl_uint32 cfg_p5_mode:LED_LED_CFG_0_OFFSET_CFG_P5_MODE_WIDTH;                                                     //[ 2: 2]
        jl_uint32 rsvd0:LED_LED_CFG_0_OFFSET_RSVD0_WIDTH;                                                                 //[31: 3]
    } BF;
    jl_uint32 val[LED_LED_CFG_0_ENTRY_SIZE];
} LED_LED_CFG_0_t;

#define LED_LED_CFG_1                                                                          ((jl_uint32)0x00144C04U)
#define LED_LED_CFG_1_NUM                                                                      ((jl_uint32)0x00000001U)
#define LED_LED_CFG_1_ENTRY_SIZE                                                                                    (1)
#define LED_LED_CFG_1_OFFSET_RSVD0                                                                                  (3)
#define LED_LED_CFG_1_OFFSET_RSVD0_WIDTH                                                                           (29)
#define LED_LED_CFG_1_OFFSET_CFG_PARALLEL_ENABLE                                                                    (0)
#define LED_LED_CFG_1_OFFSET_CFG_PARALLEL_ENABLE_WIDTH                                                              (1)
#define LED_LED_CFG_1_OFFSET_CFG_SERIAL_ENABLE                                                                      (1)
#define LED_LED_CFG_1_OFFSET_CFG_SERIAL_ENABLE_WIDTH                                                                (1)
#define LED_LED_CFG_1_OFFSET_CFG_SCAN_ENABLE                                                                        (2)
#define LED_LED_CFG_1_OFFSET_CFG_SCAN_ENABLE_WIDTH                                                                  (1)
typedef union LED_LED_CFG_1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_parallel_enable:LED_LED_CFG_1_OFFSET_CFG_PARALLEL_ENABLE_WIDTH;                                     //[ 0: 0]
        jl_uint32 cfg_serial_enable:LED_LED_CFG_1_OFFSET_CFG_SERIAL_ENABLE_WIDTH;                                         //[ 1: 1]
        jl_uint32 cfg_scan_enable:LED_LED_CFG_1_OFFSET_CFG_SCAN_ENABLE_WIDTH;                                             //[ 2: 2]
        jl_uint32 rsvd0:LED_LED_CFG_1_OFFSET_RSVD0_WIDTH;                                                                 //[31: 3]
    } BF;
    jl_uint32 val[LED_LED_CFG_1_ENTRY_SIZE];
} LED_LED_CFG_1_t;

#define LED_LED_CFG_2                                                                          ((jl_uint32)0x00144C08U)
#define LED_LED_CFG_2_NUM                                                                      ((jl_uint32)0x00000001U)
#define LED_LED_CFG_2_ENTRY_SIZE                                                                                    (1)
#define LED_LED_CFG_2_OFFSET_RSVD0                                                                                  (2)
#define LED_LED_CFG_2_OFFSET_RSVD0_WIDTH                                                                           (30)
#define LED_LED_CFG_2_OFFSET_CFG_SERIAL_MODE                                                                        (0)
#define LED_LED_CFG_2_OFFSET_CFG_SERIAL_MODE_WIDTH                                                                  (2)
typedef union LED_LED_CFG_2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_serial_mode:LED_LED_CFG_2_OFFSET_CFG_SERIAL_MODE_WIDTH;                                             //[ 1: 0]
        jl_uint32 rsvd0:LED_LED_CFG_2_OFFSET_RSVD0_WIDTH;                                                                 //[31: 2]
    } BF;
    jl_uint32 val[LED_LED_CFG_2_ENTRY_SIZE];
} LED_LED_CFG_2_t;

#define LED_LED_CFG_3                                                                          ((jl_uint32)0x00144C0CU)
#define LED_LED_CFG_3_NUM                                                                      ((jl_uint32)0x00000001U)
#define LED_LED_CFG_3_ENTRY_SIZE                                                                                    (1)
#define LED_LED_CFG_3_OFFSET_CFG_LED_OFF_TIME                                                                       (0)
#define LED_LED_CFG_3_OFFSET_CFG_LED_OFF_TIME_WIDTH                                                                 (8)
#define LED_LED_CFG_3_OFFSET_CFG_LED_ON_TIME                                                                        (8)
#define LED_LED_CFG_3_OFFSET_CFG_LED_ON_TIME_WIDTH                                                                  (8)
#define LED_LED_CFG_3_OFFSET_CFG_LOP_OFF_TIME                                                                      (16)
#define LED_LED_CFG_3_OFFSET_CFG_LOP_OFF_TIME_WIDTH                                                                 (8)
#define LED_LED_CFG_3_OFFSET_CFG_LOP_ON_TIME                                                                       (24)
#define LED_LED_CFG_3_OFFSET_CFG_LOP_ON_TIME_WIDTH                                                                  (8)
typedef union LED_LED_CFG_3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led_off_time:LED_LED_CFG_3_OFFSET_CFG_LED_OFF_TIME_WIDTH;                                           //[ 7: 0]
        jl_uint32 cfg_led_on_time:LED_LED_CFG_3_OFFSET_CFG_LED_ON_TIME_WIDTH;                                             //[15: 8]
        jl_uint32 cfg_lop_off_time:LED_LED_CFG_3_OFFSET_CFG_LOP_OFF_TIME_WIDTH;                                           //[23:16]
        jl_uint32 cfg_lop_on_time:LED_LED_CFG_3_OFFSET_CFG_LOP_ON_TIME_WIDTH;                                             //[31:24]
    } BF;
    jl_uint32 val[LED_LED_CFG_3_ENTRY_SIZE];
} LED_LED_CFG_3_t;

#define LED_LED_CFG_4                                                                          ((jl_uint32)0x00144C10U)
#define LED_LED_CFG_4_NUM                                                                      ((jl_uint32)0x00000001U)
#define LED_LED_CFG_4_ENTRY_SIZE                                                                                    (1)
#define LED_LED_CFG_4_OFFSET_RSVD0                                                                                 (10)
#define LED_LED_CFG_4_OFFSET_RSVD0_WIDTH                                                                           (22)
#define LED_LED_CFG_4_OFFSET_CFG_LED0_DISABLE                                                                       (0)
#define LED_LED_CFG_4_OFFSET_CFG_LED0_DISABLE_WIDTH                                                                (10)
typedef union LED_LED_CFG_4_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led0_disable:LED_LED_CFG_4_OFFSET_CFG_LED0_DISABLE_WIDTH;                                           //[ 9: 0]
        jl_uint32 rsvd0:LED_LED_CFG_4_OFFSET_RSVD0_WIDTH;                                                                 //[31:10]
    } BF;
    jl_uint32 val[LED_LED_CFG_4_ENTRY_SIZE];
} LED_LED_CFG_4_t;

#define LED_LED_CFG_5                                                                          ((jl_uint32)0x00144C14U)
#define LED_LED_CFG_5_NUM                                                                      ((jl_uint32)0x00000001U)
#define LED_LED_CFG_5_ENTRY_SIZE                                                                                    (1)
#define LED_LED_CFG_5_OFFSET_RSVD0                                                                                 (10)
#define LED_LED_CFG_5_OFFSET_RSVD0_WIDTH                                                                           (22)
#define LED_LED_CFG_5_OFFSET_CFG_LED1_DISABLE                                                                       (0)
#define LED_LED_CFG_5_OFFSET_CFG_LED1_DISABLE_WIDTH                                                                (10)
typedef union LED_LED_CFG_5_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led1_disable:LED_LED_CFG_5_OFFSET_CFG_LED1_DISABLE_WIDTH;                                           //[ 9: 0]
        jl_uint32 rsvd0:LED_LED_CFG_5_OFFSET_RSVD0_WIDTH;                                                                 //[31:10]
    } BF;
    jl_uint32 val[LED_LED_CFG_5_ENTRY_SIZE];
} LED_LED_CFG_5_t;

#define LED_LED_CFG_6                                                                          ((jl_uint32)0x00144C18U)
#define LED_LED_CFG_6_NUM                                                                      ((jl_uint32)0x00000001U)
#define LED_LED_CFG_6_ENTRY_SIZE                                                                                    (1)
#define LED_LED_CFG_6_OFFSET_RSVD0                                                                                 (10)
#define LED_LED_CFG_6_OFFSET_RSVD0_WIDTH                                                                           (22)
#define LED_LED_CFG_6_OFFSET_CFG_LED2_DISABLE                                                                       (0)
#define LED_LED_CFG_6_OFFSET_CFG_LED2_DISABLE_WIDTH                                                                (10)
typedef union LED_LED_CFG_6_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led2_disable:LED_LED_CFG_6_OFFSET_CFG_LED2_DISABLE_WIDTH;                                           //[ 9: 0]
        jl_uint32 rsvd0:LED_LED_CFG_6_OFFSET_RSVD0_WIDTH;                                                                 //[31:10]
    } BF;
    jl_uint32 val[LED_LED_CFG_6_ENTRY_SIZE];
} LED_LED_CFG_6_t;

#define LED_LED_CFG_7                                                                          ((jl_uint32)0x00144C1CU)
#define LED_LED_CFG_7_NUM                                                                      ((jl_uint32)0x00000001U)
#define LED_LED_CFG_7_ENTRY_SIZE                                                                                    (1)
#define LED_LED_CFG_7_OFFSET_RSVD0                                                                                 (10)
#define LED_LED_CFG_7_OFFSET_RSVD0_WIDTH                                                                           (22)
#define LED_LED_CFG_7_OFFSET_CFG_LED0_SRC_MASK                                                                      (0)
#define LED_LED_CFG_7_OFFSET_CFG_LED0_SRC_MASK_WIDTH                                                               (10)
typedef union LED_LED_CFG_7_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led0_src_mask:LED_LED_CFG_7_OFFSET_CFG_LED0_SRC_MASK_WIDTH;                                         //[ 9: 0]
        jl_uint32 rsvd0:LED_LED_CFG_7_OFFSET_RSVD0_WIDTH;                                                                 //[31:10]
    } BF;
    jl_uint32 val[LED_LED_CFG_7_ENTRY_SIZE];
} LED_LED_CFG_7_t;

#define LED_LED_CFG_8                                                                          ((jl_uint32)0x00144C20U)
#define LED_LED_CFG_8_NUM                                                                      ((jl_uint32)0x00000001U)
#define LED_LED_CFG_8_ENTRY_SIZE                                                                                    (1)
#define LED_LED_CFG_8_OFFSET_RSVD0                                                                                 (10)
#define LED_LED_CFG_8_OFFSET_RSVD0_WIDTH                                                                           (22)
#define LED_LED_CFG_8_OFFSET_CFG_LED1_SRC_MASK                                                                      (0)
#define LED_LED_CFG_8_OFFSET_CFG_LED1_SRC_MASK_WIDTH                                                               (10)
typedef union LED_LED_CFG_8_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led1_src_mask:LED_LED_CFG_8_OFFSET_CFG_LED1_SRC_MASK_WIDTH;                                         //[ 9: 0]
        jl_uint32 rsvd0:LED_LED_CFG_8_OFFSET_RSVD0_WIDTH;                                                                 //[31:10]
    } BF;
    jl_uint32 val[LED_LED_CFG_8_ENTRY_SIZE];
} LED_LED_CFG_8_t;

#define LED_LED_CFG_9                                                                          ((jl_uint32)0x00144C24U)
#define LED_LED_CFG_9_NUM                                                                      ((jl_uint32)0x00000001U)
#define LED_LED_CFG_9_ENTRY_SIZE                                                                                    (1)
#define LED_LED_CFG_9_OFFSET_RSVD0                                                                                 (10)
#define LED_LED_CFG_9_OFFSET_RSVD0_WIDTH                                                                           (22)
#define LED_LED_CFG_9_OFFSET_CFG_LED2_SRC_MASK                                                                      (0)
#define LED_LED_CFG_9_OFFSET_CFG_LED2_SRC_MASK_WIDTH                                                               (10)
typedef union LED_LED_CFG_9_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led2_src_mask:LED_LED_CFG_9_OFFSET_CFG_LED2_SRC_MASK_WIDTH;                                         //[ 9: 0]
        jl_uint32 rsvd0:LED_LED_CFG_9_OFFSET_RSVD0_WIDTH;                                                                 //[31:10]
    } BF;
    jl_uint32 val[LED_LED_CFG_9_ENTRY_SIZE];
} LED_LED_CFG_9_t;

#define LED_LED_CFG_10                                                                         ((jl_uint32)0x00144C28U)
#define LED_LED_CFG_10_NUM                                                                     ((jl_uint32)0x00000001U)
#define LED_LED_CFG_10_ENTRY_SIZE                                                                                   (1)
#define LED_LED_CFG_10_OFFSET_RSVD0                                                                                (18)
#define LED_LED_CFG_10_OFFSET_RSVD0_WIDTH                                                                          (14)
#define LED_LED_CFG_10_OFFSET_CFG_SCAN_TIME                                                                         (0)
#define LED_LED_CFG_10_OFFSET_CFG_SCAN_TIME_WIDTH                                                                  (18)
typedef union LED_LED_CFG_10_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_scan_time:LED_LED_CFG_10_OFFSET_CFG_SCAN_TIME_WIDTH;                                                //[17: 0]
        jl_uint32 rsvd0:LED_LED_CFG_10_OFFSET_RSVD0_WIDTH;                                                                //[31:18]
    } BF;
    jl_uint32 val[LED_LED_CFG_10_ENTRY_SIZE];
} LED_LED_CFG_10_t;

#define LED_LED_CFG_11                                                                         ((jl_uint32)0x00144C2CU)
#define LED_LED_CFG_11_NUM                                                                     ((jl_uint32)0x00000001U)
#define LED_LED_CFG_11_ENTRY_SIZE                                                                                   (1)
#define LED_LED_CFG_11_OFFSET_RSVD0                                                                                (10)
#define LED_LED_CFG_11_OFFSET_RSVD0_WIDTH                                                                          (22)
#define LED_LED_CFG_11_OFFSET_CFG_PLED0_POLARITY                                                                    (0)
#define LED_LED_CFG_11_OFFSET_CFG_PLED0_POLARITY_WIDTH                                                             (10)
typedef union LED_LED_CFG_11_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_pled0_polarity:LED_LED_CFG_11_OFFSET_CFG_PLED0_POLARITY_WIDTH;                                      //[ 9: 0]
        jl_uint32 rsvd0:LED_LED_CFG_11_OFFSET_RSVD0_WIDTH;                                                                //[31:10]
    } BF;
    jl_uint32 val[LED_LED_CFG_11_ENTRY_SIZE];
} LED_LED_CFG_11_t;

#define LED_LED_CFG_12                                                                         ((jl_uint32)0x00144C30U)
#define LED_LED_CFG_12_NUM                                                                     ((jl_uint32)0x00000001U)
#define LED_LED_CFG_12_ENTRY_SIZE                                                                                   (1)
#define LED_LED_CFG_12_OFFSET_RSVD0                                                                                (10)
#define LED_LED_CFG_12_OFFSET_RSVD0_WIDTH                                                                          (22)
#define LED_LED_CFG_12_OFFSET_CFG_PLED1_POLARITY                                                                    (0)
#define LED_LED_CFG_12_OFFSET_CFG_PLED1_POLARITY_WIDTH                                                             (10)
typedef union LED_LED_CFG_12_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_pled1_polarity:LED_LED_CFG_12_OFFSET_CFG_PLED1_POLARITY_WIDTH;                                      //[ 9: 0]
        jl_uint32 rsvd0:LED_LED_CFG_12_OFFSET_RSVD0_WIDTH;                                                                //[31:10]
    } BF;
    jl_uint32 val[LED_LED_CFG_12_ENTRY_SIZE];
} LED_LED_CFG_12_t;

#define LED_LED_CFG_13                                                                         ((jl_uint32)0x00144C34U)
#define LED_LED_CFG_13_NUM                                                                     ((jl_uint32)0x00000001U)
#define LED_LED_CFG_13_ENTRY_SIZE                                                                                   (1)
#define LED_LED_CFG_13_OFFSET_RSVD0                                                                                (10)
#define LED_LED_CFG_13_OFFSET_RSVD0_WIDTH                                                                          (22)
#define LED_LED_CFG_13_OFFSET_CFG_PLED2_POLARITY                                                                    (0)
#define LED_LED_CFG_13_OFFSET_CFG_PLED2_POLARITY_WIDTH                                                             (10)
typedef union LED_LED_CFG_13_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_pled2_polarity:LED_LED_CFG_13_OFFSET_CFG_PLED2_POLARITY_WIDTH;                                      //[ 9: 0]
        jl_uint32 rsvd0:LED_LED_CFG_13_OFFSET_RSVD0_WIDTH;                                                                //[31:10]
    } BF;
    jl_uint32 val[LED_LED_CFG_13_ENTRY_SIZE];
} LED_LED_CFG_13_t;

#define LED_LED_CFG_14                                                                         ((jl_uint32)0x00144C38U)
#define LED_LED_CFG_14_NUM                                                                     ((jl_uint32)0x00000001U)
#define LED_LED_CFG_14_ENTRY_SIZE                                                                                   (1)
#define LED_LED_CFG_14_OFFSET_RSVD0                                                                                 (2)
#define LED_LED_CFG_14_OFFSET_RSVD0_WIDTH                                                                          (30)
#define LED_LED_CFG_14_OFFSET_CFG_SLEDA_POLARITY                                                                    (0)
#define LED_LED_CFG_14_OFFSET_CFG_SLEDA_POLARITY_WIDTH                                                              (1)
#define LED_LED_CFG_14_OFFSET_CFG_SLEDB_POLARITY                                                                    (1)
#define LED_LED_CFG_14_OFFSET_CFG_SLEDB_POLARITY_WIDTH                                                              (1)
typedef union LED_LED_CFG_14_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_sleda_polarity:LED_LED_CFG_14_OFFSET_CFG_SLEDA_POLARITY_WIDTH;                                      //[ 0: 0]
        jl_uint32 cfg_sledb_polarity:LED_LED_CFG_14_OFFSET_CFG_SLEDB_POLARITY_WIDTH;                                      //[ 1: 1]
        jl_uint32 rsvd0:LED_LED_CFG_14_OFFSET_RSVD0_WIDTH;                                                                //[31: 2]
    } BF;
    jl_uint32 val[LED_LED_CFG_14_ENTRY_SIZE];
} LED_LED_CFG_14_t;

#define LED_LED_CFG_15                                                                         ((jl_uint32)0x00144C3CU)
#define LED_LED_CFG_15_NUM                                                                     ((jl_uint32)0x00000001U)
#define LED_LED_CFG_15_ENTRY_SIZE                                                                                   (1)
#define LED_LED_CFG_15_OFFSET_RSVD0                                                                                 (1)
#define LED_LED_CFG_15_OFFSET_RSVD0_WIDTH                                                                          (31)
#define LED_LED_CFG_15_OFFSET_CFG_SERIAL_LED_POLARITY                                                               (0)
#define LED_LED_CFG_15_OFFSET_CFG_SERIAL_LED_POLARITY_WIDTH                                                         (1)
typedef union LED_LED_CFG_15_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_serial_led_polarity:LED_LED_CFG_15_OFFSET_CFG_SERIAL_LED_POLARITY_WIDTH;                            //[ 0: 0]
        jl_uint32 rsvd0:LED_LED_CFG_15_OFFSET_RSVD0_WIDTH;                                                                //[31: 1]
    } BF;
    jl_uint32 val[LED_LED_CFG_15_ENTRY_SIZE];
} LED_LED_CFG_15_t;

#define LED_BUZZE_POLARITY                                                                     ((jl_uint32)0x00144C40U)
#define LED_BUZZE_POLARITY_NUM                                                                 ((jl_uint32)0x00000001U)
#define LED_BUZZE_POLARITY_ENTRY_SIZE                                                                               (1)
#define LED_BUZZE_POLARITY_OFFSET_RSVD0                                                                             (1)
#define LED_BUZZE_POLARITY_OFFSET_RSVD0_WIDTH                                                                      (31)
#define LED_BUZZE_POLARITY_OFFSET_CFG_BUZZER_POLARITY                                                               (0)
#define LED_BUZZE_POLARITY_OFFSET_CFG_BUZZER_POLARITY_WIDTH                                                         (1)
typedef union LED_BUZZE_POLARITY_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_buzzer_polarity:LED_BUZZE_POLARITY_OFFSET_CFG_BUZZER_POLARITY_WIDTH;                                //[ 0: 0]
        jl_uint32 rsvd0:LED_BUZZE_POLARITY_OFFSET_RSVD0_WIDTH;                                                            //[31: 1]
    } BF;
    jl_uint32 val[LED_BUZZE_POLARITY_ENTRY_SIZE];
} LED_BUZZE_POLARITY_t;

#define LED_DISABLE_BUZZE                                                                      ((jl_uint32)0x00144C44U)
#define LED_DISABLE_BUZZE_NUM                                                                  ((jl_uint32)0x00000001U)
#define LED_DISABLE_BUZZE_ENTRY_SIZE                                                                                (1)
#define LED_DISABLE_BUZZE_OFFSET_RSVD0                                                                              (1)
#define LED_DISABLE_BUZZE_OFFSET_RSVD0_WIDTH                                                                       (31)
#define LED_DISABLE_BUZZE_OFFSET_CFG_BUZZER_DISABLE                                                                 (0)
#define LED_DISABLE_BUZZE_OFFSET_CFG_BUZZER_DISABLE_WIDTH                                                           (1)
typedef union LED_DISABLE_BUZZE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_buzzer_disable:LED_DISABLE_BUZZE_OFFSET_CFG_BUZZER_DISABLE_WIDTH;                                   //[ 0: 0]
        jl_uint32 rsvd0:LED_DISABLE_BUZZE_OFFSET_RSVD0_WIDTH;                                                             //[31: 1]
    } BF;
    jl_uint32 val[LED_DISABLE_BUZZE_ENTRY_SIZE];
} LED_DISABLE_BUZZE_t;

#define LED_BUZZER_CTRL                                                                        ((jl_uint32)0x00144C48U)
#define LED_BUZZER_CTRL_NUM                                                                    ((jl_uint32)0x00000001U)
#define LED_BUZZER_CTRL_ENTRY_SIZE                                                                                  (1)
#define LED_BUZZER_CTRL_OFFSET_CFG_BUZZ_OFF_TIME                                                                    (0)
#define LED_BUZZER_CTRL_OFFSET_CFG_BUZZ_OFF_TIME_WIDTH                                                             (16)
#define LED_BUZZER_CTRL_OFFSET_CFG_BUZZ_ON_TIME                                                                    (16)
#define LED_BUZZER_CTRL_OFFSET_CFG_BUZZ_ON_TIME_WIDTH                                                              (16)
typedef union LED_BUZZER_CTRL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_buzz_off_time:LED_BUZZER_CTRL_OFFSET_CFG_BUZZ_OFF_TIME_WIDTH;                                       //[15: 0]
        jl_uint32 cfg_buzz_on_time:LED_BUZZER_CTRL_OFFSET_CFG_BUZZ_ON_TIME_WIDTH;                                         //[31:16]
    } BF;
    jl_uint32 val[LED_BUZZER_CTRL_ENTRY_SIZE];
} LED_BUZZER_CTRL_t;

#define LED_LED_INIT_TRIG                                                                      ((jl_uint32)0x00144C4CU)
#define LED_LED_INIT_TRIG_NUM                                                                  ((jl_uint32)0x00000001U)
#define LED_LED_INIT_TRIG_ENTRY_SIZE                                                                                (1)
#define LED_LED_INIT_TRIG_OFFSET_RSVD0                                                                              (1)
#define LED_LED_INIT_TRIG_OFFSET_RSVD0_WIDTH                                                                       (31)
#define LED_LED_INIT_TRIG_OFFSET_CFG_LED_INIT_TRIG                                                                  (0)
#define LED_LED_INIT_TRIG_OFFSET_CFG_LED_INIT_TRIG_WIDTH                                                            (1)
typedef union LED_LED_INIT_TRIG_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led_init_trig:LED_LED_INIT_TRIG_OFFSET_CFG_LED_INIT_TRIG_WIDTH;                                     //[ 0: 0]
        jl_uint32 rsvd0:LED_LED_INIT_TRIG_OFFSET_RSVD0_WIDTH;                                                             //[31: 1]
    } BF;
    jl_uint32 val[LED_LED_INIT_TRIG_ENTRY_SIZE];
} LED_LED_INIT_TRIG_t;

#define LED_PWR_LIGHT_EN                                                                       ((jl_uint32)0x00144C50U)
#define LED_PWR_LIGHT_EN_NUM                                                                   ((jl_uint32)0x00000001U)
#define LED_PWR_LIGHT_EN_ENTRY_SIZE                                                                                 (1)
#define LED_PWR_LIGHT_EN_OFFSET_RSVD0                                                                               (3)
#define LED_PWR_LIGHT_EN_OFFSET_RSVD0_WIDTH                                                                        (29)
#define LED_PWR_LIGHT_EN_OFFSET_CFG_LED2_PWRLIGHT_EN                                                                (0)
#define LED_PWR_LIGHT_EN_OFFSET_CFG_LED2_PWRLIGHT_EN_WIDTH                                                          (1)
#define LED_PWR_LIGHT_EN_OFFSET_CFG_LED1_PWRLIGHT_EN                                                                (1)
#define LED_PWR_LIGHT_EN_OFFSET_CFG_LED1_PWRLIGHT_EN_WIDTH                                                          (1)
#define LED_PWR_LIGHT_EN_OFFSET_CFG_LED0_PWRLIGHT_EN                                                                (2)
#define LED_PWR_LIGHT_EN_OFFSET_CFG_LED0_PWRLIGHT_EN_WIDTH                                                          (1)
typedef union LED_PWR_LIGHT_EN_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led2_pwrlight_en:LED_PWR_LIGHT_EN_OFFSET_CFG_LED2_PWRLIGHT_EN_WIDTH;                                //[ 0: 0]
        jl_uint32 cfg_led1_pwrlight_en:LED_PWR_LIGHT_EN_OFFSET_CFG_LED1_PWRLIGHT_EN_WIDTH;                                //[ 1: 1]
        jl_uint32 cfg_led0_pwrlight_en:LED_PWR_LIGHT_EN_OFFSET_CFG_LED0_PWRLIGHT_EN_WIDTH;                                //[ 2: 2]
        jl_uint32 rsvd0:LED_PWR_LIGHT_EN_OFFSET_RSVD0_WIDTH;                                                              //[31: 3]
    } BF;
    jl_uint32 val[LED_PWR_LIGHT_EN_ENTRY_SIZE];
} LED_PWR_LIGHT_EN_t;

#define LED_PWR_LIGHT_CTRL                                                                     ((jl_uint32)0x00144C54U)
#define LED_PWR_LIGHT_CTRL_NUM                                                                 ((jl_uint32)0x00000001U)
#define LED_PWR_LIGHT_CTRL_ENTRY_SIZE                                                                               (1)
#define LED_PWR_LIGHT_CTRL_OFFSET_RSVD0                                                                            (20)
#define LED_PWR_LIGHT_CTRL_OFFSET_RSVD0_WIDTH                                                                      (12)
#define LED_PWR_LIGHT_CTRL_OFFSET_CFG_PWRLIGHT_OFF_TIME                                                             (0)
#define LED_PWR_LIGHT_CTRL_OFFSET_CFG_PWRLIGHT_OFF_TIME_WIDTH                                                       (8)
#define LED_PWR_LIGHT_CTRL_OFFSET_CFG_PWRLIGHT_ON_TIME                                                              (8)
#define LED_PWR_LIGHT_CTRL_OFFSET_CFG_PWRLIGHT_ON_TIME_WIDTH                                                        (8)
#define LED_PWR_LIGHT_CTRL_OFFSET_CFG_PWRLIGHT_TIMES                                                               (16)
#define LED_PWR_LIGHT_CTRL_OFFSET_CFG_PWRLIGHT_TIMES_WIDTH                                                          (4)
typedef union LED_PWR_LIGHT_CTRL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_pwrlight_off_time:LED_PWR_LIGHT_CTRL_OFFSET_CFG_PWRLIGHT_OFF_TIME_WIDTH;                            //[ 7: 0]
        jl_uint32 cfg_pwrlight_on_time:LED_PWR_LIGHT_CTRL_OFFSET_CFG_PWRLIGHT_ON_TIME_WIDTH;                              //[15: 8]
        jl_uint32 cfg_pwrlight_times:LED_PWR_LIGHT_CTRL_OFFSET_CFG_PWRLIGHT_TIMES_WIDTH;                                  //[19:16]
        jl_uint32 rsvd0:LED_PWR_LIGHT_CTRL_OFFSET_RSVD0_WIDTH;                                                            //[31:20]
    } BF;
    jl_uint32 val[LED_PWR_LIGHT_CTRL_ENTRY_SIZE];
} LED_PWR_LIGHT_CTRL_t;

#define LED_ENABLE_LED_TDR                                                                     ((jl_uint32)0x00144C58U)
#define LED_ENABLE_LED_TDR_NUM                                                                 ((jl_uint32)0x00000001U)
#define LED_ENABLE_LED_TDR_ENTRY_SIZE                                                                               (1)
#define LED_ENABLE_LED_TDR_OFFSET_RSVD0                                                                            (17)
#define LED_ENABLE_LED_TDR_OFFSET_RSVD0_WIDTH                                                                      (15)
#define LED_ENABLE_LED_TDR_OFFSET_CFG_LED_TDR_ENABLE                                                                (0)
#define LED_ENABLE_LED_TDR_OFFSET_CFG_LED_TDR_ENABLE_WIDTH                                                          (8)
#define LED_ENABLE_LED_TDR_OFFSET_CFG_LED_TDR_FAKE_ENABLE                                                           (8)
#define LED_ENABLE_LED_TDR_OFFSET_CFG_LED_TDR_FAKE_ENABLE_WIDTH                                                     (8)
#define LED_ENABLE_LED_TDR_OFFSET_CFG_TDR_SCAN_ENABLE                                                              (16)
#define LED_ENABLE_LED_TDR_OFFSET_CFG_TDR_SCAN_ENABLE_WIDTH                                                         (1)
typedef union LED_ENABLE_LED_TDR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led_tdr_enable:LED_ENABLE_LED_TDR_OFFSET_CFG_LED_TDR_ENABLE_WIDTH;                                  //[ 7: 0]
        jl_uint32 cfg_led_tdr_fake_enable:LED_ENABLE_LED_TDR_OFFSET_CFG_LED_TDR_FAKE_ENABLE_WIDTH;                        //[15: 8]
        jl_uint32 cfg_tdr_scan_enable:LED_ENABLE_LED_TDR_OFFSET_CFG_TDR_SCAN_ENABLE_WIDTH;                                //[16:16]
        jl_uint32 rsvd0:LED_ENABLE_LED_TDR_OFFSET_RSVD0_WIDTH;                                                            //[31:17]
    } BF;
    jl_uint32 val[LED_ENABLE_LED_TDR_ENTRY_SIZE];
} LED_ENABLE_LED_TDR_t;

#define LED_TDR_TEST_TIME                                                                      ((jl_uint32)0x00144C5CU)
#define LED_TDR_TEST_TIME_NUM                                                                  ((jl_uint32)0x00000001U)
#define LED_TDR_TEST_TIME_ENTRY_SIZE                                                                                (1)
#define LED_TDR_TEST_TIME_OFFSET_RSVD0                                                                             (11)
#define LED_TDR_TEST_TIME_OFFSET_RSVD0_WIDTH                                                                       (21)
#define LED_TDR_TEST_TIME_OFFSET_CFG_TDR_TESTING_TIME                                                               (0)
#define LED_TDR_TEST_TIME_OFFSET_CFG_TDR_TESTING_TIME_WIDTH                                                        (11)
typedef union LED_TDR_TEST_TIME_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_tdr_testing_time:LED_TDR_TEST_TIME_OFFSET_CFG_TDR_TESTING_TIME_WIDTH;                               //[10: 0]
        jl_uint32 rsvd0:LED_TDR_TEST_TIME_OFFSET_RSVD0_WIDTH;                                                             //[31:11]
    } BF;
    jl_uint32 val[LED_TDR_TEST_TIME_ENTRY_SIZE];
} LED_TDR_TEST_TIME_t;

#define LED_TDR_RESULT_TIME                                                                    ((jl_uint32)0x00144C60U)
#define LED_TDR_RESULT_TIME_NUM                                                                ((jl_uint32)0x00000001U)
#define LED_TDR_RESULT_TIME_ENTRY_SIZE                                                                              (1)
#define LED_TDR_RESULT_TIME_OFFSET_RSVD0                                                                           (11)
#define LED_TDR_RESULT_TIME_OFFSET_RSVD0_WIDTH                                                                     (21)
#define LED_TDR_RESULT_TIME_OFFSET_CFG_TDR_RESULT_TIME                                                              (0)
#define LED_TDR_RESULT_TIME_OFFSET_CFG_TDR_RESULT_TIME_WIDTH                                                       (11)
typedef union LED_TDR_RESULT_TIME_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_tdr_result_time:LED_TDR_RESULT_TIME_OFFSET_CFG_TDR_RESULT_TIME_WIDTH;                               //[10: 0]
        jl_uint32 rsvd0:LED_TDR_RESULT_TIME_OFFSET_RSVD0_WIDTH;                                                           //[31:11]
    } BF;
    jl_uint32 val[LED_TDR_RESULT_TIME_ENTRY_SIZE];
} LED_TDR_RESULT_TIME_t;

#define LED_TDR_END_TIME                                                                       ((jl_uint32)0x00144C64U)
#define LED_TDR_END_TIME_NUM                                                                   ((jl_uint32)0x00000001U)
#define LED_TDR_END_TIME_ENTRY_SIZE                                                                                 (1)
#define LED_TDR_END_TIME_OFFSET_RSVD0                                                                              (11)
#define LED_TDR_END_TIME_OFFSET_RSVD0_WIDTH                                                                        (21)
#define LED_TDR_END_TIME_OFFSET_CFG_TDR_END_TIME                                                                    (0)
#define LED_TDR_END_TIME_OFFSET_CFG_TDR_END_TIME_WIDTH                                                             (11)
typedef union LED_TDR_END_TIME_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_tdr_end_time:LED_TDR_END_TIME_OFFSET_CFG_TDR_END_TIME_WIDTH;                                        //[10: 0]
        jl_uint32 rsvd0:LED_TDR_END_TIME_OFFSET_RSVD0_WIDTH;                                                              //[31:11]
    } BF;
    jl_uint32 val[LED_TDR_END_TIME_ENTRY_SIZE];
} LED_TDR_END_TIME_t;

#define LED_LED_TDR_FORMAT                                                                     ((jl_uint32)0x00144C68U)
#define LED_LED_TDR_FORMAT_NUM                                                                 ((jl_uint32)0x00000001U)
#define LED_LED_TDR_FORMAT_ENTRY_SIZE                                                                               (1)
#define LED_LED_TDR_FORMAT_OFFSET_RSVD0                                                                             (2)
#define LED_LED_TDR_FORMAT_OFFSET_RSVD0_WIDTH                                                                      (30)
#define LED_LED_TDR_FORMAT_OFFSET_CFG_RESULT_LED_FORMAT                                                             (0)
#define LED_LED_TDR_FORMAT_OFFSET_CFG_RESULT_LED_FORMAT_WIDTH                                                       (1)
#define LED_LED_TDR_FORMAT_OFFSET_CFG_TESTING_LED_FORMAT                                                            (1)
#define LED_LED_TDR_FORMAT_OFFSET_CFG_TESTING_LED_FORMAT_WIDTH                                                      (1)
typedef union LED_LED_TDR_FORMAT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_result_led_format:LED_LED_TDR_FORMAT_OFFSET_CFG_RESULT_LED_FORMAT_WIDTH;                            //[ 0: 0]
        jl_uint32 cfg_testing_led_format:LED_LED_TDR_FORMAT_OFFSET_CFG_TESTING_LED_FORMAT_WIDTH;                          //[ 1: 1]
        jl_uint32 rsvd0:LED_LED_TDR_FORMAT_OFFSET_RSVD0_WIDTH;                                                            //[31: 2]
    } BF;
    jl_uint32 val[LED_LED_TDR_FORMAT_ENTRY_SIZE];
} LED_LED_TDR_FORMAT_t;

#define LED_LED_TDR_MODE                                                                       ((jl_uint32)0x00144C6CU)
#define LED_LED_TDR_MODE_NUM                                                                   ((jl_uint32)0x00000001U)
#define LED_LED_TDR_MODE_ENTRY_SIZE                                                                                 (1)
#define LED_LED_TDR_MODE_OFFSET_RSVD0                                                                              (12)
#define LED_LED_TDR_MODE_OFFSET_RSVD0_WIDTH                                                                        (20)
#define LED_LED_TDR_MODE_OFFSET_CFG_LED0_TDR_MODE                                                                   (0)
#define LED_LED_TDR_MODE_OFFSET_CFG_LED0_TDR_MODE_WIDTH                                                             (4)
#define LED_LED_TDR_MODE_OFFSET_CFG_LED1_TDR_MODE                                                                   (4)
#define LED_LED_TDR_MODE_OFFSET_CFG_LED1_TDR_MODE_WIDTH                                                             (4)
#define LED_LED_TDR_MODE_OFFSET_CFG_LED2_TDR_MODE                                                                   (8)
#define LED_LED_TDR_MODE_OFFSET_CFG_LED2_TDR_MODE_WIDTH                                                             (4)
typedef union LED_LED_TDR_MODE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_led0_tdr_mode:LED_LED_TDR_MODE_OFFSET_CFG_LED0_TDR_MODE_WIDTH;                                      //[ 3: 0]
        jl_uint32 cfg_led1_tdr_mode:LED_LED_TDR_MODE_OFFSET_CFG_LED1_TDR_MODE_WIDTH;                                      //[ 7: 4]
        jl_uint32 cfg_led2_tdr_mode:LED_LED_TDR_MODE_OFFSET_CFG_LED2_TDR_MODE_WIDTH;                                      //[11: 8]
        jl_uint32 rsvd0:LED_LED_TDR_MODE_OFFSET_RSVD0_WIDTH;                                                              //[31:12]
    } BF;
    jl_uint32 val[LED_LED_TDR_MODE_ENTRY_SIZE];
} LED_LED_TDR_MODE_t;

#define LED_LED_TDR_STATUS                                                                     ((jl_uint32)0x00144C70U)
#define LED_LED_TDR_STATUS_NUM                                                                 ((jl_uint32)0x00000001U)
#define LED_LED_TDR_STATUS_ENTRY_SIZE                                                                               (1)
#define LED_LED_TDR_STATUS_OFFSET_RSVD0                                                                             (1)
#define LED_LED_TDR_STATUS_OFFSET_RSVD0_WIDTH                                                                      (31)
#define LED_LED_TDR_STATUS_OFFSET_STATUS_TDR_BUSY                                                                   (0)
#define LED_LED_TDR_STATUS_OFFSET_STATUS_TDR_BUSY_WIDTH                                                             (1)
typedef union LED_LED_TDR_STATUS_u {
    struct __attribute__ ((packed)) {
        jl_uint32 status_tdr_busy:LED_LED_TDR_STATUS_OFFSET_STATUS_TDR_BUSY_WIDTH;                                        //[ 0: 0]
        jl_uint32 rsvd0:LED_LED_TDR_STATUS_OFFSET_RSVD0_WIDTH;                                                            //[31: 1]
    } BF;
    jl_uint32 val[LED_LED_TDR_STATUS_ENTRY_SIZE];
} LED_LED_TDR_STATUS_t;

#endif /* __JL_REG_LED_H__ */

