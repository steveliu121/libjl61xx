//reg_lmac_adp.h
/*
* Automatically generated by gen_c_api.py, don't edit it
*/
#ifndef __JL_REG_LMAC_ADP_H__
#define __JL_REG_LMAC_ADP_H__

#include <jl_types.h>

#define LMAC_ADP7_BASE                                                                         ((jl_uint32)0x00143C00U)
#define LMAC_ADP7_BLOCK_SIZE                                                                   ((jl_uint32)0x00000400U)
#define LMAC_ADP6_BASE                                                                         ((jl_uint32)0x00143800U)
#define LMAC_ADP6_BLOCK_SIZE                                                                   ((jl_uint32)0x00000400U)
#define LMAC_ADP5_BASE                                                                         ((jl_uint32)0x00143400U)
#define LMAC_ADP5_BLOCK_SIZE                                                                   ((jl_uint32)0x00000400U)
#define LMAC_ADP4_BASE                                                                         ((jl_uint32)0x00143000U)
#define LMAC_ADP4_BLOCK_SIZE                                                                   ((jl_uint32)0x00000400U)
#define LMAC_ADP3_BASE                                                                         ((jl_uint32)0x00142C00U)
#define LMAC_ADP3_BLOCK_SIZE                                                                   ((jl_uint32)0x00000400U)
#define LMAC_ADP2_BASE                                                                         ((jl_uint32)0x00142800U)
#define LMAC_ADP2_BLOCK_SIZE                                                                   ((jl_uint32)0x00000400U)
#define LMAC_ADP1_BASE                                                                         ((jl_uint32)0x00142400U)
#define LMAC_ADP1_BLOCK_SIZE                                                                   ((jl_uint32)0x00000400U)
#define LMAC_ADP0_BASE                                                                         ((jl_uint32)0x00142000U)
#define LMAC_ADP0_BLOCK_SIZE                                                                   ((jl_uint32)0x00000400U)

#define LMAC_ADP_MAC_MODER                                                                     ((jl_uint32)0x00142000U)
#define LMAC_ADP_MAC_MODER_NUM                                                                 ((jl_uint32)0x00000001U)
#define LMAC_ADP_MAC_MODER_ENTRY_SIZE                                                                               (1)
#define LMAC_ADP_MAC_MODER_OFFSET_RSVD1                                                                            (31)
#define LMAC_ADP_MAC_MODER_OFFSET_RSVD1_WIDTH                                                                       (1)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_TX_EN_FLUSH_EN                                                                (0)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_TX_EN_FLUSH_EN_WIDTH                                                          (1)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_RX_CRC_STRIP_EN                                                               (1)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_RX_CRC_STRIP_EN_WIDTH                                                         (1)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_RX_BRO_EN                                                                     (2)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_RX_BRO_EN_WIDTH                                                               (1)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_RX_PRO_EN                                                                     (3)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_RX_PRO_EN_WIDTH                                                               (1)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_RX_PASS_ALL                                                                   (4)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_RX_PASS_ALL_WIDTH                                                             (1)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_STEADY_MODE                                                                   (5)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_STEADY_MODE_WIDTH                                                             (1)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_TX_PAD_EN                                                                     (6)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_TX_PAD_EN_WIDTH                                                               (1)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_TX_CRC_EN                                                                     (7)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_TX_CRC_EN_WIDTH                                                               (1)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_RX_PAUSE_STOP_TX_EN                                                           (8)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_RX_PAUSE_STOP_TX_EN_WIDTH                                                     (1)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_NO_DROP_ON_MAX_RETRY                                                          (9)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_NO_DROP_ON_MAX_RETRY_WIDTH                                                    (1)
#define LMAC_ADP_MAC_MODER_OFFSET_RSVD0                                                                            (10)
#define LMAC_ADP_MAC_MODER_OFFSET_RSVD0_WIDTH                                                                       (6)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_RX_MAX_PKTLEN                                                                (16)
#define LMAC_ADP_MAC_MODER_OFFSET_CFG_RX_MAX_PKTLEN_WIDTH                                                          (15)
typedef union LMAC_ADP_MAC_MODER_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_tx_en_flush_en:LMAC_ADP_MAC_MODER_OFFSET_CFG_TX_EN_FLUSH_EN_WIDTH;                                  //[ 0: 0]
        jl_uint32 cfg_rx_crc_strip_en:LMAC_ADP_MAC_MODER_OFFSET_CFG_RX_CRC_STRIP_EN_WIDTH;                                //[ 1: 1]
        jl_uint32 cfg_rx_bro_en:LMAC_ADP_MAC_MODER_OFFSET_CFG_RX_BRO_EN_WIDTH;                                            //[ 2: 2]
        jl_uint32 cfg_rx_pro_en:LMAC_ADP_MAC_MODER_OFFSET_CFG_RX_PRO_EN_WIDTH;                                            //[ 3: 3]
        jl_uint32 cfg_rx_pass_all:LMAC_ADP_MAC_MODER_OFFSET_CFG_RX_PASS_ALL_WIDTH;                                        //[ 4: 4]
        jl_uint32 cfg_steady_mode:LMAC_ADP_MAC_MODER_OFFSET_CFG_STEADY_MODE_WIDTH;                                        //[ 5: 5]
        jl_uint32 cfg_tx_pad_en:LMAC_ADP_MAC_MODER_OFFSET_CFG_TX_PAD_EN_WIDTH;                                            //[ 6: 6]
        jl_uint32 cfg_tx_crc_en:LMAC_ADP_MAC_MODER_OFFSET_CFG_TX_CRC_EN_WIDTH;                                            //[ 7: 7]
        jl_uint32 cfg_rx_pause_stop_tx_en:LMAC_ADP_MAC_MODER_OFFSET_CFG_RX_PAUSE_STOP_TX_EN_WIDTH;                        //[ 8: 8]
        jl_uint32 cfg_no_drop_on_max_retry:LMAC_ADP_MAC_MODER_OFFSET_CFG_NO_DROP_ON_MAX_RETRY_WIDTH;                      //[ 9: 9]
        jl_uint32 rsvd0:LMAC_ADP_MAC_MODER_OFFSET_RSVD0_WIDTH;                                                            //[15:10]
        jl_uint32 cfg_rx_max_pktlen:LMAC_ADP_MAC_MODER_OFFSET_CFG_RX_MAX_PKTLEN_WIDTH;                                    //[30:16]
        jl_uint32 rsvd1:LMAC_ADP_MAC_MODER_OFFSET_RSVD1_WIDTH;                                                            //[31:31]
    } BF;
    jl_uint32 val[LMAC_ADP_MAC_MODER_ENTRY_SIZE];
} LMAC_ADP_MAC_MODER_t;

#define LMAC_ADP_INT_STATUS                                                                    ((jl_uint32)0x00142004U)
#define LMAC_ADP_INT_STATUS_NUM                                                                ((jl_uint32)0x00000001U)
#define LMAC_ADP_INT_STATUS_ENTRY_SIZE                                                                              (1)
#define LMAC_ADP_INT_STATUS_OFFSET_RSVD0                                                                            (5)
#define LMAC_ADP_INT_STATUS_OFFSET_RSVD0_WIDTH                                                                     (27)
#define LMAC_ADP_INT_STATUS_OFFSET_INT_TX_UNDERRUN                                                                  (0)
#define LMAC_ADP_INT_STATUS_OFFSET_INT_TX_UNDERRUN_WIDTH                                                            (1)
#define LMAC_ADP_INT_STATUS_OFFSET_INT_RX_OVERRUN                                                                   (1)
#define LMAC_ADP_INT_STATUS_OFFSET_INT_RX_OVERRUN_WIDTH                                                             (1)
#define LMAC_ADP_INT_STATUS_OFFSET_INT_LINK_DOWN                                                                    (2)
#define LMAC_ADP_INT_STATUS_OFFSET_INT_LINK_DOWN_WIDTH                                                              (1)
#define LMAC_ADP_INT_STATUS_OFFSET_INT_LINK_UP                                                                      (3)
#define LMAC_ADP_INT_STATUS_OFFSET_INT_LINK_UP_WIDTH                                                                (1)
#define LMAC_ADP_INT_STATUS_OFFSET_INT_DWC                                                                          (4)
#define LMAC_ADP_INT_STATUS_OFFSET_INT_DWC_WIDTH                                                                    (1)
typedef union LMAC_ADP_INT_STATUS_u {
    struct __attribute__ ((packed)) {
        jl_uint32 int_tx_underrun:LMAC_ADP_INT_STATUS_OFFSET_INT_TX_UNDERRUN_WIDTH;                                       //[ 0: 0]
        jl_uint32 int_rx_overrun:LMAC_ADP_INT_STATUS_OFFSET_INT_RX_OVERRUN_WIDTH;                                         //[ 1: 1]
        jl_uint32 int_link_down:LMAC_ADP_INT_STATUS_OFFSET_INT_LINK_DOWN_WIDTH;                                           //[ 2: 2]
        jl_uint32 int_link_up:LMAC_ADP_INT_STATUS_OFFSET_INT_LINK_UP_WIDTH;                                               //[ 3: 3]
        jl_uint32 int_dwc:LMAC_ADP_INT_STATUS_OFFSET_INT_DWC_WIDTH;                                                       //[ 4: 4]
        jl_uint32 rsvd0:LMAC_ADP_INT_STATUS_OFFSET_RSVD0_WIDTH;                                                           //[31: 5]
    } BF;
    jl_uint32 val[LMAC_ADP_INT_STATUS_ENTRY_SIZE];
} LMAC_ADP_INT_STATUS_t;

#define LMAC_ADP_INT_ENABLE                                                                    ((jl_uint32)0x00142008U)
#define LMAC_ADP_INT_ENABLE_NUM                                                                ((jl_uint32)0x00000001U)
#define LMAC_ADP_INT_ENABLE_ENTRY_SIZE                                                                              (1)
#define LMAC_ADP_INT_ENABLE_OFFSET_RSVD0                                                                            (5)
#define LMAC_ADP_INT_ENABLE_OFFSET_RSVD0_WIDTH                                                                     (27)
#define LMAC_ADP_INT_ENABLE_OFFSET_INT_TX_UNDERRUN_EN                                                               (0)
#define LMAC_ADP_INT_ENABLE_OFFSET_INT_TX_UNDERRUN_EN_WIDTH                                                         (1)
#define LMAC_ADP_INT_ENABLE_OFFSET_INT_RX_OVERRUN_EN                                                                (1)
#define LMAC_ADP_INT_ENABLE_OFFSET_INT_RX_OVERRUN_EN_WIDTH                                                          (1)
#define LMAC_ADP_INT_ENABLE_OFFSET_INT_LINK_DOWN_EN                                                                 (2)
#define LMAC_ADP_INT_ENABLE_OFFSET_INT_LINK_DOWN_EN_WIDTH                                                           (1)
#define LMAC_ADP_INT_ENABLE_OFFSET_INT_LINK_UP_EN                                                                   (3)
#define LMAC_ADP_INT_ENABLE_OFFSET_INT_LINK_UP_EN_WIDTH                                                             (1)
#define LMAC_ADP_INT_ENABLE_OFFSET_INT_DWC_EN                                                                       (4)
#define LMAC_ADP_INT_ENABLE_OFFSET_INT_DWC_EN_WIDTH                                                                 (1)
typedef union LMAC_ADP_INT_ENABLE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 int_tx_underrun_en:LMAC_ADP_INT_ENABLE_OFFSET_INT_TX_UNDERRUN_EN_WIDTH;                                 //[ 0: 0]
        jl_uint32 int_rx_overrun_en:LMAC_ADP_INT_ENABLE_OFFSET_INT_RX_OVERRUN_EN_WIDTH;                                   //[ 1: 1]
        jl_uint32 int_link_down_en:LMAC_ADP_INT_ENABLE_OFFSET_INT_LINK_DOWN_EN_WIDTH;                                     //[ 2: 2]
        jl_uint32 int_link_up_en:LMAC_ADP_INT_ENABLE_OFFSET_INT_LINK_UP_EN_WIDTH;                                         //[ 3: 3]
        jl_uint32 int_dwc_en:LMAC_ADP_INT_ENABLE_OFFSET_INT_DWC_EN_WIDTH;                                                 //[ 4: 4]
        jl_uint32 rsvd0:LMAC_ADP_INT_ENABLE_OFFSET_RSVD0_WIDTH;                                                           //[31: 5]
    } BF;
    jl_uint32 val[LMAC_ADP_INT_ENABLE_ENTRY_SIZE];
} LMAC_ADP_INT_ENABLE_t;

#define LMAC_ADP_INT_SET                                                                       ((jl_uint32)0x0014200CU)
#define LMAC_ADP_INT_SET_NUM                                                                   ((jl_uint32)0x00000001U)
#define LMAC_ADP_INT_SET_ENTRY_SIZE                                                                                 (1)
#define LMAC_ADP_INT_SET_OFFSET_RSVD0                                                                               (5)
#define LMAC_ADP_INT_SET_OFFSET_RSVD0_WIDTH                                                                        (27)
#define LMAC_ADP_INT_SET_OFFSET_INT_TX_UNDERRUN_SET                                                                 (0)
#define LMAC_ADP_INT_SET_OFFSET_INT_TX_UNDERRUN_SET_WIDTH                                                           (1)
#define LMAC_ADP_INT_SET_OFFSET_INT_RX_OVERRUN_SET                                                                  (1)
#define LMAC_ADP_INT_SET_OFFSET_INT_RX_OVERRUN_SET_WIDTH                                                            (1)
#define LMAC_ADP_INT_SET_OFFSET_INT_LINK_DOWN_SET                                                                   (2)
#define LMAC_ADP_INT_SET_OFFSET_INT_LINK_DOWN_SET_WIDTH                                                             (1)
#define LMAC_ADP_INT_SET_OFFSET_INT_LINK_UP_SET                                                                     (3)
#define LMAC_ADP_INT_SET_OFFSET_INT_LINK_UP_SET_WIDTH                                                               (1)
#define LMAC_ADP_INT_SET_OFFSET_INT_DWC_SET                                                                         (4)
#define LMAC_ADP_INT_SET_OFFSET_INT_DWC_SET_WIDTH                                                                   (1)
typedef union LMAC_ADP_INT_SET_u {
    struct __attribute__ ((packed)) {
        jl_uint32 int_tx_underrun_set:LMAC_ADP_INT_SET_OFFSET_INT_TX_UNDERRUN_SET_WIDTH;                                  //[ 0: 0]
        jl_uint32 int_rx_overrun_set:LMAC_ADP_INT_SET_OFFSET_INT_RX_OVERRUN_SET_WIDTH;                                    //[ 1: 1]
        jl_uint32 int_link_down_set:LMAC_ADP_INT_SET_OFFSET_INT_LINK_DOWN_SET_WIDTH;                                      //[ 2: 2]
        jl_uint32 int_link_up_set:LMAC_ADP_INT_SET_OFFSET_INT_LINK_UP_SET_WIDTH;                                          //[ 3: 3]
        jl_uint32 int_dwc_set:LMAC_ADP_INT_SET_OFFSET_INT_DWC_SET_WIDTH;                                                  //[ 4: 4]
        jl_uint32 rsvd0:LMAC_ADP_INT_SET_OFFSET_RSVD0_WIDTH;                                                              //[31: 5]
    } BF;
    jl_uint32 val[LMAC_ADP_INT_SET_ENTRY_SIZE];
} LMAC_ADP_INT_SET_t;

#define LMAC_ADP_TX_FIFO_CONTROL                                                               ((jl_uint32)0x00142010U)
#define LMAC_ADP_TX_FIFO_CONTROL_NUM                                                           ((jl_uint32)0x00000001U)
#define LMAC_ADP_TX_FIFO_CONTROL_ENTRY_SIZE                                                                         (1)
#define LMAC_ADP_TX_FIFO_CONTROL_OFFSET_RSVD1                                                                      (14)
#define LMAC_ADP_TX_FIFO_CONTROL_OFFSET_RSVD1_WIDTH                                                                (18)
#define LMAC_ADP_TX_FIFO_CONTROL_OFFSET_CFG_RETRY_BUFF_MAX_DEPTH                                                    (0)
#define LMAC_ADP_TX_FIFO_CONTROL_OFFSET_CFG_RETRY_BUFF_MAX_DEPTH_WIDTH                                              (7)
#define LMAC_ADP_TX_FIFO_CONTROL_OFFSET_RSVD0                                                                       (7)
#define LMAC_ADP_TX_FIFO_CONTROL_OFFSET_RSVD0_WIDTH                                                                 (1)
#define LMAC_ADP_TX_FIFO_CONTROL_OFFSET_CFG_TX_FIFO_THRD                                                            (8)
#define LMAC_ADP_TX_FIFO_CONTROL_OFFSET_CFG_TX_FIFO_THRD_WIDTH                                                      (6)
typedef union LMAC_ADP_TX_FIFO_CONTROL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 cfg_retry_buff_max_depth:LMAC_ADP_TX_FIFO_CONTROL_OFFSET_CFG_RETRY_BUFF_MAX_DEPTH_WIDTH;                //[ 6: 0]
        jl_uint32 rsvd0:LMAC_ADP_TX_FIFO_CONTROL_OFFSET_RSVD0_WIDTH;                                                      //[ 7: 7]
        jl_uint32 cfg_tx_fifo_thrd:LMAC_ADP_TX_FIFO_CONTROL_OFFSET_CFG_TX_FIFO_THRD_WIDTH;                                //[13: 8]
        jl_uint32 rsvd1:LMAC_ADP_TX_FIFO_CONTROL_OFFSET_RSVD1_WIDTH;                                                      //[31:14]
    } BF;
    jl_uint32 val[LMAC_ADP_TX_FIFO_CONTROL_ENTRY_SIZE];
} LMAC_ADP_TX_FIFO_CONTROL_t;

#define LMAC_ADP_TX_FIFO_STATUS                                                                ((jl_uint32)0x00142014U)
#define LMAC_ADP_TX_FIFO_STATUS_NUM                                                            ((jl_uint32)0x00000001U)
#define LMAC_ADP_TX_FIFO_STATUS_ENTRY_SIZE                                                                          (1)
#define LMAC_ADP_TX_FIFO_STATUS_OFFSET_RSVD2                                                                       (21)
#define LMAC_ADP_TX_FIFO_STATUS_OFFSET_RSVD2_WIDTH                                                                 (11)
#define LMAC_ADP_TX_FIFO_STATUS_OFFSET_DBG_MACTX_FIFO_DEPTH                                                         (0)
#define LMAC_ADP_TX_FIFO_STATUS_OFFSET_DBG_MACTX_FIFO_DEPTH_WIDTH                                                   (5)
#define LMAC_ADP_TX_FIFO_STATUS_OFFSET_RSVD1                                                                        (5)
#define LMAC_ADP_TX_FIFO_STATUS_OFFSET_RSVD1_WIDTH                                                                  (3)
#define LMAC_ADP_TX_FIFO_STATUS_OFFSET_DBG_RETRY_BUFF_WADDR                                                         (8)
#define LMAC_ADP_TX_FIFO_STATUS_OFFSET_DBG_RETRY_BUFF_WADDR_WIDTH                                                   (5)
#define LMAC_ADP_TX_FIFO_STATUS_OFFSET_RSVD0                                                                       (13)
#define LMAC_ADP_TX_FIFO_STATUS_OFFSET_RSVD0_WIDTH                                                                  (3)
#define LMAC_ADP_TX_FIFO_STATUS_OFFSET_DBG_RETRY_BUFF_RADDR                                                        (16)
#define LMAC_ADP_TX_FIFO_STATUS_OFFSET_DBG_RETRY_BUFF_RADDR_WIDTH                                                   (5)
typedef union LMAC_ADP_TX_FIFO_STATUS_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_mactx_fifo_depth:LMAC_ADP_TX_FIFO_STATUS_OFFSET_DBG_MACTX_FIFO_DEPTH_WIDTH;                         //[ 4: 0]
        jl_uint32 rsvd1:LMAC_ADP_TX_FIFO_STATUS_OFFSET_RSVD1_WIDTH;                                                       //[ 7: 5]
        jl_uint32 dbg_retry_buff_waddr:LMAC_ADP_TX_FIFO_STATUS_OFFSET_DBG_RETRY_BUFF_WADDR_WIDTH;                         //[12: 8]
        jl_uint32 rsvd0:LMAC_ADP_TX_FIFO_STATUS_OFFSET_RSVD0_WIDTH;                                                       //[15:13]
        jl_uint32 dbg_retry_buff_raddr:LMAC_ADP_TX_FIFO_STATUS_OFFSET_DBG_RETRY_BUFF_RADDR_WIDTH;                         //[20:16]
        jl_uint32 rsvd2:LMAC_ADP_TX_FIFO_STATUS_OFFSET_RSVD2_WIDTH;                                                       //[31:21]
    } BF;
    jl_uint32 val[LMAC_ADP_TX_FIFO_STATUS_ENTRY_SIZE];
} LMAC_ADP_TX_FIFO_STATUS_t;

#define LMAC_ADP_RX_LOOP_FRAME_CONTROL                                                         ((jl_uint32)0x00142018U)
#define LMAC_ADP_RX_LOOP_FRAME_CONTROL_NUM                                                     ((jl_uint32)0x00000001U)
#define LMAC_ADP_RX_LOOP_FRAME_CONTROL_ENTRY_SIZE                                                                   (2)
#define LMAC_ADP_RX_LOOP_FRAME_CONTROL_OFFSET_RSVD0                                                                (48)
#define LMAC_ADP_RX_LOOP_FRAME_CONTROL_OFFSET_RSVD0_WIDTH                                                          (16)
#define LMAC_ADP_RX_LOOP_FRAME_CONTROL_OFFSET_CFG_LP_FRM_MAX_TTL                                                    (0)
#define LMAC_ADP_RX_LOOP_FRAME_CONTROL_OFFSET_CFG_LP_FRM_MAX_TTL_WIDTH                                             (16)
#define LMAC_ADP_RX_LOOP_FRAME_CONTROL_OFFSET_CFG_LP_FRM_ETYPE                                                     (16)
#define LMAC_ADP_RX_LOOP_FRAME_CONTROL_OFFSET_CFG_LP_FRM_ETYPE_WIDTH                                               (16)
#define LMAC_ADP_RX_LOOP_FRAME_CONTROL_OFFSET_CFG_LP_FRM_OPCODE                                                    (32)
#define LMAC_ADP_RX_LOOP_FRAME_CONTROL_OFFSET_CFG_LP_FRM_OPCODE_WIDTH                                              (16)
typedef union LMAC_ADP_RX_LOOP_FRAME_CONTROL_u {
    struct __attribute__ ((packed)) {
        jl_uint64 cfg_lp_frm_max_ttl:LMAC_ADP_RX_LOOP_FRAME_CONTROL_OFFSET_CFG_LP_FRM_MAX_TTL_WIDTH;                      //[15: 0]
        jl_uint64 cfg_lp_frm_etype:LMAC_ADP_RX_LOOP_FRAME_CONTROL_OFFSET_CFG_LP_FRM_ETYPE_WIDTH;                          //[31:16]
        jl_uint64 cfg_lp_frm_opcode:LMAC_ADP_RX_LOOP_FRAME_CONTROL_OFFSET_CFG_LP_FRM_OPCODE_WIDTH;                        //[47:32]
        jl_uint64 rsvd0:LMAC_ADP_RX_LOOP_FRAME_CONTROL_OFFSET_RSVD0_WIDTH;                                                //[63:48]
    } BF;
    jl_uint32 val[LMAC_ADP_RX_LOOP_FRAME_CONTROL_ENTRY_SIZE];
} LMAC_ADP_RX_LOOP_FRAME_CONTROL_t;

#define LMAC_ADP_TX_DATA_IN_CNT0                                                               ((jl_uint32)0x00142020U)
#define LMAC_ADP_TX_DATA_IN_CNT0_NUM                                                           ((jl_uint32)0x00000001U)
#define LMAC_ADP_TX_DATA_IN_CNT0_ENTRY_SIZE                                                                         (2)
#define LMAC_ADP_TX_DATA_IN_CNT0_OFFSET_DBG_DP2MAC_ERR_CNT                                                          (0)
#define LMAC_ADP_TX_DATA_IN_CNT0_OFFSET_DBG_DP2MAC_ERR_CNT_WIDTH                                                   (32)
#define LMAC_ADP_TX_DATA_IN_CNT0_OFFSET_DBG_DP2MAC_VALID_CNT                                                       (32)
#define LMAC_ADP_TX_DATA_IN_CNT0_OFFSET_DBG_DP2MAC_VALID_CNT_WIDTH                                                 (32)
typedef union LMAC_ADP_TX_DATA_IN_CNT0_u {
    struct __attribute__ ((packed)) {
        jl_uint64 dbg_dp2mac_err_cnt:LMAC_ADP_TX_DATA_IN_CNT0_OFFSET_DBG_DP2MAC_ERR_CNT_WIDTH;                            //[31: 0]
        jl_uint64 dbg_dp2mac_valid_cnt:LMAC_ADP_TX_DATA_IN_CNT0_OFFSET_DBG_DP2MAC_VALID_CNT_WIDTH;                        //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_TX_DATA_IN_CNT0_ENTRY_SIZE];
} LMAC_ADP_TX_DATA_IN_CNT0_t;

#define LMAC_ADP_TX_DATA_IN_CNT1                                                               ((jl_uint32)0x00142028U)
#define LMAC_ADP_TX_DATA_IN_CNT1_NUM                                                           ((jl_uint32)0x00000001U)
#define LMAC_ADP_TX_DATA_IN_CNT1_ENTRY_SIZE                                                                         (2)
#define LMAC_ADP_TX_DATA_IN_CNT1_OFFSET_DBG_DP2MAC_EOP_CNT                                                          (0)
#define LMAC_ADP_TX_DATA_IN_CNT1_OFFSET_DBG_DP2MAC_EOP_CNT_WIDTH                                                   (32)
#define LMAC_ADP_TX_DATA_IN_CNT1_OFFSET_DBG_DP2MAC_SOP_CNT                                                         (32)
#define LMAC_ADP_TX_DATA_IN_CNT1_OFFSET_DBG_DP2MAC_SOP_CNT_WIDTH                                                   (32)
typedef union LMAC_ADP_TX_DATA_IN_CNT1_u {
    struct __attribute__ ((packed)) {
        jl_uint64 dbg_dp2mac_eop_cnt:LMAC_ADP_TX_DATA_IN_CNT1_OFFSET_DBG_DP2MAC_EOP_CNT_WIDTH;                            //[31: 0]
        jl_uint64 dbg_dp2mac_sop_cnt:LMAC_ADP_TX_DATA_IN_CNT1_OFFSET_DBG_DP2MAC_SOP_CNT_WIDTH;                            //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_TX_DATA_IN_CNT1_ENTRY_SIZE];
} LMAC_ADP_TX_DATA_IN_CNT1_t;

#define LMAC_ADP_RX_DATA_OUT_CNT0                                                              ((jl_uint32)0x00142030U)
#define LMAC_ADP_RX_DATA_OUT_CNT0_NUM                                                          ((jl_uint32)0x00000001U)
#define LMAC_ADP_RX_DATA_OUT_CNT0_ENTRY_SIZE                                                                        (2)
#define LMAC_ADP_RX_DATA_OUT_CNT0_OFFSET_DBG_MAC2DP_ERR_CNT                                                         (0)
#define LMAC_ADP_RX_DATA_OUT_CNT0_OFFSET_DBG_MAC2DP_ERR_CNT_WIDTH                                                  (32)
#define LMAC_ADP_RX_DATA_OUT_CNT0_OFFSET_DBG_MAC2DP_VALID_CNT                                                      (32)
#define LMAC_ADP_RX_DATA_OUT_CNT0_OFFSET_DBG_MAC2DP_VALID_CNT_WIDTH                                                (32)
typedef union LMAC_ADP_RX_DATA_OUT_CNT0_u {
    struct __attribute__ ((packed)) {
        jl_uint64 dbg_mac2dp_err_cnt:LMAC_ADP_RX_DATA_OUT_CNT0_OFFSET_DBG_MAC2DP_ERR_CNT_WIDTH;                           //[31: 0]
        jl_uint64 dbg_mac2dp_valid_cnt:LMAC_ADP_RX_DATA_OUT_CNT0_OFFSET_DBG_MAC2DP_VALID_CNT_WIDTH;                       //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_RX_DATA_OUT_CNT0_ENTRY_SIZE];
} LMAC_ADP_RX_DATA_OUT_CNT0_t;

#define LMAC_ADP_RX_DATA_OUT_CNT1                                                              ((jl_uint32)0x00142038U)
#define LMAC_ADP_RX_DATA_OUT_CNT1_NUM                                                          ((jl_uint32)0x00000001U)
#define LMAC_ADP_RX_DATA_OUT_CNT1_ENTRY_SIZE                                                                        (2)
#define LMAC_ADP_RX_DATA_OUT_CNT1_OFFSET_DBG_MAC2DP_EOP_CNT                                                         (0)
#define LMAC_ADP_RX_DATA_OUT_CNT1_OFFSET_DBG_MAC2DP_EOP_CNT_WIDTH                                                  (32)
#define LMAC_ADP_RX_DATA_OUT_CNT1_OFFSET_DBG_MAC2DP_SOP_CNT                                                        (32)
#define LMAC_ADP_RX_DATA_OUT_CNT1_OFFSET_DBG_MAC2DP_SOP_CNT_WIDTH                                                  (32)
typedef union LMAC_ADP_RX_DATA_OUT_CNT1_u {
    struct __attribute__ ((packed)) {
        jl_uint64 dbg_mac2dp_eop_cnt:LMAC_ADP_RX_DATA_OUT_CNT1_OFFSET_DBG_MAC2DP_EOP_CNT_WIDTH;                           //[31: 0]
        jl_uint64 dbg_mac2dp_sop_cnt:LMAC_ADP_RX_DATA_OUT_CNT1_OFFSET_DBG_MAC2DP_SOP_CNT_WIDTH;                           //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_RX_DATA_OUT_CNT1_ENTRY_SIZE];
} LMAC_ADP_RX_DATA_OUT_CNT1_t;

#define LMAC_ADP_IFM_CONTROL                                                                   ((jl_uint32)0x00142040U)
#define LMAC_ADP_IFM_CONTROL_NUM                                                               ((jl_uint32)0x00000001U)
#define LMAC_ADP_IFM_CONTROL_ENTRY_SIZE                                                                             (2)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_LINK_STATUS                                                             (0)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_LINK_STATUS_WIDTH                                                       (1)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_LINK_STATUS_VALUE                                                       (1)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_LINK_STATUS_VALUE_WIDTH                                                 (1)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_RX_PAUSE_EN                                                             (2)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_RX_PAUSE_EN_WIDTH                                                       (1)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_RX_PAUSE_EN_VALUE                                                       (3)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_RX_PAUSE_EN_VALUE_WIDTH                                                 (1)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_TX_PAUSE_EN                                                             (4)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_TX_PAUSE_EN_WIDTH                                                       (1)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_TX_PAUSE_EN_VALUE                                                       (5)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_TX_PAUSE_EN_VALUE_WIDTH                                                 (1)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_DUPLEX                                                                  (6)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_DUPLEX_WIDTH                                                            (1)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_DUPLEX_VALUE                                                            (7)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_DUPLEX_VALUE_WIDTH                                                      (1)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_SPEED                                                                   (8)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_SPEED_WIDTH                                                             (1)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_SPEED_VALUE                                                             (9)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_SPEED_VALUE_WIDTH                                                       (4)
#define LMAC_ADP_IFM_CONTROL_OFFSET_RSVD0                                                                          (13)
#define LMAC_ADP_IFM_CONTROL_OFFSET_RSVD0_WIDTH                                                                    (17)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_MAC_FLUSH_EN                                                               (30)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_MAC_FLUSH_EN_WIDTH                                                          (1)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_MAC_LINK_FILTER_EN                                                         (31)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_MAC_LINK_FILTER_EN_WIDTH                                                    (1)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_MAC_LINK_FILTER_TIME                                                       (32)
#define LMAC_ADP_IFM_CONTROL_OFFSET_CFG_MAC_LINK_FILTER_TIME_WIDTH                                                 (32)
typedef union LMAC_ADP_IFM_CONTROL_u {
    struct __attribute__ ((packed)) {
        jl_uint64 cfg_set_link_status:LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_LINK_STATUS_WIDTH;                              //[ 0: 0]
        jl_uint64 cfg_set_link_status_value:LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_LINK_STATUS_VALUE_WIDTH;                  //[ 1: 1]
        jl_uint64 cfg_set_rx_pause_en:LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_RX_PAUSE_EN_WIDTH;                              //[ 2: 2]
        jl_uint64 cfg_set_rx_pause_en_value:LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_RX_PAUSE_EN_VALUE_WIDTH;                  //[ 3: 3]
        jl_uint64 cfg_set_tx_pause_en:LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_TX_PAUSE_EN_WIDTH;                              //[ 4: 4]
        jl_uint64 cfg_set_tx_pause_en_value:LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_TX_PAUSE_EN_VALUE_WIDTH;                  //[ 5: 5]
        jl_uint64 cfg_set_duplex:LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_DUPLEX_WIDTH;                                        //[ 6: 6]
        jl_uint64 cfg_set_duplex_value:LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_DUPLEX_VALUE_WIDTH;                            //[ 7: 7]
        jl_uint64 cfg_set_speed:LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_SPEED_WIDTH;                                          //[ 8: 8]
        jl_uint64 cfg_set_speed_value:LMAC_ADP_IFM_CONTROL_OFFSET_CFG_SET_SPEED_VALUE_WIDTH;                              //[12: 9]
        jl_uint64 rsvd0:LMAC_ADP_IFM_CONTROL_OFFSET_RSVD0_WIDTH;                                                          //[29:13]
        jl_uint64 cfg_mac_flush_en:LMAC_ADP_IFM_CONTROL_OFFSET_CFG_MAC_FLUSH_EN_WIDTH;                                    //[30:30]
        jl_uint64 cfg_mac_link_filter_en:LMAC_ADP_IFM_CONTROL_OFFSET_CFG_MAC_LINK_FILTER_EN_WIDTH;                        //[31:31]
        jl_uint64 cfg_mac_link_filter_time:LMAC_ADP_IFM_CONTROL_OFFSET_CFG_MAC_LINK_FILTER_TIME_WIDTH;                    //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_IFM_CONTROL_ENTRY_SIZE];
} LMAC_ADP_IFM_CONTROL_t;

#define LMAC_ADP_LINK_CONTROL                                                                  ((jl_uint32)0x00142048U)
#define LMAC_ADP_LINK_CONTROL_NUM                                                              ((jl_uint32)0x00000001U)
#define LMAC_ADP_LINK_CONTROL_ENTRY_SIZE                                                                            (2)
#define LMAC_ADP_LINK_CONTROL_OFFSET_RSVD1                                                                         (48)
#define LMAC_ADP_LINK_CONTROL_OFFSET_RSVD1_WIDTH                                                                   (16)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_LINK_STATUS                                                          (0)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_LINK_STATUS_WIDTH                                                    (1)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_LINK_STATUS_VALUE                                                    (1)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_LINK_STATUS_VALUE_WIDTH                                              (1)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_TX_EN                                                                (2)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_TX_EN_WIDTH                                                          (1)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_TX_EN_VALUE                                                          (3)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_TX_EN_VALUE_WIDTH                                                    (1)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_RX_EN                                                                (4)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_RX_EN_WIDTH                                                          (1)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_RX_EN_VALUE                                                          (5)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_RX_EN_VALUE_WIDTH                                                    (1)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_RX_PAUSE_EN                                                          (6)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_RX_PAUSE_EN_WIDTH                                                    (1)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_RX_PAUSE_EN_VALUE                                                    (7)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_RX_PAUSE_EN_VALUE_WIDTH                                              (1)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_TX_PAUSE_EN                                                          (8)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_TX_PAUSE_EN_WIDTH                                                    (1)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_TX_PAUSE_EN_VALUE                                                    (9)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_TX_PAUSE_EN_VALUE_WIDTH                                              (1)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_DUPLEX                                                              (10)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_DUPLEX_WIDTH                                                         (1)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_DUPLEX_VALUE                                                        (11)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_DUPLEX_VALUE_WIDTH                                                   (1)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_SPEED                                                               (12)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_SPEED_WIDTH                                                          (1)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_SPEED_VALUE                                                         (13)
#define LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_SPEED_VALUE_WIDTH                                                    (3)
#define LMAC_ADP_LINK_CONTROL_OFFSET_RSVD0                                                                         (16)
#define LMAC_ADP_LINK_CONTROL_OFFSET_RSVD0_WIDTH                                                                   (16)
#define LMAC_ADP_LINK_CONTROL_OFFSET_RESERVED                                                                      (32)
#define LMAC_ADP_LINK_CONTROL_OFFSET_RESERVED_WIDTH                                                                (16)
typedef union LMAC_ADP_LINK_CONTROL_u {
    struct __attribute__ ((packed)) {
        jl_uint64 cfg_force_link_status:LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_LINK_STATUS_WIDTH;                         //[ 0: 0]
        jl_uint64 cfg_force_link_status_value:LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_LINK_STATUS_VALUE_WIDTH;             //[ 1: 1]
        jl_uint64 cfg_force_tx_en:LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_TX_EN_WIDTH;                                     //[ 2: 2]
        jl_uint64 cfg_force_tx_en_value:LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_TX_EN_VALUE_WIDTH;                         //[ 3: 3]
        jl_uint64 cfg_force_rx_en:LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_RX_EN_WIDTH;                                     //[ 4: 4]
        jl_uint64 cfg_force_rx_en_value:LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_RX_EN_VALUE_WIDTH;                         //[ 5: 5]
        jl_uint64 cfg_force_rx_pause_en:LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_RX_PAUSE_EN_WIDTH;                         //[ 6: 6]
        jl_uint64 cfg_force_rx_pause_en_value:LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_RX_PAUSE_EN_VALUE_WIDTH;             //[ 7: 7]
        jl_uint64 cfg_force_tx_pause_en:LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_TX_PAUSE_EN_WIDTH;                         //[ 8: 8]
        jl_uint64 cfg_force_tx_pause_en_value:LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_TX_PAUSE_EN_VALUE_WIDTH;             //[ 9: 9]
        jl_uint64 cfg_force_duplex:LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_DUPLEX_WIDTH;                                   //[10:10]
        jl_uint64 cfg_force_duplex_value:LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_DUPLEX_VALUE_WIDTH;                       //[11:11]
        jl_uint64 cfg_force_speed:LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_SPEED_WIDTH;                                     //[12:12]
        jl_uint64 cfg_force_speed_value:LMAC_ADP_LINK_CONTROL_OFFSET_CFG_FORCE_SPEED_VALUE_WIDTH;                         //[15:13]
        jl_uint64 rsvd0:LMAC_ADP_LINK_CONTROL_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
        jl_uint64 reserved:LMAC_ADP_LINK_CONTROL_OFFSET_RESERVED_WIDTH;                                                   //[47:32]
        jl_uint64 rsvd1:LMAC_ADP_LINK_CONTROL_OFFSET_RSVD1_WIDTH;                                                         //[63:48]
    } BF;
    jl_uint32 val[LMAC_ADP_LINK_CONTROL_ENTRY_SIZE];
} LMAC_ADP_LINK_CONTROL_t;

#define LMAC_ADP_RMA_DROP_MASK                                                                 ((jl_uint32)0x00142050U)
#define LMAC_ADP_RMA_DROP_MASK_NUM                                                             ((jl_uint32)0x00000001U)
#define LMAC_ADP_RMA_DROP_MASK_ENTRY_SIZE                                                                           (2)
#define LMAC_ADP_RMA_DROP_MASK_OFFSET_CFG_RMA_DROP_MASK_0_31                                                        (0)
#define LMAC_ADP_RMA_DROP_MASK_OFFSET_CFG_RMA_DROP_MASK_0_31_WIDTH                                                 (32)
#define LMAC_ADP_RMA_DROP_MASK_OFFSET_CFG_RMA_DROP_MASK_32_63                                                      (32)
#define LMAC_ADP_RMA_DROP_MASK_OFFSET_CFG_RMA_DROP_MASK_32_63_WIDTH                                                (32)
typedef union LMAC_ADP_RMA_DROP_MASK_u {
    struct __attribute__ ((packed)) {
        jl_uint64 cfg_rma_drop_mask_0_31:LMAC_ADP_RMA_DROP_MASK_OFFSET_CFG_RMA_DROP_MASK_0_31_WIDTH;                      //[31: 0]
        jl_uint64 cfg_rma_drop_mask_32_63:LMAC_ADP_RMA_DROP_MASK_OFFSET_CFG_RMA_DROP_MASK_32_63_WIDTH;                    //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_RMA_DROP_MASK_ENTRY_SIZE];
} LMAC_ADP_RMA_DROP_MASK_t;

#define LMAC_ADP_TX_PKT_CNT                                                                    ((jl_uint32)0x00142058U)
#define LMAC_ADP_TX_PKT_CNT_NUM                                                                ((jl_uint32)0x00000001U)
#define LMAC_ADP_TX_PKT_CNT_ENTRY_SIZE                                                                              (2)
#define LMAC_ADP_TX_PKT_CNT_OFFSET_TX_PKT_CNT_0_31                                                                  (0)
#define LMAC_ADP_TX_PKT_CNT_OFFSET_TX_PKT_CNT_0_31_WIDTH                                                           (32)
#define LMAC_ADP_TX_PKT_CNT_OFFSET_TX_PKT_CNT_32_63                                                                (32)
#define LMAC_ADP_TX_PKT_CNT_OFFSET_TX_PKT_CNT_32_63_WIDTH                                                          (32)
typedef union LMAC_ADP_TX_PKT_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_cnt_0_31:LMAC_ADP_TX_PKT_CNT_OFFSET_TX_PKT_CNT_0_31_WIDTH;                                       //[31: 0]
        jl_uint64 tx_pkt_cnt_32_63:LMAC_ADP_TX_PKT_CNT_OFFSET_TX_PKT_CNT_32_63_WIDTH;                                     //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_TX_PKT_CNT_ENTRY_SIZE];
} LMAC_ADP_TX_PKT_CNT_t;

#define LMAC_ADP_TX_PKT_BYTE_CNT                                                               ((jl_uint32)0x00142060U)
#define LMAC_ADP_TX_PKT_BYTE_CNT_NUM                                                           ((jl_uint32)0x00000001U)
#define LMAC_ADP_TX_PKT_BYTE_CNT_ENTRY_SIZE                                                                         (2)
#define LMAC_ADP_TX_PKT_BYTE_CNT_OFFSET_TX_PKT_BYTE_CNT_0_31                                                        (0)
#define LMAC_ADP_TX_PKT_BYTE_CNT_OFFSET_TX_PKT_BYTE_CNT_0_31_WIDTH                                                 (32)
#define LMAC_ADP_TX_PKT_BYTE_CNT_OFFSET_TX_PKT_BYTE_CNT_32_63                                                      (32)
#define LMAC_ADP_TX_PKT_BYTE_CNT_OFFSET_TX_PKT_BYTE_CNT_32_63_WIDTH                                                (32)
typedef union LMAC_ADP_TX_PKT_BYTE_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_byte_cnt_0_31:LMAC_ADP_TX_PKT_BYTE_CNT_OFFSET_TX_PKT_BYTE_CNT_0_31_WIDTH;                        //[31: 0]
        jl_uint64 tx_pkt_byte_cnt_32_63:LMAC_ADP_TX_PKT_BYTE_CNT_OFFSET_TX_PKT_BYTE_CNT_32_63_WIDTH;                      //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_TX_PKT_BYTE_CNT_ENTRY_SIZE];
} LMAC_ADP_TX_PKT_BYTE_CNT_t;

#define LMAC_ADP_TX_PKT_UC_CNT                                                                 ((jl_uint32)0x00142068U)
#define LMAC_ADP_TX_PKT_UC_CNT_NUM                                                             ((jl_uint32)0x00000001U)
#define LMAC_ADP_TX_PKT_UC_CNT_ENTRY_SIZE                                                                           (2)
#define LMAC_ADP_TX_PKT_UC_CNT_OFFSET_TX_PKT_UC_CNT_0_31                                                            (0)
#define LMAC_ADP_TX_PKT_UC_CNT_OFFSET_TX_PKT_UC_CNT_0_31_WIDTH                                                     (32)
#define LMAC_ADP_TX_PKT_UC_CNT_OFFSET_TX_PKT_UC_CNT_32_63                                                          (32)
#define LMAC_ADP_TX_PKT_UC_CNT_OFFSET_TX_PKT_UC_CNT_32_63_WIDTH                                                    (32)
typedef union LMAC_ADP_TX_PKT_UC_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_uc_cnt_0_31:LMAC_ADP_TX_PKT_UC_CNT_OFFSET_TX_PKT_UC_CNT_0_31_WIDTH;                              //[31: 0]
        jl_uint64 tx_pkt_uc_cnt_32_63:LMAC_ADP_TX_PKT_UC_CNT_OFFSET_TX_PKT_UC_CNT_32_63_WIDTH;                            //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_TX_PKT_UC_CNT_ENTRY_SIZE];
} LMAC_ADP_TX_PKT_UC_CNT_t;

#define LMAC_ADP_TX_PKT_UC_BYTE_CNT                                                            ((jl_uint32)0x00142070U)
#define LMAC_ADP_TX_PKT_UC_BYTE_CNT_NUM                                                        ((jl_uint32)0x00000001U)
#define LMAC_ADP_TX_PKT_UC_BYTE_CNT_ENTRY_SIZE                                                                      (2)
#define LMAC_ADP_TX_PKT_UC_BYTE_CNT_OFFSET_TX_PKT_UC_BYTE_CNT_0_31                                                  (0)
#define LMAC_ADP_TX_PKT_UC_BYTE_CNT_OFFSET_TX_PKT_UC_BYTE_CNT_0_31_WIDTH                                           (32)
#define LMAC_ADP_TX_PKT_UC_BYTE_CNT_OFFSET_TX_PKT_UC_BYTE_CNT_32_63                                                (32)
#define LMAC_ADP_TX_PKT_UC_BYTE_CNT_OFFSET_TX_PKT_UC_BYTE_CNT_32_63_WIDTH                                          (32)
typedef union LMAC_ADP_TX_PKT_UC_BYTE_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_uc_byte_cnt_0_31:LMAC_ADP_TX_PKT_UC_BYTE_CNT_OFFSET_TX_PKT_UC_BYTE_CNT_0_31_WIDTH;               //[31: 0]
        jl_uint64 tx_pkt_uc_byte_cnt_32_63:LMAC_ADP_TX_PKT_UC_BYTE_CNT_OFFSET_TX_PKT_UC_BYTE_CNT_32_63_WIDTH;             //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_TX_PKT_UC_BYTE_CNT_ENTRY_SIZE];
} LMAC_ADP_TX_PKT_UC_BYTE_CNT_t;

#define LMAC_ADP_TX_PKT_MC_CNT                                                                 ((jl_uint32)0x00142078U)
#define LMAC_ADP_TX_PKT_MC_CNT_NUM                                                             ((jl_uint32)0x00000001U)
#define LMAC_ADP_TX_PKT_MC_CNT_ENTRY_SIZE                                                                           (2)
#define LMAC_ADP_TX_PKT_MC_CNT_OFFSET_TX_PKT_MC_CNT_0_31                                                            (0)
#define LMAC_ADP_TX_PKT_MC_CNT_OFFSET_TX_PKT_MC_CNT_0_31_WIDTH                                                     (32)
#define LMAC_ADP_TX_PKT_MC_CNT_OFFSET_TX_PKT_MC_CNT_32_63                                                          (32)
#define LMAC_ADP_TX_PKT_MC_CNT_OFFSET_TX_PKT_MC_CNT_32_63_WIDTH                                                    (32)
typedef union LMAC_ADP_TX_PKT_MC_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_mc_cnt_0_31:LMAC_ADP_TX_PKT_MC_CNT_OFFSET_TX_PKT_MC_CNT_0_31_WIDTH;                              //[31: 0]
        jl_uint64 tx_pkt_mc_cnt_32_63:LMAC_ADP_TX_PKT_MC_CNT_OFFSET_TX_PKT_MC_CNT_32_63_WIDTH;                            //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_TX_PKT_MC_CNT_ENTRY_SIZE];
} LMAC_ADP_TX_PKT_MC_CNT_t;

#define LMAC_ADP_TX_PKT_MC_BYTE_CNT                                                            ((jl_uint32)0x00142080U)
#define LMAC_ADP_TX_PKT_MC_BYTE_CNT_NUM                                                        ((jl_uint32)0x00000001U)
#define LMAC_ADP_TX_PKT_MC_BYTE_CNT_ENTRY_SIZE                                                                      (2)
#define LMAC_ADP_TX_PKT_MC_BYTE_CNT_OFFSET_TX_PKT_MC_BYTE_CNT_0_31                                                  (0)
#define LMAC_ADP_TX_PKT_MC_BYTE_CNT_OFFSET_TX_PKT_MC_BYTE_CNT_0_31_WIDTH                                           (32)
#define LMAC_ADP_TX_PKT_MC_BYTE_CNT_OFFSET_TX_PKT_MC_BYTE_CNT_32_63                                                (32)
#define LMAC_ADP_TX_PKT_MC_BYTE_CNT_OFFSET_TX_PKT_MC_BYTE_CNT_32_63_WIDTH                                          (32)
typedef union LMAC_ADP_TX_PKT_MC_BYTE_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_mc_byte_cnt_0_31:LMAC_ADP_TX_PKT_MC_BYTE_CNT_OFFSET_TX_PKT_MC_BYTE_CNT_0_31_WIDTH;               //[31: 0]
        jl_uint64 tx_pkt_mc_byte_cnt_32_63:LMAC_ADP_TX_PKT_MC_BYTE_CNT_OFFSET_TX_PKT_MC_BYTE_CNT_32_63_WIDTH;             //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_TX_PKT_MC_BYTE_CNT_ENTRY_SIZE];
} LMAC_ADP_TX_PKT_MC_BYTE_CNT_t;

#define LMAC_ADP_TX_PKT_BC_CNT                                                                 ((jl_uint32)0x00142088U)
#define LMAC_ADP_TX_PKT_BC_CNT_NUM                                                             ((jl_uint32)0x00000001U)
#define LMAC_ADP_TX_PKT_BC_CNT_ENTRY_SIZE                                                                           (2)
#define LMAC_ADP_TX_PKT_BC_CNT_OFFSET_TX_PKT_BC_CNT_0_31                                                            (0)
#define LMAC_ADP_TX_PKT_BC_CNT_OFFSET_TX_PKT_BC_CNT_0_31_WIDTH                                                     (32)
#define LMAC_ADP_TX_PKT_BC_CNT_OFFSET_TX_PKT_BC_CNT_32_63                                                          (32)
#define LMAC_ADP_TX_PKT_BC_CNT_OFFSET_TX_PKT_BC_CNT_32_63_WIDTH                                                    (32)
typedef union LMAC_ADP_TX_PKT_BC_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_bc_cnt_0_31:LMAC_ADP_TX_PKT_BC_CNT_OFFSET_TX_PKT_BC_CNT_0_31_WIDTH;                              //[31: 0]
        jl_uint64 tx_pkt_bc_cnt_32_63:LMAC_ADP_TX_PKT_BC_CNT_OFFSET_TX_PKT_BC_CNT_32_63_WIDTH;                            //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_TX_PKT_BC_CNT_ENTRY_SIZE];
} LMAC_ADP_TX_PKT_BC_CNT_t;

#define LMAC_ADP_TX_PKT_BC_BYTE_CNT                                                            ((jl_uint32)0x00142090U)
#define LMAC_ADP_TX_PKT_BC_BYTE_CNT_NUM                                                        ((jl_uint32)0x00000001U)
#define LMAC_ADP_TX_PKT_BC_BYTE_CNT_ENTRY_SIZE                                                                      (2)
#define LMAC_ADP_TX_PKT_BC_BYTE_CNT_OFFSET_TX_PKT_BC_BYTE_CNT_0_31                                                  (0)
#define LMAC_ADP_TX_PKT_BC_BYTE_CNT_OFFSET_TX_PKT_BC_BYTE_CNT_0_31_WIDTH                                           (32)
#define LMAC_ADP_TX_PKT_BC_BYTE_CNT_OFFSET_TX_PKT_BC_BYTE_CNT_32_63                                                (32)
#define LMAC_ADP_TX_PKT_BC_BYTE_CNT_OFFSET_TX_PKT_BC_BYTE_CNT_32_63_WIDTH                                          (32)
typedef union LMAC_ADP_TX_PKT_BC_BYTE_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint64 tx_pkt_bc_byte_cnt_0_31:LMAC_ADP_TX_PKT_BC_BYTE_CNT_OFFSET_TX_PKT_BC_BYTE_CNT_0_31_WIDTH;               //[31: 0]
        jl_uint64 tx_pkt_bc_byte_cnt_32_63:LMAC_ADP_TX_PKT_BC_BYTE_CNT_OFFSET_TX_PKT_BC_BYTE_CNT_32_63_WIDTH;             //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_TX_PKT_BC_BYTE_CNT_ENTRY_SIZE];
} LMAC_ADP_TX_PKT_BC_BYTE_CNT_t;

#define LMAC_ADP_TX_PKT_DRP_CNT                                                                ((jl_uint32)0x00142098U)
#define LMAC_ADP_TX_PKT_DRP_CNT_NUM                                                            ((jl_uint32)0x00000001U)
#define LMAC_ADP_TX_PKT_DRP_CNT_ENTRY_SIZE                                                                          (1)
#define LMAC_ADP_TX_PKT_DRP_CNT_OFFSET_TX_PKT_DRP_CNT                                                               (0)
#define LMAC_ADP_TX_PKT_DRP_CNT_OFFSET_TX_PKT_DRP_CNT_WIDTH                                                        (32)
typedef union LMAC_ADP_TX_PKT_DRP_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tx_pkt_drp_cnt:LMAC_ADP_TX_PKT_DRP_CNT_OFFSET_TX_PKT_DRP_CNT_WIDTH;                                     //[31: 0]
    } BF;
    jl_uint32 val[LMAC_ADP_TX_PKT_DRP_CNT_ENTRY_SIZE];
} LMAC_ADP_TX_PKT_DRP_CNT_t;

#define LMAC_ADP_TX_PKT_ERR_CNT                                                                ((jl_uint32)0x0014209CU)
#define LMAC_ADP_TX_PKT_ERR_CNT_NUM                                                            ((jl_uint32)0x00000001U)
#define LMAC_ADP_TX_PKT_ERR_CNT_ENTRY_SIZE                                                                          (1)
#define LMAC_ADP_TX_PKT_ERR_CNT_OFFSET_TX_PKT_ERR_CNT                                                               (0)
#define LMAC_ADP_TX_PKT_ERR_CNT_OFFSET_TX_PKT_ERR_CNT_WIDTH                                                        (32)
typedef union LMAC_ADP_TX_PKT_ERR_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 tx_pkt_err_cnt:LMAC_ADP_TX_PKT_ERR_CNT_OFFSET_TX_PKT_ERR_CNT_WIDTH;                                     //[31: 0]
    } BF;
    jl_uint32 val[LMAC_ADP_TX_PKT_ERR_CNT_ENTRY_SIZE];
} LMAC_ADP_TX_PKT_ERR_CNT_t;

#define LMAC_ADP_RX_PKT_CNT                                                                    ((jl_uint32)0x001420A0U)
#define LMAC_ADP_RX_PKT_CNT_NUM                                                                ((jl_uint32)0x00000001U)
#define LMAC_ADP_RX_PKT_CNT_ENTRY_SIZE                                                                              (2)
#define LMAC_ADP_RX_PKT_CNT_OFFSET_RX_PKT_CNT_0_31                                                                  (0)
#define LMAC_ADP_RX_PKT_CNT_OFFSET_RX_PKT_CNT_0_31_WIDTH                                                           (32)
#define LMAC_ADP_RX_PKT_CNT_OFFSET_RX_PKT_CNT_32_63                                                                (32)
#define LMAC_ADP_RX_PKT_CNT_OFFSET_RX_PKT_CNT_32_63_WIDTH                                                          (32)
typedef union LMAC_ADP_RX_PKT_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_cnt_0_31:LMAC_ADP_RX_PKT_CNT_OFFSET_RX_PKT_CNT_0_31_WIDTH;                                       //[31: 0]
        jl_uint64 rx_pkt_cnt_32_63:LMAC_ADP_RX_PKT_CNT_OFFSET_RX_PKT_CNT_32_63_WIDTH;                                     //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_RX_PKT_CNT_ENTRY_SIZE];
} LMAC_ADP_RX_PKT_CNT_t;

#define LMAC_ADP_RX_PKT_BYTE_CNT                                                               ((jl_uint32)0x001420A8U)
#define LMAC_ADP_RX_PKT_BYTE_CNT_NUM                                                           ((jl_uint32)0x00000001U)
#define LMAC_ADP_RX_PKT_BYTE_CNT_ENTRY_SIZE                                                                         (2)
#define LMAC_ADP_RX_PKT_BYTE_CNT_OFFSET_RX_PKT_BYTE_CNT_0_31                                                        (0)
#define LMAC_ADP_RX_PKT_BYTE_CNT_OFFSET_RX_PKT_BYTE_CNT_0_31_WIDTH                                                 (32)
#define LMAC_ADP_RX_PKT_BYTE_CNT_OFFSET_RX_PKT_BYTE_CNT_32_63                                                      (32)
#define LMAC_ADP_RX_PKT_BYTE_CNT_OFFSET_RX_PKT_BYTE_CNT_32_63_WIDTH                                                (32)
typedef union LMAC_ADP_RX_PKT_BYTE_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_byte_cnt_0_31:LMAC_ADP_RX_PKT_BYTE_CNT_OFFSET_RX_PKT_BYTE_CNT_0_31_WIDTH;                        //[31: 0]
        jl_uint64 rx_pkt_byte_cnt_32_63:LMAC_ADP_RX_PKT_BYTE_CNT_OFFSET_RX_PKT_BYTE_CNT_32_63_WIDTH;                      //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_RX_PKT_BYTE_CNT_ENTRY_SIZE];
} LMAC_ADP_RX_PKT_BYTE_CNT_t;

#define LMAC_ADP_RX_PKT_UC_CNT                                                                 ((jl_uint32)0x001420B0U)
#define LMAC_ADP_RX_PKT_UC_CNT_NUM                                                             ((jl_uint32)0x00000001U)
#define LMAC_ADP_RX_PKT_UC_CNT_ENTRY_SIZE                                                                           (2)
#define LMAC_ADP_RX_PKT_UC_CNT_OFFSET_RX_PKT_UC_CNT_0_31                                                            (0)
#define LMAC_ADP_RX_PKT_UC_CNT_OFFSET_RX_PKT_UC_CNT_0_31_WIDTH                                                     (32)
#define LMAC_ADP_RX_PKT_UC_CNT_OFFSET_RX_PKT_UC_CNT_32_63                                                          (32)
#define LMAC_ADP_RX_PKT_UC_CNT_OFFSET_RX_PKT_UC_CNT_32_63_WIDTH                                                    (32)
typedef union LMAC_ADP_RX_PKT_UC_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_uc_cnt_0_31:LMAC_ADP_RX_PKT_UC_CNT_OFFSET_RX_PKT_UC_CNT_0_31_WIDTH;                              //[31: 0]
        jl_uint64 rx_pkt_uc_cnt_32_63:LMAC_ADP_RX_PKT_UC_CNT_OFFSET_RX_PKT_UC_CNT_32_63_WIDTH;                            //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_RX_PKT_UC_CNT_ENTRY_SIZE];
} LMAC_ADP_RX_PKT_UC_CNT_t;

#define LMAC_ADP_RX_PKT_UC_BYTE_CNT                                                            ((jl_uint32)0x001420B8U)
#define LMAC_ADP_RX_PKT_UC_BYTE_CNT_NUM                                                        ((jl_uint32)0x00000001U)
#define LMAC_ADP_RX_PKT_UC_BYTE_CNT_ENTRY_SIZE                                                                      (2)
#define LMAC_ADP_RX_PKT_UC_BYTE_CNT_OFFSET_RX_PKT_UC_BYTE_CNT_0_31                                                  (0)
#define LMAC_ADP_RX_PKT_UC_BYTE_CNT_OFFSET_RX_PKT_UC_BYTE_CNT_0_31_WIDTH                                           (32)
#define LMAC_ADP_RX_PKT_UC_BYTE_CNT_OFFSET_RX_PKT_UC_BYTE_CNT_32_63                                                (32)
#define LMAC_ADP_RX_PKT_UC_BYTE_CNT_OFFSET_RX_PKT_UC_BYTE_CNT_32_63_WIDTH                                          (32)
typedef union LMAC_ADP_RX_PKT_UC_BYTE_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_uc_byte_cnt_0_31:LMAC_ADP_RX_PKT_UC_BYTE_CNT_OFFSET_RX_PKT_UC_BYTE_CNT_0_31_WIDTH;               //[31: 0]
        jl_uint64 rx_pkt_uc_byte_cnt_32_63:LMAC_ADP_RX_PKT_UC_BYTE_CNT_OFFSET_RX_PKT_UC_BYTE_CNT_32_63_WIDTH;             //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_RX_PKT_UC_BYTE_CNT_ENTRY_SIZE];
} LMAC_ADP_RX_PKT_UC_BYTE_CNT_t;

#define LMAC_ADP_RX_PKT_MC_CNT                                                                 ((jl_uint32)0x001420C0U)
#define LMAC_ADP_RX_PKT_MC_CNT_NUM                                                             ((jl_uint32)0x00000001U)
#define LMAC_ADP_RX_PKT_MC_CNT_ENTRY_SIZE                                                                           (2)
#define LMAC_ADP_RX_PKT_MC_CNT_OFFSET_RX_PKT_MC_CNT_0_31                                                            (0)
#define LMAC_ADP_RX_PKT_MC_CNT_OFFSET_RX_PKT_MC_CNT_0_31_WIDTH                                                     (32)
#define LMAC_ADP_RX_PKT_MC_CNT_OFFSET_RX_PKT_MC_CNT_32_63                                                          (32)
#define LMAC_ADP_RX_PKT_MC_CNT_OFFSET_RX_PKT_MC_CNT_32_63_WIDTH                                                    (32)
typedef union LMAC_ADP_RX_PKT_MC_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_mc_cnt_0_31:LMAC_ADP_RX_PKT_MC_CNT_OFFSET_RX_PKT_MC_CNT_0_31_WIDTH;                              //[31: 0]
        jl_uint64 rx_pkt_mc_cnt_32_63:LMAC_ADP_RX_PKT_MC_CNT_OFFSET_RX_PKT_MC_CNT_32_63_WIDTH;                            //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_RX_PKT_MC_CNT_ENTRY_SIZE];
} LMAC_ADP_RX_PKT_MC_CNT_t;

#define LMAC_ADP_RX_PKT_MC_BYTE_CNT                                                            ((jl_uint32)0x001420C8U)
#define LMAC_ADP_RX_PKT_MC_BYTE_CNT_NUM                                                        ((jl_uint32)0x00000001U)
#define LMAC_ADP_RX_PKT_MC_BYTE_CNT_ENTRY_SIZE                                                                      (2)
#define LMAC_ADP_RX_PKT_MC_BYTE_CNT_OFFSET_RX_PKT_MC_BYTE_CNT_0_31                                                  (0)
#define LMAC_ADP_RX_PKT_MC_BYTE_CNT_OFFSET_RX_PKT_MC_BYTE_CNT_0_31_WIDTH                                           (32)
#define LMAC_ADP_RX_PKT_MC_BYTE_CNT_OFFSET_RX_PKT_MC_BYTE_CNT_32_63                                                (32)
#define LMAC_ADP_RX_PKT_MC_BYTE_CNT_OFFSET_RX_PKT_MC_BYTE_CNT_32_63_WIDTH                                          (32)
typedef union LMAC_ADP_RX_PKT_MC_BYTE_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_mc_byte_cnt_0_31:LMAC_ADP_RX_PKT_MC_BYTE_CNT_OFFSET_RX_PKT_MC_BYTE_CNT_0_31_WIDTH;               //[31: 0]
        jl_uint64 rx_pkt_mc_byte_cnt_32_63:LMAC_ADP_RX_PKT_MC_BYTE_CNT_OFFSET_RX_PKT_MC_BYTE_CNT_32_63_WIDTH;             //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_RX_PKT_MC_BYTE_CNT_ENTRY_SIZE];
} LMAC_ADP_RX_PKT_MC_BYTE_CNT_t;

#define LMAC_ADP_RX_PKT_BC_CNT                                                                 ((jl_uint32)0x001420D0U)
#define LMAC_ADP_RX_PKT_BC_CNT_NUM                                                             ((jl_uint32)0x00000001U)
#define LMAC_ADP_RX_PKT_BC_CNT_ENTRY_SIZE                                                                           (2)
#define LMAC_ADP_RX_PKT_BC_CNT_OFFSET_RX_PKT_BC_CNT_0_31                                                            (0)
#define LMAC_ADP_RX_PKT_BC_CNT_OFFSET_RX_PKT_BC_CNT_0_31_WIDTH                                                     (32)
#define LMAC_ADP_RX_PKT_BC_CNT_OFFSET_RX_PKT_BC_CNT_32_63                                                          (32)
#define LMAC_ADP_RX_PKT_BC_CNT_OFFSET_RX_PKT_BC_CNT_32_63_WIDTH                                                    (32)
typedef union LMAC_ADP_RX_PKT_BC_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_bc_cnt_0_31:LMAC_ADP_RX_PKT_BC_CNT_OFFSET_RX_PKT_BC_CNT_0_31_WIDTH;                              //[31: 0]
        jl_uint64 rx_pkt_bc_cnt_32_63:LMAC_ADP_RX_PKT_BC_CNT_OFFSET_RX_PKT_BC_CNT_32_63_WIDTH;                            //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_RX_PKT_BC_CNT_ENTRY_SIZE];
} LMAC_ADP_RX_PKT_BC_CNT_t;

#define LMAC_ADP_RX_PKT_BC_BYTE_CNT                                                            ((jl_uint32)0x001420D8U)
#define LMAC_ADP_RX_PKT_BC_BYTE_CNT_NUM                                                        ((jl_uint32)0x00000001U)
#define LMAC_ADP_RX_PKT_BC_BYTE_CNT_ENTRY_SIZE                                                                      (2)
#define LMAC_ADP_RX_PKT_BC_BYTE_CNT_OFFSET_RX_PKT_BC_BYTE_CNT_0_31                                                  (0)
#define LMAC_ADP_RX_PKT_BC_BYTE_CNT_OFFSET_RX_PKT_BC_BYTE_CNT_0_31_WIDTH                                           (32)
#define LMAC_ADP_RX_PKT_BC_BYTE_CNT_OFFSET_RX_PKT_BC_BYTE_CNT_32_63                                                (32)
#define LMAC_ADP_RX_PKT_BC_BYTE_CNT_OFFSET_RX_PKT_BC_BYTE_CNT_32_63_WIDTH                                          (32)
typedef union LMAC_ADP_RX_PKT_BC_BYTE_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint64 rx_pkt_bc_byte_cnt_0_31:LMAC_ADP_RX_PKT_BC_BYTE_CNT_OFFSET_RX_PKT_BC_BYTE_CNT_0_31_WIDTH;               //[31: 0]
        jl_uint64 rx_pkt_bc_byte_cnt_32_63:LMAC_ADP_RX_PKT_BC_BYTE_CNT_OFFSET_RX_PKT_BC_BYTE_CNT_32_63_WIDTH;             //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_RX_PKT_BC_BYTE_CNT_ENTRY_SIZE];
} LMAC_ADP_RX_PKT_BC_BYTE_CNT_t;

#define LMAC_ADP_RX_PKT_DRP_CNT                                                                ((jl_uint32)0x001420E0U)
#define LMAC_ADP_RX_PKT_DRP_CNT_NUM                                                            ((jl_uint32)0x00000001U)
#define LMAC_ADP_RX_PKT_DRP_CNT_ENTRY_SIZE                                                                          (1)
#define LMAC_ADP_RX_PKT_DRP_CNT_OFFSET_RX_PKT_DRP_CNT                                                               (0)
#define LMAC_ADP_RX_PKT_DRP_CNT_OFFSET_RX_PKT_DRP_CNT_WIDTH                                                        (32)
typedef union LMAC_ADP_RX_PKT_DRP_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_pkt_drp_cnt:LMAC_ADP_RX_PKT_DRP_CNT_OFFSET_RX_PKT_DRP_CNT_WIDTH;                                     //[31: 0]
    } BF;
    jl_uint32 val[LMAC_ADP_RX_PKT_DRP_CNT_ENTRY_SIZE];
} LMAC_ADP_RX_PKT_DRP_CNT_t;

#define LMAC_ADP_RX_PKT_CRC_ERR_CNT                                                            ((jl_uint32)0x001420E4U)
#define LMAC_ADP_RX_PKT_CRC_ERR_CNT_NUM                                                        ((jl_uint32)0x00000001U)
#define LMAC_ADP_RX_PKT_CRC_ERR_CNT_ENTRY_SIZE                                                                      (1)
#define LMAC_ADP_RX_PKT_CRC_ERR_CNT_OFFSET_RX_PKT_CRC_ERR_CNT                                                       (0)
#define LMAC_ADP_RX_PKT_CRC_ERR_CNT_OFFSET_RX_PKT_CRC_ERR_CNT_WIDTH                                                (32)
typedef union LMAC_ADP_RX_PKT_CRC_ERR_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_pkt_crc_err_cnt:LMAC_ADP_RX_PKT_CRC_ERR_CNT_OFFSET_RX_PKT_CRC_ERR_CNT_WIDTH;                         //[31: 0]
    } BF;
    jl_uint32 val[LMAC_ADP_RX_PKT_CRC_ERR_CNT_ENTRY_SIZE];
} LMAC_ADP_RX_PKT_CRC_ERR_CNT_t;

#define LMAC_ADP_RX_FRAG_ERR_CNT                                                               ((jl_uint32)0x001420E8U)
#define LMAC_ADP_RX_FRAG_ERR_CNT_NUM                                                           ((jl_uint32)0x00000001U)
#define LMAC_ADP_RX_FRAG_ERR_CNT_ENTRY_SIZE                                                                         (1)
#define LMAC_ADP_RX_FRAG_ERR_CNT_OFFSET_RX_FRAG_ERR_CNT                                                             (0)
#define LMAC_ADP_RX_FRAG_ERR_CNT_OFFSET_RX_FRAG_ERR_CNT_WIDTH                                                      (32)
typedef union LMAC_ADP_RX_FRAG_ERR_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rx_frag_err_cnt:LMAC_ADP_RX_FRAG_ERR_CNT_OFFSET_RX_FRAG_ERR_CNT_WIDTH;                                  //[31: 0]
    } BF;
    jl_uint32 val[LMAC_ADP_RX_FRAG_ERR_CNT_ENTRY_SIZE];
} LMAC_ADP_RX_FRAG_ERR_CNT_t;

#define LMAC_ADP_STATISTIC_MODE_0                                                              ((jl_uint32)0x001420ECU)
#define LMAC_ADP_STATISTIC_MODE_0_NUM                                                          ((jl_uint32)0x00000001U)
#define LMAC_ADP_STATISTIC_MODE_0_ENTRY_SIZE                                                                        (1)
#define LMAC_ADP_STATISTIC_MODE_0_OFFSET_CAR_EN                                                                     (0)
#define LMAC_ADP_STATISTIC_MODE_0_OFFSET_CAR_EN_WIDTH                                                               (1)
#define LMAC_ADP_STATISTIC_MODE_0_OFFSET_RSVD0                                                                      (1)
#define LMAC_ADP_STATISTIC_MODE_0_OFFSET_RSVD0_WIDTH                                                                (3)
#define LMAC_ADP_STATISTIC_MODE_0_OFFSET_MIB_EN                                                                     (4)
#define LMAC_ADP_STATISTIC_MODE_0_OFFSET_MIB_EN_WIDTH                                                              (28)
typedef union LMAC_ADP_STATISTIC_MODE_0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 car_en:LMAC_ADP_STATISTIC_MODE_0_OFFSET_CAR_EN_WIDTH;                                                   //[ 0: 0]
        jl_uint32 rsvd0:LMAC_ADP_STATISTIC_MODE_0_OFFSET_RSVD0_WIDTH;                                                     //[ 3: 1]
        jl_uint32 mib_en:LMAC_ADP_STATISTIC_MODE_0_OFFSET_MIB_EN_WIDTH;                                                   //[31: 4]
    } BF;
    jl_uint32 val[LMAC_ADP_STATISTIC_MODE_0_ENTRY_SIZE];
} LMAC_ADP_STATISTIC_MODE_0_t;

#define LMAC_ADP_STATISTIC_MODE_1                                                              ((jl_uint32)0x001420F0U)
#define LMAC_ADP_STATISTIC_MODE_1_NUM                                                          ((jl_uint32)0x00000001U)
#define LMAC_ADP_STATISTIC_MODE_1_ENTRY_SIZE                                                                        (1)
#define LMAC_ADP_STATISTIC_MODE_1_OFFSET_RSVD1                                                                     (12)
#define LMAC_ADP_STATISTIC_MODE_1_OFFSET_RSVD1_WIDTH                                                               (20)
#define LMAC_ADP_STATISTIC_MODE_1_OFFSET_MIB_CLEAR                                                                  (0)
#define LMAC_ADP_STATISTIC_MODE_1_OFFSET_MIB_CLEAR_WIDTH                                                            (1)
#define LMAC_ADP_STATISTIC_MODE_1_OFFSET_RSVD0                                                                      (1)
#define LMAC_ADP_STATISTIC_MODE_1_OFFSET_RSVD0_WIDTH                                                                (3)
#define LMAC_ADP_STATISTIC_MODE_1_OFFSET_MIB_ID                                                                     (4)
#define LMAC_ADP_STATISTIC_MODE_1_OFFSET_MIB_ID_WIDTH                                                               (8)
typedef union LMAC_ADP_STATISTIC_MODE_1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 mib_clear:LMAC_ADP_STATISTIC_MODE_1_OFFSET_MIB_CLEAR_WIDTH;                                             //[ 0: 0]
        jl_uint32 rsvd0:LMAC_ADP_STATISTIC_MODE_1_OFFSET_RSVD0_WIDTH;                                                     //[ 3: 1]
        jl_uint32 mib_id:LMAC_ADP_STATISTIC_MODE_1_OFFSET_MIB_ID_WIDTH;                                                   //[11: 4]
        jl_uint32 rsvd1:LMAC_ADP_STATISTIC_MODE_1_OFFSET_RSVD1_WIDTH;                                                     //[31:12]
    } BF;
    jl_uint32 val[LMAC_ADP_STATISTIC_MODE_1_ENTRY_SIZE];
} LMAC_ADP_STATISTIC_MODE_1_t;

#define LMAC_ADP_TX_ERR_INFO                                                                   ((jl_uint32)0x001420F4U)
#define LMAC_ADP_TX_ERR_INFO_NUM                                                               ((jl_uint32)0x00000001U)
#define LMAC_ADP_TX_ERR_INFO_ENTRY_SIZE                                                                             (1)
#define LMAC_ADP_TX_ERR_INFO_OFFSET_RSVD0                                                                           (9)
#define LMAC_ADP_TX_ERR_INFO_OFFSET_RSVD0_WIDTH                                                                    (23)
#define LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_FRAME_ABORT                                                              (0)
#define LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_FRAME_ABORT_WIDTH                                                        (1)
#define LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_JABBER_TIMEOUT                                                           (1)
#define LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_JABBER_TIMEOUT_WIDTH                                                     (1)
#define LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_NO_CARRIER                                                               (2)
#define LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_NO_CARRIER_WIDTH                                                         (1)
#define LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_LOSS_CARRIER                                                             (3)
#define LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_LOSS_CARRIER_WIDTH                                                       (1)
#define LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_EXCESSIVE_DEFER                                                          (4)
#define LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_EXCESSIVE_DEFER_WIDTH                                                    (1)
#define LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_LATE_COLLISION                                                           (5)
#define LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_LATE_COLLISION_WIDTH                                                     (1)
#define LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_EXCESSIVE_COLLISION                                                      (6)
#define LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_EXCESSIVE_COLLISION_WIDTH                                                (1)
#define LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_DEFER_OCCERED                                                            (7)
#define LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_DEFER_OCCERED_WIDTH                                                      (1)
#define LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_UNDERFLOW                                                                (8)
#define LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_UNDERFLOW_WIDTH                                                          (1)
typedef union LMAC_ADP_TX_ERR_INFO_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_tx_frame_abort:LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_FRAME_ABORT_WIDTH;                                //[ 0: 0]
        jl_uint32 dbg_tx_jabber_timeout:LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_JABBER_TIMEOUT_WIDTH;                          //[ 1: 1]
        jl_uint32 dbg_tx_no_carrier:LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_NO_CARRIER_WIDTH;                                  //[ 2: 2]
        jl_uint32 dbg_tx_loss_carrier:LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_LOSS_CARRIER_WIDTH;                              //[ 3: 3]
        jl_uint32 dbg_tx_excessive_defer:LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_EXCESSIVE_DEFER_WIDTH;                        //[ 4: 4]
        jl_uint32 dbg_tx_late_collision:LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_LATE_COLLISION_WIDTH;                          //[ 5: 5]
        jl_uint32 dbg_tx_excessive_collision:LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_EXCESSIVE_COLLISION_WIDTH;                //[ 6: 6]
        jl_uint32 dbg_tx_defer_occered:LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_DEFER_OCCERED_WIDTH;                            //[ 7: 7]
        jl_uint32 dbg_tx_underflow:LMAC_ADP_TX_ERR_INFO_OFFSET_DBG_TX_UNDERFLOW_WIDTH;                                    //[ 8: 8]
        jl_uint32 rsvd0:LMAC_ADP_TX_ERR_INFO_OFFSET_RSVD0_WIDTH;                                                          //[31: 9]
    } BF;
    jl_uint32 val[LMAC_ADP_TX_ERR_INFO_ENTRY_SIZE];
} LMAC_ADP_TX_ERR_INFO_t;

#define LMAC_ADP_RX_ERR_INFO                                                                   ((jl_uint32)0x001420F8U)
#define LMAC_ADP_RX_ERR_INFO_NUM                                                               ((jl_uint32)0x00000001U)
#define LMAC_ADP_RX_ERR_INFO_ENTRY_SIZE                                                                             (1)
#define LMAC_ADP_RX_ERR_INFO_OFFSET_RSVD0                                                                           (9)
#define LMAC_ADP_RX_ERR_INFO_OFFSET_RSVD0_WIDTH                                                                    (23)
#define LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_WATCHDOG_TIMEOUT                                                         (0)
#define LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_WATCHDOG_TIMEOUT_WIDTH                                                   (1)
#define LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_RUNT_FRAME                                                               (1)
#define LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_RUNT_FRAME_WIDTH                                                         (1)
#define LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_GIANT_FRAME                                                              (2)
#define LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_GIANT_FRAME_WIDTH                                                        (1)
#define LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_LATE_COLLISION                                                           (3)
#define LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_LATE_COLLISION_WIDTH                                                     (1)
#define LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_GMII_ERROR                                                               (4)
#define LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_GMII_ERROR_WIDTH                                                         (1)
#define LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_DRIBBLE_BIT                                                              (5)
#define LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_DRIBBLE_BIT_WIDTH                                                        (1)
#define LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_CRC_ERROR                                                                (6)
#define LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_CRC_ERROR_WIDTH                                                          (1)
#define LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_LENGTH_ERROR                                                             (7)
#define LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_LENGTH_ERROR_WIDTH                                                       (1)
#define LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_RECEIVE_PAUSE                                                            (8)
#define LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_RECEIVE_PAUSE_WIDTH                                                      (1)
typedef union LMAC_ADP_RX_ERR_INFO_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_rx_watchdog_timeout:LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_WATCHDOG_TIMEOUT_WIDTH;                      //[ 0: 0]
        jl_uint32 dbg_rx_runt_frame:LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_RUNT_FRAME_WIDTH;                                  //[ 1: 1]
        jl_uint32 dbg_rx_giant_frame:LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_GIANT_FRAME_WIDTH;                                //[ 2: 2]
        jl_uint32 dbg_rx_late_collision:LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_LATE_COLLISION_WIDTH;                          //[ 3: 3]
        jl_uint32 dbg_rx_gmii_error:LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_GMII_ERROR_WIDTH;                                  //[ 4: 4]
        jl_uint32 dbg_rx_dribble_bit:LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_DRIBBLE_BIT_WIDTH;                                //[ 5: 5]
        jl_uint32 dbg_rx_crc_error:LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_CRC_ERROR_WIDTH;                                    //[ 6: 6]
        jl_uint32 dbg_rx_length_error:LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_LENGTH_ERROR_WIDTH;                              //[ 7: 7]
        jl_uint32 dbg_rx_receive_pause:LMAC_ADP_RX_ERR_INFO_OFFSET_DBG_RX_RECEIVE_PAUSE_WIDTH;                            //[ 8: 8]
        jl_uint32 rsvd0:LMAC_ADP_RX_ERR_INFO_OFFSET_RSVD0_WIDTH;                                                          //[31: 9]
    } BF;
    jl_uint32 val[LMAC_ADP_RX_ERR_INFO_ENTRY_SIZE];
} LMAC_ADP_RX_ERR_INFO_t;

#define LMAC_ADP_TX_MII_MON                                                                    ((jl_uint32)0x001420FCU)
#define LMAC_ADP_TX_MII_MON_NUM                                                                ((jl_uint32)0x00000001U)
#define LMAC_ADP_TX_MII_MON_ENTRY_SIZE                                                                              (1)
#define LMAC_ADP_TX_MII_MON_OFFSET_RSVD6                                                                           (29)
#define LMAC_ADP_TX_MII_MON_OFFSET_RSVD6_WIDTH                                                                      (3)
#define LMAC_ADP_TX_MII_MON_OFFSET_DBG_REAL_LINK_STATUS                                                             (0)
#define LMAC_ADP_TX_MII_MON_OFFSET_DBG_REAL_LINK_STATUS_WIDTH                                                       (1)
#define LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_LINK_STATUS                                                              (1)
#define LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_LINK_STATUS_WIDTH                                                        (1)
#define LMAC_ADP_TX_MII_MON_OFFSET_RSVD5                                                                            (2)
#define LMAC_ADP_TX_MII_MON_OFFSET_RSVD5_WIDTH                                                                      (6)
#define LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_TXEN                                                                     (8)
#define LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_TXEN_WIDTH                                                               (1)
#define LMAC_ADP_TX_MII_MON_OFFSET_RSVD4                                                                            (9)
#define LMAC_ADP_TX_MII_MON_OFFSET_RSVD4_WIDTH                                                                      (3)
#define LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_RXDV                                                                    (12)
#define LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_RXDV_WIDTH                                                               (1)
#define LMAC_ADP_TX_MII_MON_OFFSET_RSVD3                                                                           (13)
#define LMAC_ADP_TX_MII_MON_OFFSET_RSVD3_WIDTH                                                                      (3)
#define LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_CRS                                                                     (16)
#define LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_CRS_WIDTH                                                                (1)
#define LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_COL                                                                     (17)
#define LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_COL_WIDTH                                                                (1)
#define LMAC_ADP_TX_MII_MON_OFFSET_RSVD2                                                                           (18)
#define LMAC_ADP_TX_MII_MON_OFFSET_RSVD2_WIDTH                                                                      (2)
#define LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_FC_RESULT                                                               (20)
#define LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_FC_RESULT_WIDTH                                                          (2)
#define LMAC_ADP_TX_MII_MON_OFFSET_RSVD1                                                                           (22)
#define LMAC_ADP_TX_MII_MON_OFFSET_RSVD1_WIDTH                                                                      (2)
#define LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_SPEED                                                                   (24)
#define LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_SPEED_WIDTH                                                              (2)
#define LMAC_ADP_TX_MII_MON_OFFSET_RSVD0                                                                           (26)
#define LMAC_ADP_TX_MII_MON_OFFSET_RSVD0_WIDTH                                                                      (2)
#define LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_DUPLEX                                                                  (28)
#define LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_DUPLEX_WIDTH                                                             (1)
typedef union LMAC_ADP_TX_MII_MON_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_real_link_status:LMAC_ADP_TX_MII_MON_OFFSET_DBG_REAL_LINK_STATUS_WIDTH;                             //[ 0: 0]
        jl_uint32 dbg_mii_link_status:LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_LINK_STATUS_WIDTH;                               //[ 1: 1]
        jl_uint32 rsvd5:LMAC_ADP_TX_MII_MON_OFFSET_RSVD5_WIDTH;                                                           //[ 7: 2]
        jl_uint32 dbg_mii_txen:LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_TXEN_WIDTH;                                             //[ 8: 8]
        jl_uint32 rsvd4:LMAC_ADP_TX_MII_MON_OFFSET_RSVD4_WIDTH;                                                           //[11: 9]
        jl_uint32 dbg_mii_rxdv:LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_RXDV_WIDTH;                                             //[12:12]
        jl_uint32 rsvd3:LMAC_ADP_TX_MII_MON_OFFSET_RSVD3_WIDTH;                                                           //[15:13]
        jl_uint32 dbg_mii_crs:LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_CRS_WIDTH;                                               //[16:16]
        jl_uint32 dbg_mii_col:LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_COL_WIDTH;                                               //[17:17]
        jl_uint32 rsvd2:LMAC_ADP_TX_MII_MON_OFFSET_RSVD2_WIDTH;                                                           //[19:18]
        jl_uint32 dbg_mii_fc_result:LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_FC_RESULT_WIDTH;                                   //[21:20]
        jl_uint32 rsvd1:LMAC_ADP_TX_MII_MON_OFFSET_RSVD1_WIDTH;                                                           //[23:22]
        jl_uint32 dbg_mii_speed:LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_SPEED_WIDTH;                                           //[25:24]
        jl_uint32 rsvd0:LMAC_ADP_TX_MII_MON_OFFSET_RSVD0_WIDTH;                                                           //[27:26]
        jl_uint32 dbg_mii_duplex:LMAC_ADP_TX_MII_MON_OFFSET_DBG_MII_DUPLEX_WIDTH;                                         //[28:28]
        jl_uint32 rsvd6:LMAC_ADP_TX_MII_MON_OFFSET_RSVD6_WIDTH;                                                           //[31:29]
    } BF;
    jl_uint32 val[LMAC_ADP_TX_MII_MON_ENTRY_SIZE];
} LMAC_ADP_TX_MII_MON_t;

#define LMAC_ADP_HALF_DUPLEX_STATUS                                                            ((jl_uint32)0x00142100U)
#define LMAC_ADP_HALF_DUPLEX_STATUS_NUM                                                        ((jl_uint32)0x00000001U)
#define LMAC_ADP_HALF_DUPLEX_STATUS_ENTRY_SIZE                                                                      (1)
#define LMAC_ADP_HALF_DUPLEX_STATUS_OFFSET_RSVD0                                                                    (4)
#define LMAC_ADP_HALF_DUPLEX_STATUS_OFFSET_RSVD0_WIDTH                                                             (28)
#define LMAC_ADP_HALF_DUPLEX_STATUS_OFFSET_DBG_DUPLEX_STATE                                                         (0)
#define LMAC_ADP_HALF_DUPLEX_STATUS_OFFSET_DBG_DUPLEX_STATE_WIDTH                                                   (2)
#define LMAC_ADP_HALF_DUPLEX_STATUS_OFFSET_DBG_DUPLEX_STATE_F1                                                      (2)
#define LMAC_ADP_HALF_DUPLEX_STATUS_OFFSET_DBG_DUPLEX_STATE_F1_WIDTH                                                (2)
typedef union LMAC_ADP_HALF_DUPLEX_STATUS_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_duplex_state:LMAC_ADP_HALF_DUPLEX_STATUS_OFFSET_DBG_DUPLEX_STATE_WIDTH;                             //[ 1: 0]
        jl_uint32 dbg_duplex_state_f1:LMAC_ADP_HALF_DUPLEX_STATUS_OFFSET_DBG_DUPLEX_STATE_F1_WIDTH;                       //[ 3: 2]
        jl_uint32 rsvd0:LMAC_ADP_HALF_DUPLEX_STATUS_OFFSET_RSVD0_WIDTH;                                                   //[31: 4]
    } BF;
    jl_uint32 val[LMAC_ADP_HALF_DUPLEX_STATUS_ENTRY_SIZE];
} LMAC_ADP_HALF_DUPLEX_STATUS_t;

#define LMAC_ADP_HALF_DUPLEX_ERROR_CNT                                                         ((jl_uint32)0x00142104U)
#define LMAC_ADP_HALF_DUPLEX_ERROR_CNT_NUM                                                     ((jl_uint32)0x00000001U)
#define LMAC_ADP_HALF_DUPLEX_ERROR_CNT_ENTRY_SIZE                                                                   (1)
#define LMAC_ADP_HALF_DUPLEX_ERROR_CNT_OFFSET_DBG_TX_COLLISION_COUNT                                                (0)
#define LMAC_ADP_HALF_DUPLEX_ERROR_CNT_OFFSET_DBG_TX_COLLISION_COUNT_WIDTH                                          (4)
#define LMAC_ADP_HALF_DUPLEX_ERROR_CNT_OFFSET_RSVD0                                                                 (4)
#define LMAC_ADP_HALF_DUPLEX_ERROR_CNT_OFFSET_RSVD0_WIDTH                                                           (4)
#define LMAC_ADP_HALF_DUPLEX_ERROR_CNT_OFFSET_DBG_TX_ABORT_CNT                                                      (8)
#define LMAC_ADP_HALF_DUPLEX_ERROR_CNT_OFFSET_DBG_TX_ABORT_CNT_WIDTH                                                (8)
#define LMAC_ADP_HALF_DUPLEX_ERROR_CNT_OFFSET_DBG_TX_RETRY_CNT                                                     (16)
#define LMAC_ADP_HALF_DUPLEX_ERROR_CNT_OFFSET_DBG_TX_RETRY_CNT_WIDTH                                                (8)
#define LMAC_ADP_HALF_DUPLEX_ERROR_CNT_OFFSET_DBG_RX_ABORT_CNT                                                     (24)
#define LMAC_ADP_HALF_DUPLEX_ERROR_CNT_OFFSET_DBG_RX_ABORT_CNT_WIDTH                                                (8)
typedef union LMAC_ADP_HALF_DUPLEX_ERROR_CNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_tx_collision_count:LMAC_ADP_HALF_DUPLEX_ERROR_CNT_OFFSET_DBG_TX_COLLISION_COUNT_WIDTH;              //[ 3: 0]
        jl_uint32 rsvd0:LMAC_ADP_HALF_DUPLEX_ERROR_CNT_OFFSET_RSVD0_WIDTH;                                                //[ 7: 4]
        jl_uint32 dbg_tx_abort_cnt:LMAC_ADP_HALF_DUPLEX_ERROR_CNT_OFFSET_DBG_TX_ABORT_CNT_WIDTH;                          //[15: 8]
        jl_uint32 dbg_tx_retry_cnt:LMAC_ADP_HALF_DUPLEX_ERROR_CNT_OFFSET_DBG_TX_RETRY_CNT_WIDTH;                          //[23:16]
        jl_uint32 dbg_rx_abort_cnt:LMAC_ADP_HALF_DUPLEX_ERROR_CNT_OFFSET_DBG_RX_ABORT_CNT_WIDTH;                          //[31:24]
    } BF;
    jl_uint32 val[LMAC_ADP_HALF_DUPLEX_ERROR_CNT_ENTRY_SIZE];
} LMAC_ADP_HALF_DUPLEX_ERROR_CNT_t;

#define LMAC_ADP_TX_IFM_MON                                                                    ((jl_uint32)0x00142108U)
#define LMAC_ADP_TX_IFM_MON_NUM                                                                ((jl_uint32)0x00000001U)
#define LMAC_ADP_TX_IFM_MON_ENTRY_SIZE                                                                              (1)
#define LMAC_ADP_TX_IFM_MON_OFFSET_RSVD0                                                                           (11)
#define LMAC_ADP_TX_IFM_MON_OFFSET_RSVD0_WIDTH                                                                     (21)
#define LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_RX_PAUSE_EN                                                              (0)
#define LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_RX_PAUSE_EN_WIDTH                                                        (1)
#define LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_TX_PAUSE_EN                                                              (1)
#define LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_TX_PAUSE_EN_WIDTH                                                        (1)
#define LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_SPEED                                                                    (2)
#define LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_SPEED_WIDTH                                                              (3)
#define LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_DUPLEX_MODE                                                              (5)
#define LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_DUPLEX_MODE_WIDTH                                                        (1)
#define LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_LINK_STATUS                                                              (6)
#define LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_LINK_STATUS_WIDTH                                                        (1)
#define LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_TX_EN                                                                    (7)
#define LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_TX_EN_WIDTH                                                              (1)
#define LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_RX_EN                                                                    (8)
#define LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_RX_EN_WIDTH                                                              (1)
#define LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_IFM_STATE                                                                (9)
#define LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_IFM_STATE_WIDTH                                                          (2)
typedef union LMAC_ADP_TX_IFM_MON_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_mac_rx_pause_en:LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_RX_PAUSE_EN_WIDTH;                               //[ 0: 0]
        jl_uint32 dbg_mac_tx_pause_en:LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_TX_PAUSE_EN_WIDTH;                               //[ 1: 1]
        jl_uint32 dbg_mac_speed:LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_SPEED_WIDTH;                                           //[ 4: 2]
        jl_uint32 dbg_mac_duplex_mode:LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_DUPLEX_MODE_WIDTH;                               //[ 5: 5]
        jl_uint32 dbg_mac_link_status:LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_LINK_STATUS_WIDTH;                               //[ 6: 6]
        jl_uint32 dbg_mac_tx_en:LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_TX_EN_WIDTH;                                           //[ 7: 7]
        jl_uint32 dbg_mac_rx_en:LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_RX_EN_WIDTH;                                           //[ 8: 8]
        jl_uint32 dbg_mac_ifm_state:LMAC_ADP_TX_IFM_MON_OFFSET_DBG_MAC_IFM_STATE_WIDTH;                                   //[10: 9]
        jl_uint32 rsvd0:LMAC_ADP_TX_IFM_MON_OFFSET_RSVD0_WIDTH;                                                           //[31:11]
    } BF;
    jl_uint32 val[LMAC_ADP_TX_IFM_MON_ENTRY_SIZE];
} LMAC_ADP_TX_IFM_MON_t;

#define LMAC_ADP_DWC_RX_STATE_MON                                                              ((jl_uint32)0x0014210CU)
#define LMAC_ADP_DWC_RX_STATE_MON_NUM                                                          ((jl_uint32)0x00000001U)
#define LMAC_ADP_DWC_RX_STATE_MON_ENTRY_SIZE                                                                        (1)
#define LMAC_ADP_DWC_RX_STATE_MON_OFFSET_RSVD2                                                                     (31)
#define LMAC_ADP_DWC_RX_STATE_MON_OFFSET_RSVD2_WIDTH                                                                (1)
#define LMAC_ADP_DWC_RX_STATE_MON_OFFSET_DBG_RFC_WSTATE                                                             (0)
#define LMAC_ADP_DWC_RX_STATE_MON_OFFSET_DBG_RFC_WSTATE_WIDTH                                                       (5)
#define LMAC_ADP_DWC_RX_STATE_MON_OFFSET_RSVD1                                                                      (5)
#define LMAC_ADP_DWC_RX_STATE_MON_OFFSET_RSVD1_WIDTH                                                                (3)
#define LMAC_ADP_DWC_RX_STATE_MON_OFFSET_DBG_RFC_RSTATE                                                             (8)
#define LMAC_ADP_DWC_RX_STATE_MON_OFFSET_DBG_RFC_RSTATE_WIDTH                                                       (8)
#define LMAC_ADP_DWC_RX_STATE_MON_OFFSET_DBG_FRX_STATE                                                             (16)
#define LMAC_ADP_DWC_RX_STATE_MON_OFFSET_DBG_FRX_STATE_WIDTH                                                        (6)
#define LMAC_ADP_DWC_RX_STATE_MON_OFFSET_RSVD0                                                                     (22)
#define LMAC_ADP_DWC_RX_STATE_MON_OFFSET_RSVD0_WIDTH                                                                (2)
#define LMAC_ADP_DWC_RX_STATE_MON_OFFSET_DBG_RPE_STATE                                                             (24)
#define LMAC_ADP_DWC_RX_STATE_MON_OFFSET_DBG_RPE_STATE_WIDTH                                                        (7)
typedef union LMAC_ADP_DWC_RX_STATE_MON_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_rfc_wstate:LMAC_ADP_DWC_RX_STATE_MON_OFFSET_DBG_RFC_WSTATE_WIDTH;                                   //[ 4: 0]
        jl_uint32 rsvd1:LMAC_ADP_DWC_RX_STATE_MON_OFFSET_RSVD1_WIDTH;                                                     //[ 7: 5]
        jl_uint32 dbg_rfc_rstate:LMAC_ADP_DWC_RX_STATE_MON_OFFSET_DBG_RFC_RSTATE_WIDTH;                                   //[15: 8]
        jl_uint32 dbg_frx_state:LMAC_ADP_DWC_RX_STATE_MON_OFFSET_DBG_FRX_STATE_WIDTH;                                     //[21:16]
        jl_uint32 rsvd0:LMAC_ADP_DWC_RX_STATE_MON_OFFSET_RSVD0_WIDTH;                                                     //[23:22]
        jl_uint32 dbg_rpe_state:LMAC_ADP_DWC_RX_STATE_MON_OFFSET_DBG_RPE_STATE_WIDTH;                                     //[30:24]
        jl_uint32 rsvd2:LMAC_ADP_DWC_RX_STATE_MON_OFFSET_RSVD2_WIDTH;                                                     //[31:31]
    } BF;
    jl_uint32 val[LMAC_ADP_DWC_RX_STATE_MON_ENTRY_SIZE];
} LMAC_ADP_DWC_RX_STATE_MON_t;

#define LMAC_ADP_DWC_TX_STATE_MON                                                              ((jl_uint32)0x00142110U)
#define LMAC_ADP_DWC_TX_STATE_MON_NUM                                                          ((jl_uint32)0x00000001U)
#define LMAC_ADP_DWC_TX_STATE_MON_ENTRY_SIZE                                                                        (2)
#define LMAC_ADP_DWC_TX_STATE_MON_OFFSET_RSVD4                                                                     (43)
#define LMAC_ADP_DWC_TX_STATE_MON_OFFSET_RSVD4_WIDTH                                                               (21)
#define LMAC_ADP_DWC_TX_STATE_MON_OFFSET_DBG_SMA_STATE                                                              (0)
#define LMAC_ADP_DWC_TX_STATE_MON_OFFSET_DBG_SMA_STATE_WIDTH                                                        (5)
#define LMAC_ADP_DWC_TX_STATE_MON_OFFSET_RSVD3                                                                      (5)
#define LMAC_ADP_DWC_TX_STATE_MON_OFFSET_RSVD3_WIDTH                                                                (3)
#define LMAC_ADP_DWC_TX_STATE_MON_OFFSET_DBG_TBU_STATE                                                              (8)
#define LMAC_ADP_DWC_TX_STATE_MON_OFFSET_DBG_TBU_STATE_WIDTH                                                        (3)
#define LMAC_ADP_DWC_TX_STATE_MON_OFFSET_RSVD2                                                                     (11)
#define LMAC_ADP_DWC_TX_STATE_MON_OFFSET_RSVD2_WIDTH                                                                (5)
#define LMAC_ADP_DWC_TX_STATE_MON_OFFSET_DBG_TFC_STATE                                                             (16)
#define LMAC_ADP_DWC_TX_STATE_MON_OFFSET_DBG_TFC_STATE_WIDTH                                                        (7)
#define LMAC_ADP_DWC_TX_STATE_MON_OFFSET_RSVD1                                                                     (23)
#define LMAC_ADP_DWC_TX_STATE_MON_OFFSET_RSVD1_WIDTH                                                                (1)
#define LMAC_ADP_DWC_TX_STATE_MON_OFFSET_DBG_FTX_STATE                                                             (24)
#define LMAC_ADP_DWC_TX_STATE_MON_OFFSET_DBG_FTX_STATE_WIDTH                                                        (3)
#define LMAC_ADP_DWC_TX_STATE_MON_OFFSET_RSVD0                                                                     (27)
#define LMAC_ADP_DWC_TX_STATE_MON_OFFSET_RSVD0_WIDTH                                                                (5)
#define LMAC_ADP_DWC_TX_STATE_MON_OFFSET_DBG_TPE_STATE                                                             (32)
#define LMAC_ADP_DWC_TX_STATE_MON_OFFSET_DBG_TPE_STATE_WIDTH                                                       (11)
typedef union LMAC_ADP_DWC_TX_STATE_MON_u {
    struct __attribute__ ((packed)) {
        jl_uint64 dbg_sma_state:LMAC_ADP_DWC_TX_STATE_MON_OFFSET_DBG_SMA_STATE_WIDTH;                                     //[ 4: 0]
        jl_uint64 rsvd3:LMAC_ADP_DWC_TX_STATE_MON_OFFSET_RSVD3_WIDTH;                                                     //[ 7: 5]
        jl_uint64 dbg_tbu_state:LMAC_ADP_DWC_TX_STATE_MON_OFFSET_DBG_TBU_STATE_WIDTH;                                     //[10: 8]
        jl_uint64 rsvd2:LMAC_ADP_DWC_TX_STATE_MON_OFFSET_RSVD2_WIDTH;                                                     //[15:11]
        jl_uint64 dbg_tfc_state:LMAC_ADP_DWC_TX_STATE_MON_OFFSET_DBG_TFC_STATE_WIDTH;                                     //[22:16]
        jl_uint64 rsvd1:LMAC_ADP_DWC_TX_STATE_MON_OFFSET_RSVD1_WIDTH;                                                     //[23:23]
        jl_uint64 dbg_ftx_state:LMAC_ADP_DWC_TX_STATE_MON_OFFSET_DBG_FTX_STATE_WIDTH;                                     //[26:24]
        jl_uint64 rsvd0:LMAC_ADP_DWC_TX_STATE_MON_OFFSET_RSVD0_WIDTH;                                                     //[31:27]
        jl_uint64 dbg_tpe_state:LMAC_ADP_DWC_TX_STATE_MON_OFFSET_DBG_TPE_STATE_WIDTH;                                     //[42:32]
        jl_uint64 rsvd4:LMAC_ADP_DWC_TX_STATE_MON_OFFSET_RSVD4_WIDTH;                                                     //[63:43]
    } BF;
    jl_uint32 val[LMAC_ADP_DWC_TX_STATE_MON_ENTRY_SIZE];
} LMAC_ADP_DWC_TX_STATE_MON_t;

#define LMAC_ADP_DWC_VALID_COUNT                                                               ((jl_uint32)0x00142118U)
#define LMAC_ADP_DWC_VALID_COUNT_NUM                                                           ((jl_uint32)0x00000001U)
#define LMAC_ADP_DWC_VALID_COUNT_ENTRY_SIZE                                                                         (2)
#define LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_MAC2DWC_ERR_CNT                                                         (0)
#define LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_MAC2DWC_ERR_CNT_WIDTH                                                   (8)
#define LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_MAC2DWC_EOP_CNT                                                         (8)
#define LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_MAC2DWC_EOP_CNT_WIDTH                                                   (8)
#define LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_MAC2DWC_SOP_CNT                                                        (16)
#define LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_MAC2DWC_SOP_CNT_WIDTH                                                   (8)
#define LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_MAC2DWC_VALID_CNT                                                      (24)
#define LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_MAC2DWC_VALID_CNT_WIDTH                                                 (8)
#define LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_DWC2MAC_ERR_CNT                                                        (32)
#define LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_DWC2MAC_ERR_CNT_WIDTH                                                   (8)
#define LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_DWC2MAC_EOP_CNT                                                        (40)
#define LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_DWC2MAC_EOP_CNT_WIDTH                                                   (8)
#define LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_DWC2MAC_SOP_CNT                                                        (48)
#define LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_DWC2MAC_SOP_CNT_WIDTH                                                   (8)
#define LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_DWC2MAC_VALID_CNT                                                      (56)
#define LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_DWC2MAC_VALID_CNT_WIDTH                                                 (8)
typedef union LMAC_ADP_DWC_VALID_COUNT_u {
    struct __attribute__ ((packed)) {
        jl_uint64 dbg_mac2dwc_err_cnt:LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_MAC2DWC_ERR_CNT_WIDTH;                          //[ 7: 0]
        jl_uint64 dbg_mac2dwc_eop_cnt:LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_MAC2DWC_EOP_CNT_WIDTH;                          //[15: 8]
        jl_uint64 dbg_mac2dwc_sop_cnt:LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_MAC2DWC_SOP_CNT_WIDTH;                          //[23:16]
        jl_uint64 dbg_mac2dwc_valid_cnt:LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_MAC2DWC_VALID_CNT_WIDTH;                      //[31:24]
        jl_uint64 dbg_dwc2mac_err_cnt:LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_DWC2MAC_ERR_CNT_WIDTH;                          //[39:32]
        jl_uint64 dbg_dwc2mac_eop_cnt:LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_DWC2MAC_EOP_CNT_WIDTH;                          //[47:40]
        jl_uint64 dbg_dwc2mac_sop_cnt:LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_DWC2MAC_SOP_CNT_WIDTH;                          //[55:48]
        jl_uint64 dbg_dwc2mac_valid_cnt:LMAC_ADP_DWC_VALID_COUNT_OFFSET_DBG_DWC2MAC_VALID_CNT_WIDTH;                      //[63:56]
    } BF;
    jl_uint32 val[LMAC_ADP_DWC_VALID_COUNT_ENTRY_SIZE];
} LMAC_ADP_DWC_VALID_COUNT_t;

#define LMAC_ADP_RX_ERR_COUNT                                                                  ((jl_uint32)0x00142120U)
#define LMAC_ADP_RX_ERR_COUNT_NUM                                                              ((jl_uint32)0x00000001U)
#define LMAC_ADP_RX_ERR_COUNT_ENTRY_SIZE                                                                            (1)
#define LMAC_ADP_RX_ERR_COUNT_OFFSET_RSVD0                                                                          (8)
#define LMAC_ADP_RX_ERR_COUNT_OFFSET_RSVD0_WIDTH                                                                   (24)
#define LMAC_ADP_RX_ERR_COUNT_OFFSET_DBG_RX_FLUSH_CNT                                                               (0)
#define LMAC_ADP_RX_ERR_COUNT_OFFSET_DBG_RX_FLUSH_CNT_WIDTH                                                         (8)
typedef union LMAC_ADP_RX_ERR_COUNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_rx_flush_cnt:LMAC_ADP_RX_ERR_COUNT_OFFSET_DBG_RX_FLUSH_CNT_WIDTH;                                   //[ 7: 0]
        jl_uint32 rsvd0:LMAC_ADP_RX_ERR_COUNT_OFFSET_RSVD0_WIDTH;                                                         //[31: 8]
    } BF;
    jl_uint32 val[LMAC_ADP_RX_ERR_COUNT_ENTRY_SIZE];
} LMAC_ADP_RX_ERR_COUNT_t;

#define LMAC_ADP_DWC_TBU_COUNT                                                                 ((jl_uint32)0x00142124U)
#define LMAC_ADP_DWC_TBU_COUNT_NUM                                                             ((jl_uint32)0x00000001U)
#define LMAC_ADP_DWC_TBU_COUNT_ENTRY_SIZE                                                                           (1)
#define LMAC_ADP_DWC_TBU_COUNT_OFFSET_DBG_TFC_ABORT                                                                 (0)
#define LMAC_ADP_DWC_TBU_COUNT_OFFSET_DBG_TFC_ABORT_WIDTH                                                           (1)
#define LMAC_ADP_DWC_TBU_COUNT_OFFSET_DBG_TFC_RDY                                                                   (1)
#define LMAC_ADP_DWC_TBU_COUNT_OFFSET_DBG_TFC_RDY_WIDTH                                                             (1)
#define LMAC_ADP_DWC_TBU_COUNT_OFFSET_RSVD0                                                                         (2)
#define LMAC_ADP_DWC_TBU_COUNT_OFFSET_RSVD0_WIDTH                                                                   (6)
#define LMAC_ADP_DWC_TBU_COUNT_OFFSET_DBG_TBU_EOP_CNT                                                               (8)
#define LMAC_ADP_DWC_TBU_COUNT_OFFSET_DBG_TBU_EOP_CNT_WIDTH                                                         (8)
#define LMAC_ADP_DWC_TBU_COUNT_OFFSET_DBG_TBU_SOP_CNT                                                              (16)
#define LMAC_ADP_DWC_TBU_COUNT_OFFSET_DBG_TBU_SOP_CNT_WIDTH                                                         (8)
#define LMAC_ADP_DWC_TBU_COUNT_OFFSET_DBG_TBU_VALID_CNT                                                            (24)
#define LMAC_ADP_DWC_TBU_COUNT_OFFSET_DBG_TBU_VALID_CNT_WIDTH                                                       (8)
typedef union LMAC_ADP_DWC_TBU_COUNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_tfc_abort:LMAC_ADP_DWC_TBU_COUNT_OFFSET_DBG_TFC_ABORT_WIDTH;                                        //[ 0: 0]
        jl_uint32 dbg_tfc_rdy:LMAC_ADP_DWC_TBU_COUNT_OFFSET_DBG_TFC_RDY_WIDTH;                                            //[ 1: 1]
        jl_uint32 rsvd0:LMAC_ADP_DWC_TBU_COUNT_OFFSET_RSVD0_WIDTH;                                                        //[ 7: 2]
        jl_uint32 dbg_tbu_eop_cnt:LMAC_ADP_DWC_TBU_COUNT_OFFSET_DBG_TBU_EOP_CNT_WIDTH;                                    //[15: 8]
        jl_uint32 dbg_tbu_sop_cnt:LMAC_ADP_DWC_TBU_COUNT_OFFSET_DBG_TBU_SOP_CNT_WIDTH;                                    //[23:16]
        jl_uint32 dbg_tbu_valid_cnt:LMAC_ADP_DWC_TBU_COUNT_OFFSET_DBG_TBU_VALID_CNT_WIDTH;                                //[31:24]
    } BF;
    jl_uint32 val[LMAC_ADP_DWC_TBU_COUNT_ENTRY_SIZE];
} LMAC_ADP_DWC_TBU_COUNT_t;

#define LMAC_ADP_DWC_TFC_COUNT                                                                 ((jl_uint32)0x00142128U)
#define LMAC_ADP_DWC_TFC_COUNT_NUM                                                             ((jl_uint32)0x00000001U)
#define LMAC_ADP_DWC_TFC_COUNT_ENTRY_SIZE                                                                           (1)
#define LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TPE_GNT                                                                   (0)
#define LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TPE_GNT_WIDTH                                                             (1)
#define LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TFC_REQ                                                                   (1)
#define LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TFC_REQ_WIDTH                                                             (1)
#define LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TPE_ABORT                                                                 (2)
#define LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TPE_ABORT_WIDTH                                                           (1)
#define LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TPE_ACK                                                                   (3)
#define LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TPE_ACK_WIDTH                                                             (1)
#define LMAC_ADP_DWC_TFC_COUNT_OFFSET_RSVD0                                                                         (4)
#define LMAC_ADP_DWC_TFC_COUNT_OFFSET_RSVD0_WIDTH                                                                   (4)
#define LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TFC_EOP_CNT                                                               (8)
#define LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TFC_EOP_CNT_WIDTH                                                         (8)
#define LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TFC_SOP_CNT                                                              (16)
#define LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TFC_SOP_CNT_WIDTH                                                         (8)
#define LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TFC_VALID_CNT                                                            (24)
#define LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TFC_VALID_CNT_WIDTH                                                       (8)
typedef union LMAC_ADP_DWC_TFC_COUNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_tpe_gnt:LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TPE_GNT_WIDTH;                                            //[ 0: 0]
        jl_uint32 dbg_tfc_req:LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TFC_REQ_WIDTH;                                            //[ 1: 1]
        jl_uint32 dbg_tpe_abort:LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TPE_ABORT_WIDTH;                                        //[ 2: 2]
        jl_uint32 dbg_tpe_ack:LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TPE_ACK_WIDTH;                                            //[ 3: 3]
        jl_uint32 rsvd0:LMAC_ADP_DWC_TFC_COUNT_OFFSET_RSVD0_WIDTH;                                                        //[ 7: 4]
        jl_uint32 dbg_tfc_eop_cnt:LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TFC_EOP_CNT_WIDTH;                                    //[15: 8]
        jl_uint32 dbg_tfc_sop_cnt:LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TFC_SOP_CNT_WIDTH;                                    //[23:16]
        jl_uint32 dbg_tfc_valid_cnt:LMAC_ADP_DWC_TFC_COUNT_OFFSET_DBG_TFC_VALID_CNT_WIDTH;                                //[31:24]
    } BF;
    jl_uint32 val[LMAC_ADP_DWC_TFC_COUNT_ENTRY_SIZE];
} LMAC_ADP_DWC_TFC_COUNT_t;

#define LMAC_ADP_DWC_FTX_COUNT                                                                 ((jl_uint32)0x0014212CU)
#define LMAC_ADP_DWC_FTX_COUNT_NUM                                                             ((jl_uint32)0x00000001U)
#define LMAC_ADP_DWC_FTX_COUNT_ENTRY_SIZE                                                                           (1)
#define LMAC_ADP_DWC_FTX_COUNT_OFFSET_DBG_FTX_ACK                                                                   (0)
#define LMAC_ADP_DWC_FTX_COUNT_OFFSET_DBG_FTX_ACK_WIDTH                                                             (1)
#define LMAC_ADP_DWC_FTX_COUNT_OFFSET_RSVD0                                                                         (1)
#define LMAC_ADP_DWC_FTX_COUNT_OFFSET_RSVD0_WIDTH                                                                   (7)
#define LMAC_ADP_DWC_FTX_COUNT_OFFSET_DBG_FTX_EOP_CNT                                                               (8)
#define LMAC_ADP_DWC_FTX_COUNT_OFFSET_DBG_FTX_EOP_CNT_WIDTH                                                         (8)
#define LMAC_ADP_DWC_FTX_COUNT_OFFSET_DBG_FTX_SOP_CNT                                                              (16)
#define LMAC_ADP_DWC_FTX_COUNT_OFFSET_DBG_FTX_SOP_CNT_WIDTH                                                         (8)
#define LMAC_ADP_DWC_FTX_COUNT_OFFSET_DBG_FTX_VALID_CNT                                                            (24)
#define LMAC_ADP_DWC_FTX_COUNT_OFFSET_DBG_FTX_VALID_CNT_WIDTH                                                       (8)
typedef union LMAC_ADP_DWC_FTX_COUNT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_ftx_ack:LMAC_ADP_DWC_FTX_COUNT_OFFSET_DBG_FTX_ACK_WIDTH;                                            //[ 0: 0]
        jl_uint32 rsvd0:LMAC_ADP_DWC_FTX_COUNT_OFFSET_RSVD0_WIDTH;                                                        //[ 7: 1]
        jl_uint32 dbg_ftx_eop_cnt:LMAC_ADP_DWC_FTX_COUNT_OFFSET_DBG_FTX_EOP_CNT_WIDTH;                                    //[15: 8]
        jl_uint32 dbg_ftx_sop_cnt:LMAC_ADP_DWC_FTX_COUNT_OFFSET_DBG_FTX_SOP_CNT_WIDTH;                                    //[23:16]
        jl_uint32 dbg_ftx_valid_cnt:LMAC_ADP_DWC_FTX_COUNT_OFFSET_DBG_FTX_VALID_CNT_WIDTH;                                //[31:24]
    } BF;
    jl_uint32 val[LMAC_ADP_DWC_FTX_COUNT_ENTRY_SIZE];
} LMAC_ADP_DWC_FTX_COUNT_t;

#define LMAC_ADP_DWC_STATUS_LOCK                                                               ((jl_uint32)0x00142130U)
#define LMAC_ADP_DWC_STATUS_LOCK_NUM                                                           ((jl_uint32)0x00000001U)
#define LMAC_ADP_DWC_STATUS_LOCK_ENTRY_SIZE                                                                         (2)
#define LMAC_ADP_DWC_STATUS_LOCK_OFFSET_DBG_MRI_RXSTATUS                                                            (0)
#define LMAC_ADP_DWC_STATUS_LOCK_OFFSET_DBG_MRI_RXSTATUS_WIDTH                                                     (32)
#define LMAC_ADP_DWC_STATUS_LOCK_OFFSET_DBG_MTI_TXSTATUS                                                           (32)
#define LMAC_ADP_DWC_STATUS_LOCK_OFFSET_DBG_MTI_TXSTATUS_WIDTH                                                     (32)
typedef union LMAC_ADP_DWC_STATUS_LOCK_u {
    struct __attribute__ ((packed)) {
        jl_uint64 dbg_mri_rxstatus:LMAC_ADP_DWC_STATUS_LOCK_OFFSET_DBG_MRI_RXSTATUS_WIDTH;                                //[31: 0]
        jl_uint64 dbg_mti_txstatus:LMAC_ADP_DWC_STATUS_LOCK_OFFSET_DBG_MTI_TXSTATUS_WIDTH;                                //[63:32]
    } BF;
    jl_uint32 val[LMAC_ADP_DWC_STATUS_LOCK_ENTRY_SIZE];
} LMAC_ADP_DWC_STATUS_LOCK_t;

#endif /* __JL_REG_LMAC_ADP_H__ */

