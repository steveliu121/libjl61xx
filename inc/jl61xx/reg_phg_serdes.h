//reg_phg_serdes.h
/*
* Automatically generated by gen_c_api.py, don't edit it
*/
#ifndef __JL_REG_PHG_SERDES_H__
#define __JL_REG_PHG_SERDES_H__

#include <jl_types.h>

#define PHG_SERDES1_BASE                                                                       ((jl_uint32)0x00268000U)
#define PHG_SERDES1_BLOCK_SIZE                                                                 ((jl_uint32)0x00004000U)
#define PHG_SERDES0_BASE                                                                       ((jl_uint32)0x00264000U)
#define PHG_SERDES0_BLOCK_SIZE                                                                 ((jl_uint32)0x00004000U)

#define PHG_SERDES_IEEE_BMCR                                                                   ((jl_uint32)0x00264000U)
#define PHG_SERDES_IEEE_BMCR_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_SERDES_IEEE_BMCR_ENTRY_SIZE                                                                             (1)
#define PHG_SERDES_IEEE_BMCR_OFFSET_RSVD0                                                                          (16)
#define PHG_SERDES_IEEE_BMCR_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_RSVD_0                                                                     (0)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_RSVD_0_WIDTH                                                               (6)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_SPEED_SEL_MSB                                                              (6)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_SPEED_SEL_MSB_WIDTH                                                        (1)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_COLLISION_TEST_STATUS                                                      (7)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_COLLISION_TEST_STATUS_WIDTH                                                (1)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_DUPLEX_MODE                                                                (8)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_DUPLEX_MODE_WIDTH                                                          (1)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_RESTART_AN                                                                 (9)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_RESTART_AN_WIDTH                                                           (1)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_ISOLATE_EN                                                                (10)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_ISOLATE_EN_WIDTH                                                           (1)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_POWER_DOWN                                                                (11)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_POWER_DOWN_WIDTH                                                           (1)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_AN_EN                                                                     (12)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_AN_EN_WIDTH                                                                (1)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_SPEED_SEL_LSB                                                             (13)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_SPEED_SEL_LSB_WIDTH                                                        (1)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_LPBK_EN                                                                   (14)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_LPBK_EN_WIDTH                                                              (1)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_SOFTWARE_RESET                                                            (15)
#define PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_SOFTWARE_RESET_WIDTH                                                       (1)
typedef union PHG_SERDES_IEEE_BMCR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_rsvd_0:PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_RSVD_0_WIDTH;                                              //[ 5: 0]
        jl_uint32 ieee_speed_sel_msb:PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_SPEED_SEL_MSB_WIDTH;                                //[ 6: 6]
        jl_uint32 ieee_collision_test_status:PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_COLLISION_TEST_STATUS_WIDTH;                //[ 7: 7]
        jl_uint32 ieee_duplex_mode:PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_DUPLEX_MODE_WIDTH;                                    //[ 8: 8]
        jl_uint32 ieee_restart_an:PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_RESTART_AN_WIDTH;                                      //[ 9: 9]
        jl_uint32 ieee_isolate_en:PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_ISOLATE_EN_WIDTH;                                      //[10:10]
        jl_uint32 ieee_power_down:PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_POWER_DOWN_WIDTH;                                      //[11:11]
        jl_uint32 ieee_an_en:PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_AN_EN_WIDTH;                                                //[12:12]
        jl_uint32 ieee_speed_sel_lsb:PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_SPEED_SEL_LSB_WIDTH;                                //[13:13]
        jl_uint32 ieee_lpbk_en:PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_LPBK_EN_WIDTH;                                            //[14:14]
        jl_uint32 ieee_software_reset:PHG_SERDES_IEEE_BMCR_OFFSET_IEEE_SOFTWARE_RESET_WIDTH;                              //[15:15]
        jl_uint32 rsvd0:PHG_SERDES_IEEE_BMCR_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_IEEE_BMCR_ENTRY_SIZE];
} PHG_SERDES_IEEE_BMCR_t;

#define PHG_SERDES_IEEE_BMSR                                                                   ((jl_uint32)0x00264004U)
#define PHG_SERDES_IEEE_BMSR_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_SERDES_IEEE_BMSR_ENTRY_SIZE                                                                             (1)
#define PHG_SERDES_IEEE_BMSR_OFFSET_RSVD2                                                                          (16)
#define PHG_SERDES_IEEE_BMSR_OFFSET_RSVD2_WIDTH                                                                    (16)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_EXTENDED_CAPABILITY                                                        (0)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_EXTENDED_CAPABILITY_WIDTH                                                  (1)
#define PHG_SERDES_IEEE_BMSR_OFFSET_RSVD1                                                                           (1)
#define PHG_SERDES_IEEE_BMSR_OFFSET_RSVD1_WIDTH                                                                     (1)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_LINK_STATUS                                                                (2)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_LINK_STATUS_WIDTH                                                          (1)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_AN_ABILITY                                                                 (3)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_AN_ABILITY_WIDTH                                                           (1)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_REM_FAULT                                                                  (4)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_REM_FAULT_WIDTH                                                            (1)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_AN_COMPLETE                                                                (5)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_AN_COMPLETE_WIDTH                                                          (1)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_MF_PREAMBLE_SUPP                                                           (6)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_MF_PREAMBLE_SUPP_WIDTH                                                     (1)
#define PHG_SERDES_IEEE_BMSR_OFFSET_RSVD0                                                                           (7)
#define PHG_SERDES_IEEE_BMSR_OFFSET_RSVD0_WIDTH                                                                     (1)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_EXTENDED_STATUS                                                            (8)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_EXTENDED_STATUS_WIDTH                                                      (1)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_100BASET2_HALF_DUPLEX                                                      (9)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_100BASET2_HALF_DUPLEX_WIDTH                                                (1)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_100BASET2_FULL_DUPLEX                                                     (10)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_100BASET2_FULL_DUPLEX_WIDTH                                                (1)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_10MBPS_HALF_DUPLEX                                                        (11)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_10MBPS_HALF_DUPLEX_WIDTH                                                   (1)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_10MBPS_FULL_DUPLEX                                                        (12)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_10MBPS_FULL_DUPLEX_WIDTH                                                   (1)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_100BASEX_HALF_DUPLEX                                                      (13)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_100BASEX_HALF_DUPLEX_WIDTH                                                 (1)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_100BASEX_FULL_DUPLEX                                                      (14)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_100BASEX_FULL_DUPLEX_WIDTH                                                 (1)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_100BASE_T4                                                                (15)
#define PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_100BASE_T4_WIDTH                                                           (1)
typedef union PHG_SERDES_IEEE_BMSR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_extended_capability:PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_EXTENDED_CAPABILITY_WIDTH;                    //[ 0: 0]
        jl_uint32 rsvd1:PHG_SERDES_IEEE_BMSR_OFFSET_RSVD1_WIDTH;                                                          //[ 1: 1]
        jl_uint32 ieee_link_status:PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_LINK_STATUS_WIDTH;                                    //[ 2: 2]
        jl_uint32 ieee_an_ability:PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_AN_ABILITY_WIDTH;                                      //[ 3: 3]
        jl_uint32 ieee_rem_fault:PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_REM_FAULT_WIDTH;                                        //[ 4: 4]
        jl_uint32 ieee_an_complete:PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_AN_COMPLETE_WIDTH;                                    //[ 5: 5]
        jl_uint32 ieee_mf_preamble_supp:PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_MF_PREAMBLE_SUPP_WIDTH;                          //[ 6: 6]
        jl_uint32 rsvd0:PHG_SERDES_IEEE_BMSR_OFFSET_RSVD0_WIDTH;                                                          //[ 7: 7]
        jl_uint32 ieee_extended_status:PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_EXTENDED_STATUS_WIDTH;                            //[ 8: 8]
        jl_uint32 ieee_100baset2_half_duplex:PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_100BASET2_HALF_DUPLEX_WIDTH;                //[ 9: 9]
        jl_uint32 ieee_100baset2_full_duplex:PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_100BASET2_FULL_DUPLEX_WIDTH;                //[10:10]
        jl_uint32 ieee_10mbps_half_duplex:PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_10MBPS_HALF_DUPLEX_WIDTH;                      //[11:11]
        jl_uint32 ieee_10mbps_full_duplex:PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_10MBPS_FULL_DUPLEX_WIDTH;                      //[12:12]
        jl_uint32 ieee_100basex_half_duplex:PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_100BASEX_HALF_DUPLEX_WIDTH;                  //[13:13]
        jl_uint32 ieee_100basex_full_duplex:PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_100BASEX_FULL_DUPLEX_WIDTH;                  //[14:14]
        jl_uint32 ieee_100base_t4:PHG_SERDES_IEEE_BMSR_OFFSET_IEEE_100BASE_T4_WIDTH;                                      //[15:15]
        jl_uint32 rsvd2:PHG_SERDES_IEEE_BMSR_OFFSET_RSVD2_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_IEEE_BMSR_ENTRY_SIZE];
} PHG_SERDES_IEEE_BMSR_t;

#define PHG_SERDES_IEEE_PHYID1                                                                 ((jl_uint32)0x00264008U)
#define PHG_SERDES_IEEE_PHYID1_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_SERDES_IEEE_PHYID1_ENTRY_SIZE                                                                           (1)
#define PHG_SERDES_IEEE_PHYID1_OFFSET_RSVD0                                                                        (16)
#define PHG_SERDES_IEEE_PHYID1_OFFSET_RSVD0_WIDTH                                                                  (16)
#define PHG_SERDES_IEEE_PHYID1_OFFSET_IEEE_PHY_OUI_HIGH                                                             (0)
#define PHG_SERDES_IEEE_PHYID1_OFFSET_IEEE_PHY_OUI_HIGH_WIDTH                                                      (16)
typedef union PHG_SERDES_IEEE_PHYID1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_phy_oui_high:PHG_SERDES_IEEE_PHYID1_OFFSET_IEEE_PHY_OUI_HIGH_WIDTH;                                //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_IEEE_PHYID1_OFFSET_RSVD0_WIDTH;                                                        //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_IEEE_PHYID1_ENTRY_SIZE];
} PHG_SERDES_IEEE_PHYID1_t;

#define PHG_SERDES_IEEE_PHYID2                                                                 ((jl_uint32)0x0026400CU)
#define PHG_SERDES_IEEE_PHYID2_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_SERDES_IEEE_PHYID2_ENTRY_SIZE                                                                           (1)
#define PHG_SERDES_IEEE_PHYID2_OFFSET_RSVD0                                                                        (16)
#define PHG_SERDES_IEEE_PHYID2_OFFSET_RSVD0_WIDTH                                                                  (16)
#define PHG_SERDES_IEEE_PHYID2_OFFSET_IEEE_REV_NUM                                                                  (0)
#define PHG_SERDES_IEEE_PHYID2_OFFSET_IEEE_REV_NUM_WIDTH                                                            (4)
#define PHG_SERDES_IEEE_PHYID2_OFFSET_IEEE_MODEL_NUM                                                                (4)
#define PHG_SERDES_IEEE_PHYID2_OFFSET_IEEE_MODEL_NUM_WIDTH                                                          (6)
#define PHG_SERDES_IEEE_PHYID2_OFFSET_IEEE_PHY_OUI_LOW                                                             (10)
#define PHG_SERDES_IEEE_PHYID2_OFFSET_IEEE_PHY_OUI_LOW_WIDTH                                                        (6)
typedef union PHG_SERDES_IEEE_PHYID2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_rev_num:PHG_SERDES_IEEE_PHYID2_OFFSET_IEEE_REV_NUM_WIDTH;                                          //[ 3: 0]
        jl_uint32 ieee_model_num:PHG_SERDES_IEEE_PHYID2_OFFSET_IEEE_MODEL_NUM_WIDTH;                                      //[ 9: 4]
        jl_uint32 ieee_phy_oui_low:PHG_SERDES_IEEE_PHYID2_OFFSET_IEEE_PHY_OUI_LOW_WIDTH;                                  //[15:10]
        jl_uint32 rsvd0:PHG_SERDES_IEEE_PHYID2_OFFSET_RSVD0_WIDTH;                                                        //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_IEEE_PHYID2_ENTRY_SIZE];
} PHG_SERDES_IEEE_PHYID2_t;

#define PHG_SERDES_IEEE_ANAR                                                                   ((jl_uint32)0x00264010U)
#define PHG_SERDES_IEEE_ANAR_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_SERDES_IEEE_ANAR_ENTRY_SIZE                                                                             (1)
#define PHG_SERDES_IEEE_ANAR_OFFSET_RSVD0                                                                           (9)
#define PHG_SERDES_IEEE_ANAR_OFFSET_RSVD0_WIDTH                                                                    (23)
#define PHG_SERDES_IEEE_ANAR_OFFSET_IEEE_AN_RESERVED                                                                (0)
#define PHG_SERDES_IEEE_ANAR_OFFSET_IEEE_AN_RESERVED_WIDTH                                                          (5)
#define PHG_SERDES_IEEE_ANAR_OFFSET_IEEE_AN_FULL_DUPLEX                                                             (5)
#define PHG_SERDES_IEEE_ANAR_OFFSET_IEEE_AN_FULL_DUPLEX_WIDTH                                                       (1)
#define PHG_SERDES_IEEE_ANAR_OFFSET_IEEE_AN_HALF_DUPLEX                                                             (6)
#define PHG_SERDES_IEEE_ANAR_OFFSET_IEEE_AN_HALF_DUPLEX_WIDTH                                                       (1)
#define PHG_SERDES_IEEE_ANAR_OFFSET_IEEE_AN_PAUSE                                                                   (7)
#define PHG_SERDES_IEEE_ANAR_OFFSET_IEEE_AN_PAUSE_WIDTH                                                             (1)
#define PHG_SERDES_IEEE_ANAR_OFFSET_IEEE_AN_ASYM_PAUSE                                                              (8)
#define PHG_SERDES_IEEE_ANAR_OFFSET_IEEE_AN_ASYM_PAUSE_WIDTH                                                        (1)
typedef union PHG_SERDES_IEEE_ANAR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_an_reserved:PHG_SERDES_IEEE_ANAR_OFFSET_IEEE_AN_RESERVED_WIDTH;                                    //[ 4: 0]
        jl_uint32 ieee_an_full_duplex:PHG_SERDES_IEEE_ANAR_OFFSET_IEEE_AN_FULL_DUPLEX_WIDTH;                              //[ 5: 5]
        jl_uint32 ieee_an_half_duplex:PHG_SERDES_IEEE_ANAR_OFFSET_IEEE_AN_HALF_DUPLEX_WIDTH;                              //[ 6: 6]
        jl_uint32 ieee_an_pause:PHG_SERDES_IEEE_ANAR_OFFSET_IEEE_AN_PAUSE_WIDTH;                                          //[ 7: 7]
        jl_uint32 ieee_an_asym_pause:PHG_SERDES_IEEE_ANAR_OFFSET_IEEE_AN_ASYM_PAUSE_WIDTH;                                //[ 8: 8]
		jl_uint32 rsvd0:PHG_SERDES_IEEE_ANAR_OFFSET_RSVD0_WIDTH;                                                          //[31: 9]
    } BF;
    jl_uint32 val[PHG_SERDES_IEEE_ANAR_ENTRY_SIZE];
} PHG_SERDES_IEEE_ANAR_t;

#define PHG_SERDES_IEEE_ANLPAR                                                                 ((jl_uint32)0x00264014U)
#define PHG_SERDES_IEEE_ANLPAR_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_SERDES_IEEE_ANLPAR_ENTRY_SIZE                                                                           (1)
#define PHG_SERDES_IEEE_ANLPAR_OFFSET_RSVD0                                                                        (16)
#define PHG_SERDES_IEEE_ANLPAR_OFFSET_RSVD0_WIDTH                                                                  (16)
#define PHG_SERDES_IEEE_ANLPAR_OFFSET_IEEE_AN_LP_ADV                                                                (0)
#define PHG_SERDES_IEEE_ANLPAR_OFFSET_IEEE_AN_LP_ADV_WIDTH                                                         (16)
typedef union PHG_SERDES_IEEE_ANLPAR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_an_lp_adv:PHG_SERDES_IEEE_ANLPAR_OFFSET_IEEE_AN_LP_ADV_WIDTH;                                      //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_IEEE_ANLPAR_OFFSET_RSVD0_WIDTH;                                                        //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_IEEE_ANLPAR_ENTRY_SIZE];
} PHG_SERDES_IEEE_ANLPAR_t;

#define PHG_SERDES_IEEE_ANER                                                                   ((jl_uint32)0x00264018U)
#define PHG_SERDES_IEEE_ANER_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_SERDES_IEEE_ANER_ENTRY_SIZE                                                                             (1)
#define PHG_SERDES_IEEE_ANER_OFFSET_RSVD1                                                                          (16)
#define PHG_SERDES_IEEE_ANER_OFFSET_RSVD1_WIDTH                                                                    (16)
#define PHG_SERDES_IEEE_ANER_OFFSET_IEEE_AN_LP_AN_ABLE                                                              (0)
#define PHG_SERDES_IEEE_ANER_OFFSET_IEEE_AN_LP_AN_ABLE_WIDTH                                                        (1)
#define PHG_SERDES_IEEE_ANER_OFFSET_IEEE_AN_PAGE_RECEVIED                                                           (1)
#define PHG_SERDES_IEEE_ANER_OFFSET_IEEE_AN_PAGE_RECEVIED_WIDTH                                                     (1)
#define PHG_SERDES_IEEE_ANER_OFFSET_IEEE_AN_LOC_NEXTPAGE_ABLE                                                       (2)
#define PHG_SERDES_IEEE_ANER_OFFSET_IEEE_AN_LOC_NEXTPAGE_ABLE_WIDTH                                                 (1)
#define PHG_SERDES_IEEE_ANER_OFFSET_IEEE_AN_LP_NEXTPAGE_ABLE                                                        (3)
#define PHG_SERDES_IEEE_ANER_OFFSET_IEEE_AN_LP_NEXTPAGE_ABLE_WIDTH                                                  (1)
#define PHG_SERDES_IEEE_ANER_OFFSET_IEEE_AN_PARALLEL_DET_FAULT                                                      (4)
#define PHG_SERDES_IEEE_ANER_OFFSET_IEEE_AN_PARALLEL_DET_FAULT_WIDTH                                                (1)
#define PHG_SERDES_IEEE_ANER_OFFSET_RSVD0                                                                           (5)
#define PHG_SERDES_IEEE_ANER_OFFSET_RSVD0_WIDTH                                                                     (2)
#define PHG_SERDES_IEEE_ANER_OFFSET_IEEE_RSVD_1                                                                     (7)
#define PHG_SERDES_IEEE_ANER_OFFSET_IEEE_RSVD_1_WIDTH                                                               (9)
typedef union PHG_SERDES_IEEE_ANER_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_an_lp_an_able:PHG_SERDES_IEEE_ANER_OFFSET_IEEE_AN_LP_AN_ABLE_WIDTH;                                //[ 0: 0]
        jl_uint32 ieee_an_page_recevied:PHG_SERDES_IEEE_ANER_OFFSET_IEEE_AN_PAGE_RECEVIED_WIDTH;                          //[ 1: 1]
        jl_uint32 ieee_an_loc_nextpage_able:PHG_SERDES_IEEE_ANER_OFFSET_IEEE_AN_LOC_NEXTPAGE_ABLE_WIDTH;                  //[ 2: 2]
        jl_uint32 ieee_an_lp_nextpage_able:PHG_SERDES_IEEE_ANER_OFFSET_IEEE_AN_LP_NEXTPAGE_ABLE_WIDTH;                    //[ 3: 3]
        jl_uint32 ieee_an_parallel_det_fault:PHG_SERDES_IEEE_ANER_OFFSET_IEEE_AN_PARALLEL_DET_FAULT_WIDTH;                //[ 4: 4]
        jl_uint32 rsvd0:PHG_SERDES_IEEE_ANER_OFFSET_RSVD0_WIDTH;                                                          //[ 6: 5]
        jl_uint32 ieee_rsvd_1:PHG_SERDES_IEEE_ANER_OFFSET_IEEE_RSVD_1_WIDTH;                                              //[15: 7]
        jl_uint32 rsvd1:PHG_SERDES_IEEE_ANER_OFFSET_RSVD1_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_IEEE_ANER_ENTRY_SIZE];
} PHG_SERDES_IEEE_ANER_t;

#define PHG_SERDES_IEEE_GBESR                                                                  ((jl_uint32)0x0026401CU)
#define PHG_SERDES_IEEE_GBESR_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_SERDES_IEEE_GBESR_ENTRY_SIZE                                                                            (1)
#define PHG_SERDES_IEEE_GBESR_OFFSET_RSVD0                                                                         (16)
#define PHG_SERDES_IEEE_GBESR_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_SERDES_IEEE_GBESR_OFFSET_IEEE_EXTENDED_CAPABLE                                                          (0)
#define PHG_SERDES_IEEE_GBESR_OFFSET_IEEE_EXTENDED_CAPABLE_WIDTH                                                   (16)
typedef union PHG_SERDES_IEEE_GBESR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_extended_capable:PHG_SERDES_IEEE_GBESR_OFFSET_IEEE_EXTENDED_CAPABLE_WIDTH;                         //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_IEEE_GBESR_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_IEEE_GBESR_ENTRY_SIZE];
} PHG_SERDES_IEEE_GBESR_t;

#define PHG_SERDES_SW_CLR                                                                      ((jl_uint32)0x00264080U)
#define PHG_SERDES_SW_CLR_NUM                                                                  ((jl_uint32)0x00000001U)
#define PHG_SERDES_SW_CLR_ENTRY_SIZE                                                                                (1)
#define PHG_SERDES_SW_CLR_OFFSET_RSVD0                                                                              (4)
#define PHG_SERDES_SW_CLR_OFFSET_RSVD0_WIDTH                                                                       (28)
#define PHG_SERDES_SW_CLR_OFFSET_IEEE_RESTART_AN_CLR                                                                (0)
#define PHG_SERDES_SW_CLR_OFFSET_IEEE_RESTART_AN_CLR_WIDTH                                                          (1)
#define PHG_SERDES_SW_CLR_OFFSET_IEEE_SOFTWARE_RESET_CLR                                                            (1)
#define PHG_SERDES_SW_CLR_OFFSET_IEEE_SOFTWARE_RESET_CLR_WIDTH                                                      (1)
#define PHG_SERDES_SW_CLR_OFFSET_SET_IEEE_LINK_STATUS                                                               (2)
#define PHG_SERDES_SW_CLR_OFFSET_SET_IEEE_LINK_STATUS_WIDTH                                                         (1)
#define PHG_SERDES_SW_CLR_OFFSET_REG_SW_RSTN                                                                        (3)
#define PHG_SERDES_SW_CLR_OFFSET_REG_SW_RSTN_WIDTH                                                                  (1)
typedef union PHG_SERDES_SW_CLR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ieee_restart_an_clr:PHG_SERDES_SW_CLR_OFFSET_IEEE_RESTART_AN_CLR_WIDTH;                                 //[ 0: 0]
        jl_uint32 ieee_software_reset_clr:PHG_SERDES_SW_CLR_OFFSET_IEEE_SOFTWARE_RESET_CLR_WIDTH;                         //[ 1: 1]
        jl_uint32 set_ieee_link_status:PHG_SERDES_SW_CLR_OFFSET_SET_IEEE_LINK_STATUS_WIDTH;                               //[ 2: 2]
        jl_uint32 reg_sw_rstn:PHG_SERDES_SW_CLR_OFFSET_REG_SW_RSTN_WIDTH;                                                 //[ 3: 3]
        jl_uint32 rsvd0:PHG_SERDES_SW_CLR_OFFSET_RSVD0_WIDTH;                                                             //[31: 4]
    } BF;
    jl_uint32 val[PHG_SERDES_SW_CLR_ENTRY_SIZE];
} PHG_SERDES_SW_CLR_t;

#define PHG_SERDES_PU0                                                                         ((jl_uint32)0x00264400U)
#define PHG_SERDES_PU0_NUM                                                                     ((jl_uint32)0x00000001U)
#define PHG_SERDES_PU0_ENTRY_SIZE                                                                                   (1)
#define PHG_SERDES_PU0_OFFSET_RSVD1                                                                                (16)
#define PHG_SERDES_PU0_OFFSET_RSVD1_WIDTH                                                                          (16)
#define PHG_SERDES_PU0_OFFSET_RSVD0                                                                                 (0)
#define PHG_SERDES_PU0_OFFSET_RSVD0_WIDTH                                                                          (11)
#define PHG_SERDES_PU0_OFFSET_PU_PI                                                                                (11)
#define PHG_SERDES_PU0_OFFSET_PU_PI_WIDTH                                                                           (1)
#define PHG_SERDES_PU0_OFFSET_PU_RX_SQ                                                                             (12)
#define PHG_SERDES_PU0_OFFSET_PU_RX_SQ_WIDTH                                                                        (1)
#define PHG_SERDES_PU0_OFFSET_PU_SRTCAL                                                                            (13)
#define PHG_SERDES_PU0_OFFSET_PU_SRTCAL_WIDTH                                                                       (1)
#define PHG_SERDES_PU0_OFFSET_PU_SRX                                                                               (14)
#define PHG_SERDES_PU0_OFFSET_PU_SRX_WIDTH                                                                          (1)
#define PHG_SERDES_PU0_OFFSET_PU_STX                                                                               (15)
#define PHG_SERDES_PU0_OFFSET_PU_STX_WIDTH                                                                          (1)
typedef union PHG_SERDES_PU0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd0:PHG_SERDES_PU0_OFFSET_RSVD0_WIDTH;                                                                //[10: 0]
        jl_uint32 pu_pi:PHG_SERDES_PU0_OFFSET_PU_PI_WIDTH;                                                                //[11:11]
        jl_uint32 pu_rx_sq:PHG_SERDES_PU0_OFFSET_PU_RX_SQ_WIDTH;                                                          //[12:12]
        jl_uint32 pu_srtcal:PHG_SERDES_PU0_OFFSET_PU_SRTCAL_WIDTH;                                                        //[13:13]
        jl_uint32 pu_srx:PHG_SERDES_PU0_OFFSET_PU_SRX_WIDTH;                                                              //[14:14]
        jl_uint32 pu_stx:PHG_SERDES_PU0_OFFSET_PU_STX_WIDTH;                                                              //[15:15]
        jl_uint32 rsvd1:PHG_SERDES_PU0_OFFSET_RSVD1_WIDTH;                                                                //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_PU0_ENTRY_SIZE];
} PHG_SERDES_PU0_t;

#define PHG_SERDES_RX0                                                                         ((jl_uint32)0x00264404U)
#define PHG_SERDES_RX0_NUM                                                                     ((jl_uint32)0x00000001U)
#define PHG_SERDES_RX0_ENTRY_SIZE                                                                                   (1)
#define PHG_SERDES_RX0_OFFSET_RSVD0                                                                                (16)
#define PHG_SERDES_RX0_OFFSET_RSVD0_WIDTH                                                                          (16)
#define PHG_SERDES_RX0_OFFSET_RSVD_WR_RX0                                                                           (0)
#define PHG_SERDES_RX0_OFFSET_RSVD_WR_RX0_WIDTH                                                                     (5)
#define PHG_SERDES_RX0_OFFSET_SQ_NUM_SEL                                                                            (5)
#define PHG_SERDES_RX0_OFFSET_SQ_NUM_SEL_WIDTH                                                                      (2)
#define PHG_SERDES_RX0_OFFSET_SQ_DAC_SEL                                                                            (7)
#define PHG_SERDES_RX0_OFFSET_SQ_DAC_SEL_WIDTH                                                                      (2)
#define PHG_SERDES_RX0_OFFSET_SQ_CK_REVERSE                                                                         (9)
#define PHG_SERDES_RX0_OFFSET_SQ_CK_REVERSE_WIDTH                                                                   (1)
#define PHG_SERDES_RX0_OFFSET_SRX_RTERM                                                                            (10)
#define PHG_SERDES_RX0_OFFSET_SRX_RTERM_WIDTH                                                                       (6)
typedef union PHG_SERDES_RX0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd_wr_rx0:PHG_SERDES_RX0_OFFSET_RSVD_WR_RX0_WIDTH;                                                    //[ 4: 0]
        jl_uint32 sq_num_sel:PHG_SERDES_RX0_OFFSET_SQ_NUM_SEL_WIDTH;                                                      //[ 6: 5]
        jl_uint32 sq_dac_sel:PHG_SERDES_RX0_OFFSET_SQ_DAC_SEL_WIDTH;                                                      //[ 8: 7]
        jl_uint32 sq_ck_reverse:PHG_SERDES_RX0_OFFSET_SQ_CK_REVERSE_WIDTH;                                                //[ 9: 9]
        jl_uint32 srx_rterm:PHG_SERDES_RX0_OFFSET_SRX_RTERM_WIDTH;                                                        //[15:10]
        jl_uint32 rsvd0:PHG_SERDES_RX0_OFFSET_RSVD0_WIDTH;                                                                //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_RX0_ENTRY_SIZE];
} PHG_SERDES_RX0_t;

#define PHG_SERDES_DTL0                                                                        ((jl_uint32)0x00264408U)
#define PHG_SERDES_DTL0_NUM                                                                    ((jl_uint32)0x00000001U)
#define PHG_SERDES_DTL0_ENTRY_SIZE                                                                                  (1)
#define PHG_SERDES_DTL0_OFFSET_RSVD0                                                                               (16)
#define PHG_SERDES_DTL0_OFFSET_RSVD0_WIDTH                                                                         (16)
#define PHG_SERDES_DTL0_OFFSET_RSVD_WR_DTL0                                                                         (0)
#define PHG_SERDES_DTL0_OFFSET_RSVD_WR_DTL0_WIDTH                                                                   (8)
#define PHG_SERDES_DTL0_OFFSET_DTL_SIN_EX                                                                           (8)
#define PHG_SERDES_DTL0_OFFSET_DTL_SIN_EX_WIDTH                                                                     (1)
#define PHG_SERDES_DTL0_OFFSET_DTL_PI_RESETB                                                                        (9)
#define PHG_SERDES_DTL0_OFFSET_DTL_PI_RESETB_WIDTH                                                                  (1)
#define PHG_SERDES_DTL0_OFFSET_DTL_PI_ADJ_STEP                                                                     (10)
#define PHG_SERDES_DTL0_OFFSET_DTL_PI_ADJ_STEP_WIDTH                                                                (2)
#define PHG_SERDES_DTL0_OFFSET_DTL_PI_ADJ_SHFT                                                                     (12)
#define PHG_SERDES_DTL0_OFFSET_DTL_PI_ADJ_SHFT_WIDTH                                                                (3)
#define PHG_SERDES_DTL0_OFFSET_DTL_DIR                                                                             (15)
#define PHG_SERDES_DTL0_OFFSET_DTL_DIR_WIDTH                                                                        (1)
typedef union PHG_SERDES_DTL0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd_wr_dtl0:PHG_SERDES_DTL0_OFFSET_RSVD_WR_DTL0_WIDTH;                                                 //[ 7: 0]
        jl_uint32 dtl_sin_ex:PHG_SERDES_DTL0_OFFSET_DTL_SIN_EX_WIDTH;                                                     //[ 8: 8]
        jl_uint32 dtl_pi_resetb:PHG_SERDES_DTL0_OFFSET_DTL_PI_RESETB_WIDTH;                                               //[ 9: 9]
        jl_uint32 dtl_pi_adj_step:PHG_SERDES_DTL0_OFFSET_DTL_PI_ADJ_STEP_WIDTH;                                           //[11:10]
        jl_uint32 dtl_pi_adj_shft:PHG_SERDES_DTL0_OFFSET_DTL_PI_ADJ_SHFT_WIDTH;                                           //[14:12]
        jl_uint32 dtl_dir:PHG_SERDES_DTL0_OFFSET_DTL_DIR_WIDTH;                                                           //[15:15]
        jl_uint32 rsvd0:PHG_SERDES_DTL0_OFFSET_RSVD0_WIDTH;                                                               //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_DTL0_ENTRY_SIZE];
} PHG_SERDES_DTL0_t;

#define PHG_SERDES_TX0                                                                         ((jl_uint32)0x0026440CU)
#define PHG_SERDES_TX0_NUM                                                                     ((jl_uint32)0x00000001U)
#define PHG_SERDES_TX0_ENTRY_SIZE                                                                                   (1)
#define PHG_SERDES_TX0_OFFSET_RSVD1                                                                                (16)
#define PHG_SERDES_TX0_OFFSET_RSVD1_WIDTH                                                                          (16)
#define PHG_SERDES_TX0_OFFSET_RSVD0                                                                                 (0)
#define PHG_SERDES_TX0_OFFSET_RSVD0_WIDTH                                                                           (4)
#define PHG_SERDES_TX0_OFFSET_STX_DRV_SEL_IMP                                                                       (4)
#define PHG_SERDES_TX0_OFFSET_STX_DRV_SEL_IMP_WIDTH                                                                 (1)
#define PHG_SERDES_TX0_OFFSET_STX_DRV_PSEL                                                                          (5)
#define PHG_SERDES_TX0_OFFSET_STX_DRV_PSEL_WIDTH                                                                    (5)
#define PHG_SERDES_TX0_OFFSET_STX_DRV_NSEL                                                                         (10)
#define PHG_SERDES_TX0_OFFSET_STX_DRV_NSEL_WIDTH                                                                    (5)
#define PHG_SERDES_TX0_OFFSET_STX_DRV_SEL_SLEW                                                                     (15)
#define PHG_SERDES_TX0_OFFSET_STX_DRV_SEL_SLEW_WIDTH                                                                (1)
typedef union PHG_SERDES_TX0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd0:PHG_SERDES_TX0_OFFSET_RSVD0_WIDTH;                                                                //[ 3: 0]
        jl_uint32 stx_drv_sel_imp:PHG_SERDES_TX0_OFFSET_STX_DRV_SEL_IMP_WIDTH;                                            //[ 4: 4]
        jl_uint32 stx_drv_psel:PHG_SERDES_TX0_OFFSET_STX_DRV_PSEL_WIDTH;                                                  //[ 9: 5]
        jl_uint32 stx_drv_nsel:PHG_SERDES_TX0_OFFSET_STX_DRV_NSEL_WIDTH;                                                  //[14:10]
        jl_uint32 stx_drv_sel_slew:PHG_SERDES_TX0_OFFSET_STX_DRV_SEL_SLEW_WIDTH;                                          //[15:15]
        jl_uint32 rsvd1:PHG_SERDES_TX0_OFFSET_RSVD1_WIDTH;                                                                //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_TX0_ENTRY_SIZE];
} PHG_SERDES_TX0_t;

#define PHG_SERDES_TX1                                                                         ((jl_uint32)0x00264410U)
#define PHG_SERDES_TX1_NUM                                                                     ((jl_uint32)0x00000001U)
#define PHG_SERDES_TX1_ENTRY_SIZE                                                                                   (1)
#define PHG_SERDES_TX1_OFFSET_RSVD1                                                                                (16)
#define PHG_SERDES_TX1_OFFSET_RSVD1_WIDTH                                                                          (16)
#define PHG_SERDES_TX1_OFFSET_RSVD0                                                                                 (0)
#define PHG_SERDES_TX1_OFFSET_RSVD0_WIDTH                                                                           (3)
#define PHG_SERDES_TX1_OFFSET_RSVD_WR_TX1                                                                           (3)
#define PHG_SERDES_TX1_OFFSET_RSVD_WR_TX1_WIDTH                                                                     (4)
#define PHG_SERDES_TX1_OFFSET_STX_THRGH_MODE_EN                                                                     (7)
#define PHG_SERDES_TX1_OFFSET_STX_THRGH_MODE_EN_WIDTH                                                               (2)
#define PHG_SERDES_TX1_OFFSET_STX_TESTMODE                                                                          (9)
#define PHG_SERDES_TX1_OFFSET_STX_TESTMODE_WIDTH                                                                    (1)
#define PHG_SERDES_TX1_OFFSET_STX_REG_VSEL                                                                         (10)
#define PHG_SERDES_TX1_OFFSET_STX_REG_VSEL_WIDTH                                                                    (2)
#define PHG_SERDES_TX1_OFFSET_STX_DRV_SEL                                                                          (12)
#define PHG_SERDES_TX1_OFFSET_STX_DRV_SEL_WIDTH                                                                     (3)
#define PHG_SERDES_TX1_OFFSET_STX_DRV_EN                                                                           (15)
#define PHG_SERDES_TX1_OFFSET_STX_DRV_EN_WIDTH                                                                      (1)
typedef union PHG_SERDES_TX1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd0:PHG_SERDES_TX1_OFFSET_RSVD0_WIDTH;                                                                //[ 2: 0]
        jl_uint32 rsvd_wr_tx1:PHG_SERDES_TX1_OFFSET_RSVD_WR_TX1_WIDTH;                                                    //[ 6: 3]
        jl_uint32 stx_thrgh_mode_en:PHG_SERDES_TX1_OFFSET_STX_THRGH_MODE_EN_WIDTH;                                        //[ 8: 7]
        jl_uint32 stx_testmode:PHG_SERDES_TX1_OFFSET_STX_TESTMODE_WIDTH;                                                  //[ 9: 9]
        jl_uint32 stx_reg_vsel:PHG_SERDES_TX1_OFFSET_STX_REG_VSEL_WIDTH;                                                  //[11:10]
        jl_uint32 stx_drv_sel:PHG_SERDES_TX1_OFFSET_STX_DRV_SEL_WIDTH;                                                    //[14:12]
        jl_uint32 stx_drv_en:PHG_SERDES_TX1_OFFSET_STX_DRV_EN_WIDTH;                                                      //[15:15]
        jl_uint32 rsvd1:PHG_SERDES_TX1_OFFSET_RSVD1_WIDTH;                                                                //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_TX1_ENTRY_SIZE];
} PHG_SERDES_TX1_t;

#define PHG_SERDES_CKTREE0                                                                     ((jl_uint32)0x00264414U)
#define PHG_SERDES_CKTREE0_NUM                                                                 ((jl_uint32)0x00000001U)
#define PHG_SERDES_CKTREE0_ENTRY_SIZE                                                                               (1)
#define PHG_SERDES_CKTREE0_OFFSET_RSVD1                                                                            (16)
#define PHG_SERDES_CKTREE0_OFFSET_RSVD1_WIDTH                                                                      (16)
#define PHG_SERDES_CKTREE0_OFFSET_RSVD0                                                                             (0)
#define PHG_SERDES_CKTREE0_OFFSET_RSVD0_WIDTH                                                                       (4)
#define PHG_SERDES_CKTREE0_OFFSET_RSVD_WR_CKTREE0                                                                   (4)
#define PHG_SERDES_CKTREE0_OFFSET_RSVD_WR_CKTREE0_WIDTH                                                             (8)
#define PHG_SERDES_CKTREE0_OFFSET_PI_RSEL                                                                          (12)
#define PHG_SERDES_CKTREE0_OFFSET_PI_RSEL_WIDTH                                                                     (2)
#define PHG_SERDES_CKTREE0_OFFSET_SGMII_SEL                                                                        (14)
#define PHG_SERDES_CKTREE0_OFFSET_SGMII_SEL_WIDTH                                                                   (1)
#define PHG_SERDES_CKTREE0_OFFSET_PI_EN_1P8VR_SL                                                                   (15)
#define PHG_SERDES_CKTREE0_OFFSET_PI_EN_1P8VR_SL_WIDTH                                                              (1)
typedef union PHG_SERDES_CKTREE0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd0:PHG_SERDES_CKTREE0_OFFSET_RSVD0_WIDTH;                                                            //[ 3: 0]
        jl_uint32 rsvd_wr_cktree0:PHG_SERDES_CKTREE0_OFFSET_RSVD_WR_CKTREE0_WIDTH;                                        //[11: 4]
        jl_uint32 pi_rsel:PHG_SERDES_CKTREE0_OFFSET_PI_RSEL_WIDTH;                                                        //[13:12]
        jl_uint32 sgmii_sel:PHG_SERDES_CKTREE0_OFFSET_SGMII_SEL_WIDTH;                                                    //[14:14]
        jl_uint32 pi_en_1p8vr_sl:PHG_SERDES_CKTREE0_OFFSET_PI_EN_1P8VR_SL_WIDTH;                                          //[15:15]
        jl_uint32 rsvd1:PHG_SERDES_CKTREE0_OFFSET_RSVD1_WIDTH;                                                            //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_CKTREE0_ENTRY_SIZE];
} PHG_SERDES_CKTREE0_t;

#define PHG_SERDES_SERDES_MODE                                                                 ((jl_uint32)0x00264800U)
#define PHG_SERDES_SERDES_MODE_NUM                                                             ((jl_uint32)0x00000001U)
#define PHG_SERDES_SERDES_MODE_ENTRY_SIZE                                                                           (1)
#define PHG_SERDES_SERDES_MODE_OFFSET_RSVD0                                                                        (13)
#define PHG_SERDES_SERDES_MODE_OFFSET_RSVD0_WIDTH                                                                  (19)
#define PHG_SERDES_SERDES_MODE_OFFSET_FIBER_SERDES_LPBK_EN                                                          (0)
#define PHG_SERDES_SERDES_MODE_OFFSET_FIBER_SERDES_LPBK_EN_WIDTH                                                    (1)
#define PHG_SERDES_SERDES_MODE_OFFSET_CLK_BASE1000X_EN                                                              (1)
#define PHG_SERDES_SERDES_MODE_OFFSET_CLK_BASE1000X_EN_WIDTH                                                        (1)
#define PHG_SERDES_SERDES_MODE_OFFSET_CLK_BASE100FX_EN                                                              (2)
#define PHG_SERDES_SERDES_MODE_OFFSET_CLK_BASE100FX_EN_WIDTH                                                        (1)
#define PHG_SERDES_SERDES_MODE_OFFSET_CLK_MII_GMII_SEL                                                              (3)
#define PHG_SERDES_SERDES_MODE_OFFSET_CLK_MII_GMII_SEL_WIDTH                                                        (1)
#define PHG_SERDES_SERDES_MODE_OFFSET_GMII_COL_ISO                                                                  (4)
#define PHG_SERDES_SERDES_MODE_OFFSET_GMII_COL_ISO_WIDTH                                                            (1)
#define PHG_SERDES_SERDES_MODE_OFFSET_GMII_MII_EN                                                                   (5)
#define PHG_SERDES_SERDES_MODE_OFFSET_GMII_MII_EN_WIDTH                                                             (1)
#define PHG_SERDES_SERDES_MODE_OFFSET_RSTN_SW_BASEX                                                                 (6)
#define PHG_SERDES_SERDES_MODE_OFFSET_RSTN_SW_BASEX_WIDTH                                                           (1)
#define PHG_SERDES_SERDES_MODE_OFFSET_SDS_MODE                                                                      (7)
#define PHG_SERDES_SERDES_MODE_OFFSET_SDS_MODE_WIDTH                                                                (3)
#define PHG_SERDES_SERDES_MODE_OFFSET_GMII_CRS_ISO                                                                 (10)
#define PHG_SERDES_SERDES_MODE_OFFSET_GMII_CRS_ISO_WIDTH                                                            (1)
#define PHG_SERDES_SERDES_MODE_OFFSET_GMII_RXER_ISO                                                                (11)
#define PHG_SERDES_SERDES_MODE_OFFSET_GMII_RXER_ISO_WIDTH                                                           (1)
#define PHG_SERDES_SERDES_MODE_OFFSET_GMII_TXER_ISO                                                                (12)
#define PHG_SERDES_SERDES_MODE_OFFSET_GMII_TXER_ISO_WIDTH                                                           (1)
typedef union PHG_SERDES_SERDES_MODE_u {
    struct __attribute__ ((packed)) {
        jl_uint32 fiber_serdes_lpbk_en:PHG_SERDES_SERDES_MODE_OFFSET_FIBER_SERDES_LPBK_EN_WIDTH;                          //[ 0: 0]
        jl_uint32 clk_base1000x_en:PHG_SERDES_SERDES_MODE_OFFSET_CLK_BASE1000X_EN_WIDTH;                                  //[ 1: 1]
        jl_uint32 clk_base100fx_en:PHG_SERDES_SERDES_MODE_OFFSET_CLK_BASE100FX_EN_WIDTH;                                  //[ 2: 2]
        jl_uint32 clk_mii_gmii_sel:PHG_SERDES_SERDES_MODE_OFFSET_CLK_MII_GMII_SEL_WIDTH;                                  //[ 3: 3]
        jl_uint32 gmii_col_iso:PHG_SERDES_SERDES_MODE_OFFSET_GMII_COL_ISO_WIDTH;                                          //[ 4: 4]
        jl_uint32 gmii_mii_en:PHG_SERDES_SERDES_MODE_OFFSET_GMII_MII_EN_WIDTH;                                            //[ 5: 5]
        jl_uint32 rstn_sw_basex:PHG_SERDES_SERDES_MODE_OFFSET_RSTN_SW_BASEX_WIDTH;                                        //[ 6: 6]
        jl_uint32 sds_mode:PHG_SERDES_SERDES_MODE_OFFSET_SDS_MODE_WIDTH;                                                  //[ 9: 7]
        jl_uint32 gmii_crs_iso:PHG_SERDES_SERDES_MODE_OFFSET_GMII_CRS_ISO_WIDTH;                                          //[10:10]
        jl_uint32 gmii_rxer_iso:PHG_SERDES_SERDES_MODE_OFFSET_GMII_RXER_ISO_WIDTH;                                        //[11:11]
        jl_uint32 gmii_txer_iso:PHG_SERDES_SERDES_MODE_OFFSET_GMII_TXER_ISO_WIDTH;                                        //[12:12]
        jl_uint32 rsvd0:PHG_SERDES_SERDES_MODE_OFFSET_RSVD0_WIDTH;                                                        //[31:13]
    } BF;
    jl_uint32 val[PHG_SERDES_SERDES_MODE_ENTRY_SIZE];
} PHG_SERDES_SERDES_MODE_t;

#define PHG_SERDES_DEBUG_BUS                                                                   ((jl_uint32)0x00264804U)
#define PHG_SERDES_DEBUG_BUS_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_SERDES_DEBUG_BUS_ENTRY_SIZE                                                                             (1)
#define PHG_SERDES_DEBUG_BUS_OFFSET_RSVD0                                                                          (16)
#define PHG_SERDES_DEBUG_BUS_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_SERDES_DEBUG_BUS_OFFSET_DBG_SEL                                                                         (0)
#define PHG_SERDES_DEBUG_BUS_OFFSET_DBG_SEL_WIDTH                                                                  (16)
typedef union PHG_SERDES_DEBUG_BUS_u {
    struct __attribute__ ((packed)) {
        jl_uint32 dbg_sel:PHG_SERDES_DEBUG_BUS_OFFSET_DBG_SEL_WIDTH;                                                      //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_DEBUG_BUS_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_DEBUG_BUS_ENTRY_SIZE];
} PHG_SERDES_DEBUG_BUS_t;

#define PHG_SERDES_ALIGN_CONTROL_0                                                             ((jl_uint32)0x00264808U)
#define PHG_SERDES_ALIGN_CONTROL_0_NUM                                                         ((jl_uint32)0x00000001U)
#define PHG_SERDES_ALIGN_CONTROL_0_ENTRY_SIZE                                                                       (1)
#define PHG_SERDES_ALIGN_CONTROL_0_OFFSET_RSVD0                                                                    (12)
#define PHG_SERDES_ALIGN_CONTROL_0_OFFSET_RSVD0_WIDTH                                                              (20)
#define PHG_SERDES_ALIGN_CONTROL_0_OFFSET_SG_DBG_ALIGN_EN                                                           (0)
#define PHG_SERDES_ALIGN_CONTROL_0_OFFSET_SG_DBG_ALIGN_EN_WIDTH                                                     (1)
#define PHG_SERDES_ALIGN_CONTROL_0_OFFSET_SHIFT_DIR                                                                 (1)
#define PHG_SERDES_ALIGN_CONTROL_0_OFFSET_SHIFT_DIR_WIDTH                                                           (1)
#define PHG_SERDES_ALIGN_CONTROL_0_OFFSET_FORCE_ALIGN                                                               (2)
#define PHG_SERDES_ALIGN_CONTROL_0_OFFSET_FORCE_ALIGN_WIDTH                                                         (1)
#define PHG_SERDES_ALIGN_CONTROL_0_OFFSET_FORCE_MATCH                                                               (3)
#define PHG_SERDES_ALIGN_CONTROL_0_OFFSET_FORCE_MATCH_WIDTH                                                         (1)
#define PHG_SERDES_ALIGN_CONTROL_0_OFFSET_SG_ALIGN_CHK_EN                                                           (4)
#define PHG_SERDES_ALIGN_CONTROL_0_OFFSET_SG_ALIGN_CHK_EN_WIDTH                                                     (1)
#define PHG_SERDES_ALIGN_CONTROL_0_OFFSET_SG_ALIGN_CHK_NUMBER                                                       (5)
#define PHG_SERDES_ALIGN_CONTROL_0_OFFSET_SG_ALIGN_CHK_NUMBER_WIDTH                                                 (4)
#define PHG_SERDES_ALIGN_CONTROL_0_OFFSET_POUT_DIR                                                                  (9)
#define PHG_SERDES_ALIGN_CONTROL_0_OFFSET_POUT_DIR_WIDTH                                                            (1)
#define PHG_SERDES_ALIGN_CONTROL_0_OFFSET_SIN_INV                                                                  (10)
#define PHG_SERDES_ALIGN_CONTROL_0_OFFSET_SIN_INV_WIDTH                                                             (1)
#define PHG_SERDES_ALIGN_CONTROL_0_OFFSET_SG_COMMA_LOST                                                            (11)
#define PHG_SERDES_ALIGN_CONTROL_0_OFFSET_SG_COMMA_LOST_WIDTH                                                       (1)
typedef union PHG_SERDES_ALIGN_CONTROL_0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sg_dbg_align_en:PHG_SERDES_ALIGN_CONTROL_0_OFFSET_SG_DBG_ALIGN_EN_WIDTH;                                //[ 0: 0]
        jl_uint32 shift_dir:PHG_SERDES_ALIGN_CONTROL_0_OFFSET_SHIFT_DIR_WIDTH;                                            //[ 1: 1]
        jl_uint32 force_align:PHG_SERDES_ALIGN_CONTROL_0_OFFSET_FORCE_ALIGN_WIDTH;                                        //[ 2: 2]
        jl_uint32 force_match:PHG_SERDES_ALIGN_CONTROL_0_OFFSET_FORCE_MATCH_WIDTH;                                        //[ 3: 3]
        jl_uint32 sg_align_chk_en:PHG_SERDES_ALIGN_CONTROL_0_OFFSET_SG_ALIGN_CHK_EN_WIDTH;                                //[ 4: 4]
        jl_uint32 sg_align_chk_number:PHG_SERDES_ALIGN_CONTROL_0_OFFSET_SG_ALIGN_CHK_NUMBER_WIDTH;                        //[ 8: 5]
        jl_uint32 pout_dir:PHG_SERDES_ALIGN_CONTROL_0_OFFSET_POUT_DIR_WIDTH;                                              //[ 9: 9]
        jl_uint32 sin_inv:PHG_SERDES_ALIGN_CONTROL_0_OFFSET_SIN_INV_WIDTH;                                                //[10:10]
        jl_uint32 sg_comma_lost:PHG_SERDES_ALIGN_CONTROL_0_OFFSET_SG_COMMA_LOST_WIDTH;                                    //[11:11]
        jl_uint32 rsvd0:PHG_SERDES_ALIGN_CONTROL_0_OFFSET_RSVD0_WIDTH;                                                    //[31:12]
    } BF;
    jl_uint32 val[PHG_SERDES_ALIGN_CONTROL_0_ENTRY_SIZE];
} PHG_SERDES_ALIGN_CONTROL_0_t;

#define PHG_SERDES_ALIGN_CONTROL_1                                                             ((jl_uint32)0x0026480CU)
#define PHG_SERDES_ALIGN_CONTROL_1_NUM                                                         ((jl_uint32)0x00000001U)
#define PHG_SERDES_ALIGN_CONTROL_1_ENTRY_SIZE                                                                       (1)
#define PHG_SERDES_ALIGN_CONTROL_1_OFFSET_RSVD0                                                                    (16)
#define PHG_SERDES_ALIGN_CONTROL_1_OFFSET_RSVD0_WIDTH                                                              (16)
#define PHG_SERDES_ALIGN_CONTROL_1_OFFSET_SG_ALIGN_CHK_PERIOD                                                       (0)
#define PHG_SERDES_ALIGN_CONTROL_1_OFFSET_SG_ALIGN_CHK_PERIOD_WIDTH                                                (16)
typedef union PHG_SERDES_ALIGN_CONTROL_1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sg_align_chk_period:PHG_SERDES_ALIGN_CONTROL_1_OFFSET_SG_ALIGN_CHK_PERIOD_WIDTH;                        //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_ALIGN_CONTROL_1_OFFSET_RSVD0_WIDTH;                                                    //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_ALIGN_CONTROL_1_ENTRY_SIZE];
} PHG_SERDES_ALIGN_CONTROL_1_t;

#define PHG_SERDES_ALIGN_CONTROL_2                                                             ((jl_uint32)0x00264810U)
#define PHG_SERDES_ALIGN_CONTROL_2_NUM                                                         ((jl_uint32)0x00000001U)
#define PHG_SERDES_ALIGN_CONTROL_2_ENTRY_SIZE                                                                       (1)
#define PHG_SERDES_ALIGN_CONTROL_2_OFFSET_RSVD0                                                                    (16)
#define PHG_SERDES_ALIGN_CONTROL_2_OFFSET_RSVD0_WIDTH                                                              (16)
#define PHG_SERDES_ALIGN_CONTROL_2_OFFSET_VLD_CODE                                                                  (0)
#define PHG_SERDES_ALIGN_CONTROL_2_OFFSET_VLD_CODE_WIDTH                                                            (8)
#define PHG_SERDES_ALIGN_CONTROL_2_OFFSET_CFG_APB_TIMEOUT                                                           (8)
#define PHG_SERDES_ALIGN_CONTROL_2_OFFSET_CFG_APB_TIMEOUT_WIDTH                                                     (8)
typedef union PHG_SERDES_ALIGN_CONTROL_2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 vld_code:PHG_SERDES_ALIGN_CONTROL_2_OFFSET_VLD_CODE_WIDTH;                                              //[ 7: 0]
        jl_uint32 cfg_apb_timeout:PHG_SERDES_ALIGN_CONTROL_2_OFFSET_CFG_APB_TIMEOUT_WIDTH;                                //[15: 8]
        jl_uint32 rsvd0:PHG_SERDES_ALIGN_CONTROL_2_OFFSET_RSVD0_WIDTH;                                                    //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_ALIGN_CONTROL_2_ENTRY_SIZE];
} PHG_SERDES_ALIGN_CONTROL_2_t;

#define PHG_SERDES_TEST_CONTROL_0                                                              ((jl_uint32)0x00264814U)
#define PHG_SERDES_TEST_CONTROL_0_NUM                                                          ((jl_uint32)0x00000001U)
#define PHG_SERDES_TEST_CONTROL_0_ENTRY_SIZE                                                                        (1)
#define PHG_SERDES_TEST_CONTROL_0_OFFSET_RSVD0                                                                     (16)
#define PHG_SERDES_TEST_CONTROL_0_OFFSET_RSVD0_WIDTH                                                               (16)
#define PHG_SERDES_TEST_CONTROL_0_OFFSET_ERR_CNT                                                                    (0)
#define PHG_SERDES_TEST_CONTROL_0_OFFSET_ERR_CNT_WIDTH                                                             (16)
typedef union PHG_SERDES_TEST_CONTROL_0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 err_cnt:PHG_SERDES_TEST_CONTROL_0_OFFSET_ERR_CNT_WIDTH;                                                 //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_TEST_CONTROL_0_OFFSET_RSVD0_WIDTH;                                                     //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_TEST_CONTROL_0_ENTRY_SIZE];
} PHG_SERDES_TEST_CONTROL_0_t;

#define PHG_SERDES_TEST_CONTROL_1                                                              ((jl_uint32)0x00264818U)
#define PHG_SERDES_TEST_CONTROL_1_NUM                                                          ((jl_uint32)0x00000001U)
#define PHG_SERDES_TEST_CONTROL_1_ENTRY_SIZE                                                                        (1)
#define PHG_SERDES_TEST_CONTROL_1_OFFSET_RSVD0                                                                     (10)
#define PHG_SERDES_TEST_CONTROL_1_OFFSET_RSVD0_WIDTH                                                               (22)
#define PHG_SERDES_TEST_CONTROL_1_OFFSET_BIST_EN                                                                    (0)
#define PHG_SERDES_TEST_CONTROL_1_OFFSET_BIST_EN_WIDTH                                                              (1)
#define PHG_SERDES_TEST_CONTROL_1_OFFSET_PRBS_TYP                                                                   (1)
#define PHG_SERDES_TEST_CONTROL_1_OFFSET_PRBS_TYP_WIDTH                                                             (2)
#define PHG_SERDES_TEST_CONTROL_1_OFFSET_SD_RX_VLD                                                                  (3)
#define PHG_SERDES_TEST_CONTROL_1_OFFSET_SD_RX_VLD_WIDTH                                                            (1)
#define PHG_SERDES_TEST_CONTROL_1_OFFSET_ERR_INSERT                                                                 (4)
#define PHG_SERDES_TEST_CONTROL_1_OFFSET_ERR_INSERT_WIDTH                                                           (1)
#define PHG_SERDES_TEST_CONTROL_1_OFFSET_ERR_TYP                                                                    (5)
#define PHG_SERDES_TEST_CONTROL_1_OFFSET_ERR_TYP_WIDTH                                                              (1)
#define PHG_SERDES_TEST_CONTROL_1_OFFSET_ERR_CNT_CLR                                                                (6)
#define PHG_SERDES_TEST_CONTROL_1_OFFSET_ERR_CNT_CLR_WIDTH                                                          (1)
#define PHG_SERDES_TEST_CONTROL_1_OFFSET_BIST_TYP                                                                   (7)
#define PHG_SERDES_TEST_CONTROL_1_OFFSET_BIST_TYP_WIDTH                                                             (2)
#define PHG_SERDES_TEST_CONTROL_1_OFFSET_SD_PMA_LPBK_EN                                                             (9)
#define PHG_SERDES_TEST_CONTROL_1_OFFSET_SD_PMA_LPBK_EN_WIDTH                                                       (1)
typedef union PHG_SERDES_TEST_CONTROL_1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 bist_en:PHG_SERDES_TEST_CONTROL_1_OFFSET_BIST_EN_WIDTH;                                                 //[ 0: 0]
        jl_uint32 prbs_typ:PHG_SERDES_TEST_CONTROL_1_OFFSET_PRBS_TYP_WIDTH;                                               //[ 2: 1]
        jl_uint32 sd_rx_vld:PHG_SERDES_TEST_CONTROL_1_OFFSET_SD_RX_VLD_WIDTH;                                             //[ 3: 3]
        jl_uint32 err_insert:PHG_SERDES_TEST_CONTROL_1_OFFSET_ERR_INSERT_WIDTH;                                           //[ 4: 4]
        jl_uint32 err_typ:PHG_SERDES_TEST_CONTROL_1_OFFSET_ERR_TYP_WIDTH;                                                 //[ 5: 5]
        jl_uint32 err_cnt_clr:PHG_SERDES_TEST_CONTROL_1_OFFSET_ERR_CNT_CLR_WIDTH;                                         //[ 6: 6]
        jl_uint32 bist_typ:PHG_SERDES_TEST_CONTROL_1_OFFSET_BIST_TYP_WIDTH;                                               //[ 8: 7]
        jl_uint32 sd_pma_lpbk_en:PHG_SERDES_TEST_CONTROL_1_OFFSET_SD_PMA_LPBK_EN_WIDTH;                                   //[ 9: 9]
        jl_uint32 rsvd0:PHG_SERDES_TEST_CONTROL_1_OFFSET_RSVD0_WIDTH;                                                     //[31:10]
    } BF;
    jl_uint32 val[PHG_SERDES_TEST_CONTROL_1_ENTRY_SIZE];
} PHG_SERDES_TEST_CONTROL_1_t;

#define PHG_SERDES_FIBER_CONTROL                                                               ((jl_uint32)0x0026481CU)
#define PHG_SERDES_FIBER_CONTROL_NUM                                                           ((jl_uint32)0x00000001U)
#define PHG_SERDES_FIBER_CONTROL_ENTRY_SIZE                                                                         (1)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_RSVD1                                                                      (16)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_RSVD1_WIDTH                                                                (16)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_RSVD0                                                                       (0)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_RSVD0_WIDTH                                                                 (1)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_EXTENDED_CAPABILITY                                               (1)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_EXTENDED_CAPABILITY_WIDTH                                         (1)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_LINK_STATUS                                                       (2)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_LINK_STATUS_WIDTH                                                 (1)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_AN_ABILITY                                                        (3)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_AN_ABILITY_WIDTH                                                  (1)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_REM_FAULT                                                         (4)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_REM_FAULT_WIDTH                                                   (1)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_AN_COMPLETE                                                       (5)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_AN_COMPLETE_WIDTH                                                 (1)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_COLLISION_TEST_STATUS                                             (6)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_COLLISION_TEST_STATUS_WIDTH                                       (1)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_DUPLEX_MODE                                                       (7)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_DUPLEX_MODE_WIDTH                                                 (1)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_RESTART_AN                                                        (8)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_RESTART_AN_WIDTH                                                  (1)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_ISOLATE_EN                                                        (9)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_ISOLATE_EN_WIDTH                                                  (1)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_POWER_DOWN                                                       (10)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_POWER_DOWN_WIDTH                                                  (1)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_AN_EN                                                            (11)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_AN_EN_WIDTH                                                       (1)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_SPEED_SEL                                                        (12)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_SPEED_SEL_WIDTH                                                   (2)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_LPBK_EN                                                          (14)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_LPBK_EN_WIDTH                                                     (1)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_SOFTWARE_RSTN                                                    (15)
#define PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_SOFTWARE_RSTN_WIDTH                                               (1)
typedef union PHG_SERDES_FIBER_CONTROL_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd0:PHG_SERDES_FIBER_CONTROL_OFFSET_RSVD0_WIDTH;                                                      //[ 0: 0]
        jl_uint32 base1000x_extended_capability:PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_EXTENDED_CAPABILITY_WIDTH;      //[ 1: 1]
        jl_uint32 base1000x_link_status:PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_LINK_STATUS_WIDTH;                      //[ 2: 2]
        jl_uint32 base1000x_an_ability:PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_AN_ABILITY_WIDTH;                        //[ 3: 3]
        jl_uint32 base1000x_rem_fault:PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_REM_FAULT_WIDTH;                          //[ 4: 4]
        jl_uint32 base1000x_an_complete:PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_AN_COMPLETE_WIDTH;                      //[ 5: 5]
        jl_uint32 base1000x_collision_test_status:PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_COLLISION_TEST_STATUS_WIDTH;  //[ 6: 6]
        jl_uint32 base1000x_duplex_mode:PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_DUPLEX_MODE_WIDTH;                      //[ 7: 7]
        jl_uint32 base1000x_restart_an:PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_RESTART_AN_WIDTH;                        //[ 8: 8]
        jl_uint32 base1000x_isolate_en:PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_ISOLATE_EN_WIDTH;                        //[ 9: 9]
        jl_uint32 base1000x_power_down:PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_POWER_DOWN_WIDTH;                        //[10:10]
        jl_uint32 base1000x_an_en:PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_AN_EN_WIDTH;                                  //[11:11]
        jl_uint32 base1000x_speed_sel:PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_SPEED_SEL_WIDTH;                          //[13:12]
        jl_uint32 base1000x_lpbk_en:PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_LPBK_EN_WIDTH;                              //[14:14]
        jl_uint32 base1000x_software_rstn:PHG_SERDES_FIBER_CONTROL_OFFSET_BASE1000X_SOFTWARE_RSTN_WIDTH;                  //[15:15]
        jl_uint32 rsvd1:PHG_SERDES_FIBER_CONTROL_OFFSET_RSVD1_WIDTH;                                                      //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_FIBER_CONTROL_ENTRY_SIZE];
} PHG_SERDES_FIBER_CONTROL_t;

#define PHG_SERDES_FIBER_AN_ADVERTISEMENT                                                      ((jl_uint32)0x00264820U)
#define PHG_SERDES_FIBER_AN_ADVERTISEMENT_NUM                                                  ((jl_uint32)0x00000001U)
#define PHG_SERDES_FIBER_AN_ADVERTISEMENT_ENTRY_SIZE                                                                (1)
#define PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_RSVD3                                                             (16)
#define PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_RSVD3_WIDTH                                                       (16)
#define PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_RSVD2                                                              (0)
#define PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_RSVD2_WIDTH                                                        (5)
#define PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_BASE1000X_AN_1000BASE_FULL_DUPLEX                                  (5)
#define PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_BASE1000X_AN_1000BASE_FULL_DUPLEX_WIDTH                            (1)
#define PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_BASE1000X_AN_1000BASE_HALF_DUPLEX                                  (6)
#define PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_BASE1000X_AN_1000BASE_HALF_DUPLEX_WIDTH                            (1)
#define PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_BASE1000X_AN_PAUSE                                                 (7)
#define PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_BASE1000X_AN_PAUSE_WIDTH                                           (2)
#define PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_RSVD1                                                              (9)
#define PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_RSVD1_WIDTH                                                        (3)
#define PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_BASE1000X_AN_REM_FAULT                                            (12)
#define PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_BASE1000X_AN_REM_FAULT_WIDTH                                       (2)
#define PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_RSVD0                                                             (14)
#define PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_RSVD0_WIDTH                                                        (1)
#define PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_BASE1000X_AN_NEXT_PAGE                                            (15)
#define PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_BASE1000X_AN_NEXT_PAGE_WIDTH                                       (1)
typedef union PHG_SERDES_FIBER_AN_ADVERTISEMENT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 rsvd2:PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_RSVD2_WIDTH;                                             //[ 4: 0]
        jl_uint32 base1000x_an_1000base_full_duplex:PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_BASE1000X_AN_1000BASE_FULL_DUPLEX_WIDTH;  //[ 5: 5]
        jl_uint32 base1000x_an_1000base_half_duplex:PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_BASE1000X_AN_1000BASE_HALF_DUPLEX_WIDTH;  //[ 6: 6]
        jl_uint32 base1000x_an_pause:PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_BASE1000X_AN_PAUSE_WIDTH;                   //[ 8: 7]
        jl_uint32 rsvd1:PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_RSVD1_WIDTH;                                             //[11: 9]
        jl_uint32 base1000x_an_rem_fault:PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_BASE1000X_AN_REM_FAULT_WIDTH;           //[13:12]
        jl_uint32 rsvd0:PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_RSVD0_WIDTH;                                             //[14:14]
        jl_uint32 base1000x_an_next_page:PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_BASE1000X_AN_NEXT_PAGE_WIDTH;           //[15:15]
        jl_uint32 rsvd3:PHG_SERDES_FIBER_AN_ADVERTISEMENT_OFFSET_RSVD3_WIDTH;                                             //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_FIBER_AN_ADVERTISEMENT_ENTRY_SIZE];
} PHG_SERDES_FIBER_AN_ADVERTISEMENT_t;

#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY                                               ((jl_uint32)0x00264824U)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_NUM                                           ((jl_uint32)0x00000001U)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_ENTRY_SIZE                                                         (1)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_RSVD2                                                      (16)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_RSVD2_WIDTH                                                (16)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_AN_ABLE                                        (0)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_AN_ABLE_WIDTH                                  (1)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_AN_PAGE_RCVD                                      (1)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_AN_PAGE_RCVD_WIDTH                                (1)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LOC_NEXTPAGE_ABLE                                 (2)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LOC_NEXTPAGE_ABLE_WIDTH                           (1)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_NEXTPAGE_ABLE                                  (3)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_NEXTPAGE_ABLE_WIDTH                            (1)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_RSVD1                                                       (4)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_RSVD1_WIDTH                                                 (1)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_1000BASE_FULL_DUPLEX                           (5)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_1000BASE_FULL_DUPLEX_WIDTH                          (1)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_1000BASE_HALF_DUPLEX                           (6)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_1000BASE_HALF_DUPLEX_WIDTH                          (1)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_PAUSE                                          (7)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_PAUSE_WIDTH                                    (2)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_RSVD0                                                       (9)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_RSVD0_WIDTH                                                 (3)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_REM_FAULT                                     (12)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_REM_FAULT_WIDTH                                (2)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_ACK                                           (14)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_ACK_WIDTH                                      (1)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_NEXT_PAGE                                     (15)
#define PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_NEXT_PAGE_WIDTH                                (1)
typedef union PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_u {
    struct __attribute__ ((packed)) {
        jl_uint32 base1000x_lp_an_able:PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_AN_ABLE_WIDTH;        //[ 0: 0]
        jl_uint32 base1000x_an_page_rcvd:PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_AN_PAGE_RCVD_WIDTH;    //[ 1: 1]
        jl_uint32 base1000x_loc_nextpage_able:PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LOC_NEXTPAGE_ABLE_WIDTH;  //[ 2: 2]
        jl_uint32 base1000x_lp_nextpage_able:PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_NEXTPAGE_ABLE_WIDTH;  //[ 3: 3]
        jl_uint32 rsvd1:PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_RSVD1_WIDTH;                                      //[ 4: 4]
        jl_uint32 base1000x_lp_1000base_full_duplex:PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_1000BASE_FULL_DUPLEX_WIDTH;  //[ 5: 5]
        jl_uint32 base1000x_lp_1000base_half_duplex:PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_1000BASE_HALF_DUPLEX_WIDTH;  //[ 6: 6]
        jl_uint32 base1000x_lp_pause:PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_PAUSE_WIDTH;            //[ 8: 7]
        jl_uint32 rsvd0:PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_RSVD0_WIDTH;                                      //[11: 9]
        jl_uint32 base1000x_lp_rem_fault:PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_REM_FAULT_WIDTH;    //[13:12]
        jl_uint32 base1000x_lp_ack:PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_ACK_WIDTH;                //[14:14]
        jl_uint32 base1000x_lp_next_page:PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_BASE1000X_LP_NEXT_PAGE_WIDTH;    //[15:15]
        jl_uint32 rsvd2:PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_OFFSET_RSVD2_WIDTH;                                      //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_ENTRY_SIZE];
} PHG_SERDES_FIBER_AN_LINK_PARTNER_ABILITY_t;

#define PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT                                                    ((jl_uint32)0x00264828U)
#define PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_NUM                                                ((jl_uint32)0x00000001U)
#define PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_ENTRY_SIZE                                                              (1)
#define PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_RSVD1                                                           (16)
#define PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_RSVD1_WIDTH                                                     (16)
#define PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_BASE1000X_TX_MESSAGE_FIELD                                       (0)
#define PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_BASE1000X_TX_MESSAGE_FIELD_WIDTH                                (11)
#define PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_BASE1000X_TX_TOGGLE                                             (11)
#define PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_BASE1000X_TX_TOGGLE_WIDTH                                        (1)
#define PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_BASE1000X_TX_ACK2                                               (12)
#define PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_BASE1000X_TX_ACK2_WIDTH                                          (1)
#define PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_BASE1000X_TX_MESSAGE_PAGE_MODE                                  (13)
#define PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_BASE1000X_TX_MESSAGE_PAGE_MODE_WIDTH                             (1)
#define PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_RSVD0                                                           (14)
#define PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_RSVD0_WIDTH                                                      (1)
#define PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_BASE1000X_TX_NEXT_PAGE                                          (15)
#define PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_BASE1000X_TX_NEXT_PAGE_WIDTH                                     (1)
typedef union PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_u {
    struct __attribute__ ((packed)) {
        jl_uint32 base1000x_tx_message_field:PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_BASE1000X_TX_MESSAGE_FIELD_WIDTH;  //[10: 0]
        jl_uint32 base1000x_tx_toggle:PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_BASE1000X_TX_TOGGLE_WIDTH;               //[11:11]
        jl_uint32 base1000x_tx_ack2:PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_BASE1000X_TX_ACK2_WIDTH;                   //[12:12]
        jl_uint32 base1000x_tx_message_page_mode:PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_BASE1000X_TX_MESSAGE_PAGE_MODE_WIDTH;  //[13:13]
        jl_uint32 rsvd0:PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_RSVD0_WIDTH;                                           //[14:14]
        jl_uint32 base1000x_tx_next_page:PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_BASE1000X_TX_NEXT_PAGE_WIDTH;         //[15:15]
        jl_uint32 rsvd1:PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_OFFSET_RSVD1_WIDTH;                                           //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_ENTRY_SIZE];
} PHG_SERDES_FIBER_NEXT_PAGE_TRANSMIT_t;

#define PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX                                             ((jl_uint32)0x0026482CU)
#define PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_NUM                                         ((jl_uint32)0x00000001U)
#define PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_ENTRY_SIZE                                                       (1)
#define PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_RSVD1                                                    (16)
#define PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_RSVD1_WIDTH                                              (16)
#define PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_BASE1000X_RX_MESSAGE_FIELD                                (0)
#define PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_BASE1000X_RX_MESSAGE_FIELD_WIDTH                         (11)
#define PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_BASE1000X_RX_TOGGLE                                      (11)
#define PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_BASE1000X_RX_TOGGLE_WIDTH                                 (1)
#define PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_BASE1000X_RX_ACK2                                        (12)
#define PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_BASE1000X_RX_ACK2_WIDTH                                   (1)
#define PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_BASE1000X_RX_MESSAGE_PAGE_MODE                           (13)
#define PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_BASE1000X_RX_MESSAGE_PAGE_MODE_WIDTH                          (1)
#define PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_RSVD0                                                    (14)
#define PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_RSVD0_WIDTH                                               (1)
#define PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_BASE1000X_RX_NEXT_PAGE                                   (15)
#define PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_BASE1000X_RX_NEXT_PAGE_WIDTH                              (1)
typedef union PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_u {
    struct __attribute__ ((packed)) {
        jl_uint32 base1000x_rx_message_field:PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_BASE1000X_RX_MESSAGE_FIELD_WIDTH;  //[10: 0]
        jl_uint32 base1000x_rx_toggle:PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_BASE1000X_RX_TOGGLE_WIDTH;        //[11:11]
        jl_uint32 base1000x_rx_ack2:PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_BASE1000X_RX_ACK2_WIDTH;            //[12:12]
        jl_uint32 base1000x_rx_message_page_mode:PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_BASE1000X_RX_MESSAGE_PAGE_MODE_WIDTH;  //[13:13]
        jl_uint32 rsvd0:PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_RSVD0_WIDTH;                                    //[14:14]
        jl_uint32 base1000x_rx_next_page:PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_BASE1000X_RX_NEXT_PAGE_WIDTH;  //[15:15]
        jl_uint32 rsvd1:PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_OFFSET_RSVD1_WIDTH;                                    //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_ENTRY_SIZE];
} PHG_SERDES_FIBER_LINK_PARTNER_NEXT_PAGE_RX_t;

#define PHG_SERDES_FIBER_SYNC_STATUS                                                           ((jl_uint32)0x00264830U)
#define PHG_SERDES_FIBER_SYNC_STATUS_NUM                                                       ((jl_uint32)0x00000001U)
#define PHG_SERDES_FIBER_SYNC_STATUS_ENTRY_SIZE                                                                     (1)
#define PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_RSVD0                                                                   (7)
#define PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_RSVD0_WIDTH                                                            (25)
#define PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_BASE1000X_RX_SIGNAL_DETECT                                              (0)
#define PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_BASE1000X_RX_SIGNAL_DETECT_WIDTH                                        (1)
#define PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_BASE1000X_DECODE_INVALID                                                (1)
#define PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_BASE1000X_DECODE_INVALID_WIDTH                                          (1)
#define PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_BASE1000X_SYNC_STATUS                                                   (2)
#define PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_BASE1000X_SYNC_STATUS_WIDTH                                             (1)
#define PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_BASE1000X_LINK_STATUS_FORCE_VAL                                         (3)
#define PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_BASE1000X_LINK_STATUS_FORCE_VAL_WIDTH                                   (1)
#define PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_BASE1000X_LINK_STATUS_SRC                                               (4)
#define PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_BASE1000X_LINK_STATUS_SRC_WIDTH                                         (2)
#define PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_BASE1000X_DECODE_INVALID_CLR                                            (6)
#define PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_BASE1000X_DECODE_INVALID_CLR_WIDTH                                      (1)
typedef union PHG_SERDES_FIBER_SYNC_STATUS_u {
    struct __attribute__ ((packed)) {
        jl_uint32 base1000x_rx_signal_detect:PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_BASE1000X_RX_SIGNAL_DETECT_WIDTH;        //[ 0: 0]
        jl_uint32 base1000x_decode_invalid:PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_BASE1000X_DECODE_INVALID_WIDTH;            //[ 1: 1]
        jl_uint32 base1000x_sync_status:PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_BASE1000X_SYNC_STATUS_WIDTH;                  //[ 2: 2]
        jl_uint32 base1000x_link_status_force_val:PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_BASE1000X_LINK_STATUS_FORCE_VAL_WIDTH;  //[ 3: 3]
        jl_uint32 base1000x_link_status_src:PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_BASE1000X_LINK_STATUS_SRC_WIDTH;          //[ 5: 4]
        jl_uint32 base1000x_decode_invalid_clr:PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_BASE1000X_DECODE_INVALID_CLR_WIDTH;    //[ 6: 6]
        jl_uint32 rsvd0:PHG_SERDES_FIBER_SYNC_STATUS_OFFSET_RSVD0_WIDTH;                                                  //[31: 7]
    } BF;
    jl_uint32 val[PHG_SERDES_FIBER_SYNC_STATUS_ENTRY_SIZE];
} PHG_SERDES_FIBER_SYNC_STATUS_t;

#define PHG_SERDES_BASEX_AN_CONFIGURE_0                                                        ((jl_uint32)0x00264834U)
#define PHG_SERDES_BASEX_AN_CONFIGURE_0_NUM                                                    ((jl_uint32)0x00000001U)
#define PHG_SERDES_BASEX_AN_CONFIGURE_0_ENTRY_SIZE                                                                  (1)
#define PHG_SERDES_BASEX_AN_CONFIGURE_0_OFFSET_RSVD0                                                                (5)
#define PHG_SERDES_BASEX_AN_CONFIGURE_0_OFFSET_RSVD0_WIDTH                                                         (27)
#define PHG_SERDES_BASEX_AN_CONFIGURE_0_OFFSET_BASEX_AN_LINK_TIMER_CNT_DONE_HI                                      (0)
#define PHG_SERDES_BASEX_AN_CONFIGURE_0_OFFSET_BASEX_AN_LINK_TIMER_CNT_DONE_HI_WIDTH                                (5)
typedef union PHG_SERDES_BASEX_AN_CONFIGURE_0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 basex_an_link_timer_cnt_done_hi:PHG_SERDES_BASEX_AN_CONFIGURE_0_OFFSET_BASEX_AN_LINK_TIMER_CNT_DONE_HI_WIDTH;  //[ 4: 0]
        jl_uint32 rsvd0:PHG_SERDES_BASEX_AN_CONFIGURE_0_OFFSET_RSVD0_WIDTH;                                               //[31: 5]
    } BF;
    jl_uint32 val[PHG_SERDES_BASEX_AN_CONFIGURE_0_ENTRY_SIZE];
} PHG_SERDES_BASEX_AN_CONFIGURE_0_t;

#define PHG_SERDES_BASEX_AN_CONFIGURE_1                                                        ((jl_uint32)0x00264838U)
#define PHG_SERDES_BASEX_AN_CONFIGURE_1_NUM                                                    ((jl_uint32)0x00000001U)
#define PHG_SERDES_BASEX_AN_CONFIGURE_1_ENTRY_SIZE                                                                  (1)
#define PHG_SERDES_BASEX_AN_CONFIGURE_1_OFFSET_RSVD0                                                               (16)
#define PHG_SERDES_BASEX_AN_CONFIGURE_1_OFFSET_RSVD0_WIDTH                                                         (16)
#define PHG_SERDES_BASEX_AN_CONFIGURE_1_OFFSET_BASEX_AN_LINK_TIMER_CNT_DONE_LO                                      (0)
#define PHG_SERDES_BASEX_AN_CONFIGURE_1_OFFSET_BASEX_AN_LINK_TIMER_CNT_DONE_LO_WIDTH                               (16)
typedef union PHG_SERDES_BASEX_AN_CONFIGURE_1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 basex_an_link_timer_cnt_done_lo:PHG_SERDES_BASEX_AN_CONFIGURE_1_OFFSET_BASEX_AN_LINK_TIMER_CNT_DONE_LO_WIDTH;  //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_BASEX_AN_CONFIGURE_1_OFFSET_RSVD0_WIDTH;                                               //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_BASEX_AN_CONFIGURE_1_ENTRY_SIZE];
} PHG_SERDES_BASEX_AN_CONFIGURE_1_t;

#define PHG_SERDES_SGMII_CONFIG_0                                                              ((jl_uint32)0x0026483CU)
#define PHG_SERDES_SGMII_CONFIG_0_NUM                                                          ((jl_uint32)0x00000001U)
#define PHG_SERDES_SGMII_CONFIG_0_ENTRY_SIZE                                                                        (1)
#define PHG_SERDES_SGMII_CONFIG_0_OFFSET_RSVD0                                                                     (16)
#define PHG_SERDES_SGMII_CONFIG_0_OFFSET_RSVD0_WIDTH                                                               (16)
#define PHG_SERDES_SGMII_CONFIG_0_OFFSET_SGMII_TX_CONFIG                                                            (0)
#define PHG_SERDES_SGMII_CONFIG_0_OFFSET_SGMII_TX_CONFIG_WIDTH                                                     (16)
typedef union PHG_SERDES_SGMII_CONFIG_0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sgmii_tx_config:PHG_SERDES_SGMII_CONFIG_0_OFFSET_SGMII_TX_CONFIG_WIDTH;                                 //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_SGMII_CONFIG_0_OFFSET_RSVD0_WIDTH;                                                     //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_SGMII_CONFIG_0_ENTRY_SIZE];
} PHG_SERDES_SGMII_CONFIG_0_t;

#define PHG_SERDES_SGMII_CONFIG_1                                                              ((jl_uint32)0x00264840U)
#define PHG_SERDES_SGMII_CONFIG_1_NUM                                                          ((jl_uint32)0x00000001U)
#define PHG_SERDES_SGMII_CONFIG_1_ENTRY_SIZE                                                                        (1)
#define PHG_SERDES_SGMII_CONFIG_1_OFFSET_RSVD0                                                                     (16)
#define PHG_SERDES_SGMII_CONFIG_1_OFFSET_RSVD0_WIDTH                                                               (16)
#define PHG_SERDES_SGMII_CONFIG_1_OFFSET_SGMII_RX_CONFIG                                                            (0)
#define PHG_SERDES_SGMII_CONFIG_1_OFFSET_SGMII_RX_CONFIG_WIDTH                                                     (16)
typedef union PHG_SERDES_SGMII_CONFIG_1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sgmii_rx_config:PHG_SERDES_SGMII_CONFIG_1_OFFSET_SGMII_RX_CONFIG_WIDTH;                                 //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_SGMII_CONFIG_1_OFFSET_RSVD0_WIDTH;                                                     //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_SGMII_CONFIG_1_ENTRY_SIZE];
} PHG_SERDES_SGMII_CONFIG_1_t;

#define PHG_SERDES_BASE100FX_CONFIG_0                                                          ((jl_uint32)0x00264844U)
#define PHG_SERDES_BASE100FX_CONFIG_0_NUM                                                      ((jl_uint32)0x00000001U)
#define PHG_SERDES_BASE100FX_CONFIG_0_ENTRY_SIZE                                                                    (1)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_RSVD0                                                                 (16)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_RSVD0_WIDTH                                                           (16)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_TX_PCS_EEE_EN                                                (0)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_TX_PCS_EEE_EN_WIDTH                                          (1)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_RX_CLK_PHASE                                                 (1)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_RX_CLK_PHASE_WIDTH                                           (3)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_RX_CLK_INV                                                   (4)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_RX_CLK_INV_WIDTH                                             (1)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_TX_CLK_PHASE                                                 (5)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_TX_CLK_PHASE_WIDTH                                           (3)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_TX_CLK_INV                                                   (8)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_TX_CLK_INV_WIDTH                                             (1)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_RX_PMA_FIBER_EN                                              (9)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_RX_PMA_FIBER_EN_WIDTH                                        (1)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_TX_PMA_FIBER_EN                                             (10)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_TX_PMA_FIBER_EN_WIDTH                                        (1)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_SIGNAL_STATUS                                               (11)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_SIGNAL_STATUS_WIDTH                                          (1)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_LINK_STATUS                                                 (12)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_LINK_STATUS_WIDTH                                            (2)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_LINK_CONTROL                                                (14)
#define PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_LINK_CONTROL_WIDTH                                           (2)
typedef union PHG_SERDES_BASE100FX_CONFIG_0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 base100fx_tx_pcs_eee_en:PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_TX_PCS_EEE_EN_WIDTH;             //[ 0: 0]
        jl_uint32 base100fx_rx_clk_phase:PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_RX_CLK_PHASE_WIDTH;               //[ 3: 1]
        jl_uint32 base100fx_rx_clk_inv:PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_RX_CLK_INV_WIDTH;                   //[ 4: 4]
        jl_uint32 base100fx_tx_clk_phase:PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_TX_CLK_PHASE_WIDTH;               //[ 7: 5]
        jl_uint32 base100fx_tx_clk_inv:PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_TX_CLK_INV_WIDTH;                   //[ 8: 8]
        jl_uint32 base100fx_rx_pma_fiber_en:PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_RX_PMA_FIBER_EN_WIDTH;         //[ 9: 9]
        jl_uint32 base100fx_tx_pma_fiber_en:PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_TX_PMA_FIBER_EN_WIDTH;         //[10:10]
        jl_uint32 base100fx_signal_status:PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_SIGNAL_STATUS_WIDTH;             //[11:11]
        jl_uint32 base100fx_link_status:PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_LINK_STATUS_WIDTH;                 //[13:12]
        jl_uint32 base100fx_link_control:PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_BASE100FX_LINK_CONTROL_WIDTH;               //[15:14]
        jl_uint32 rsvd0:PHG_SERDES_BASE100FX_CONFIG_0_OFFSET_RSVD0_WIDTH;                                                 //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_BASE100FX_CONFIG_0_ENTRY_SIZE];
} PHG_SERDES_BASE100FX_CONFIG_0_t;

#define PHG_SERDES_BASE100FX_CONFIG_1                                                          ((jl_uint32)0x00264848U)
#define PHG_SERDES_BASE100FX_CONFIG_1_NUM                                                      ((jl_uint32)0x00000001U)
#define PHG_SERDES_BASE100FX_CONFIG_1_ENTRY_SIZE                                                                    (1)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_RSVD0                                                                 (16)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_RSVD0_WIDTH                                                           (16)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_TX_FEF_SIG_STAT_FORCE_VAL                                    (0)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_TX_FEF_SIG_STAT_FORCE_VAL_WIDTH                              (1)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_TX_FEF_SIG_STAT_FORCE                                        (1)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_TX_FEF_SIG_STAT_FORCE_WIDTH                                  (1)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_TX_FEF_RX_RPI_EN                                             (2)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_TX_FEF_RX_RPI_EN_WIDTH                                       (1)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_TX_FIBER_SCRAMBLER_EN                                        (3)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_TX_FIBER_SCRAMBLER_EN_WIDTH                                  (1)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_LINK_MON_SIG_STAT_SRC                                        (4)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_LINK_MON_SIG_STAT_SRC_WIDTH                                  (1)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_LINK_MON_FORCE_LINK_STAT_OK                                  (5)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_LINK_MON_FORCE_LINK_STAT_OK_WIDTH                            (1)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_LINK_MONITOR_PERIOD_SEL                                      (6)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_LINK_MONITOR_PERIOD_SEL_WIDTH                                (2)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_RX_PCS_IDLE_N_DESCR_LOCK                                     (8)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_RX_PCS_IDLE_N_DESCR_LOCK_WIDTH                               (1)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_CARRIER_SENSE_RX_EN                                          (9)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_CARRIER_SENSE_RX_EN_WIDTH                                    (1)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_CARRIER_SENSE_TX_EN                                         (10)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_CARRIER_SENSE_TX_EN_WIDTH                                    (1)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_RX_FAR_END_FAULT_DETECT_EN                                  (11)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_RX_FAR_END_FAULT_DETECT_EN_WIDTH                             (1)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_TX_FAR_END_FAULT_GEN_EN                                     (12)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_TX_FAR_END_FAULT_GEN_EN_WIDTH                                (1)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_RX_FAR_END_FAULTING_CLR                                     (13)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_RX_FAR_END_FAULTING_CLR_WIDTH                                (1)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_RX_FAR_END_FAULTING                                         (14)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_RX_FAR_END_FAULTING_WIDTH                                    (1)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_RX_PCS_EEE_EN                                               (15)
#define PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_RX_PCS_EEE_EN_WIDTH                                          (1)
typedef union PHG_SERDES_BASE100FX_CONFIG_1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 base100fx_tx_fef_sig_stat_force_val:PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_TX_FEF_SIG_STAT_FORCE_VAL_WIDTH;  //[ 0: 0]
        jl_uint32 base100fx_tx_fef_sig_stat_force:PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_TX_FEF_SIG_STAT_FORCE_WIDTH;  //[ 1: 1]
        jl_uint32 base100fx_tx_fef_rx_rpi_en:PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_TX_FEF_RX_RPI_EN_WIDTH;       //[ 2: 2]
        jl_uint32 base100fx_tx_fiber_scrambler_en:PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_TX_FIBER_SCRAMBLER_EN_WIDTH;  //[ 3: 3]
        jl_uint32 base100fx_link_mon_sig_stat_src:PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_LINK_MON_SIG_STAT_SRC_WIDTH;  //[ 4: 4]
        jl_uint32 base100fx_link_mon_force_link_stat_ok:PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_LINK_MON_FORCE_LINK_STAT_OK_WIDTH;  //[ 5: 5]
        jl_uint32 base100fx_link_monitor_period_sel:PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_LINK_MONITOR_PERIOD_SEL_WIDTH;  //[ 7: 6]
        jl_uint32 base100fx_rx_pcs_idle_n_descr_lock:PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_RX_PCS_IDLE_N_DESCR_LOCK_WIDTH;  //[ 8: 8]
        jl_uint32 base100fx_carrier_sense_rx_en:PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_CARRIER_SENSE_RX_EN_WIDTH;  //[ 9: 9]
        jl_uint32 base100fx_carrier_sense_tx_en:PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_CARRIER_SENSE_TX_EN_WIDTH;  //[10:10]
        jl_uint32 base100fx_rx_far_end_fault_detect_en:PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_RX_FAR_END_FAULT_DETECT_EN_WIDTH;  //[11:11]
        jl_uint32 base100fx_tx_far_end_fault_gen_en:PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_TX_FAR_END_FAULT_GEN_EN_WIDTH;  //[12:12]
        jl_uint32 base100fx_rx_far_end_faulting_clr:PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_RX_FAR_END_FAULTING_CLR_WIDTH;  //[13:13]
        jl_uint32 base100fx_rx_far_end_faulting:PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_RX_FAR_END_FAULTING_WIDTH;  //[14:14]
        jl_uint32 base100fx_rx_pcs_eee_en:PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_BASE100FX_RX_PCS_EEE_EN_WIDTH;             //[15:15]
        jl_uint32 rsvd0:PHG_SERDES_BASE100FX_CONFIG_1_OFFSET_RSVD0_WIDTH;                                                 //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_BASE100FX_CONFIG_1_ENTRY_SIZE];
} PHG_SERDES_BASE100FX_CONFIG_1_t;

#define PHG_SERDES_BASE100FX_CONFIG_2                                                          ((jl_uint32)0x0026484CU)
#define PHG_SERDES_BASE100FX_CONFIG_2_NUM                                                      ((jl_uint32)0x00000001U)
#define PHG_SERDES_BASE100FX_CONFIG_2_ENTRY_SIZE                                                                    (1)
#define PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_RSVD0                                                                 (11)
#define PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_RSVD0_WIDTH                                                           (21)
#define PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_BASE100FX_TX_QUIET                                                     (0)
#define PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_BASE100FX_TX_QUIET_WIDTH                                               (1)
#define PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_BASE100FX_RX_QUIET                                                     (1)
#define PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_BASE100FX_RX_QUIET_WIDTH                                               (1)
#define PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_BASE100FX_RX_LPI                                                       (2)
#define PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_BASE100FX_RX_LPI_WIDTH                                                 (1)
#define PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_BASE100FX_TX_LPI                                                       (3)
#define PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_BASE100FX_TX_LPI_WIDTH                                                 (1)
#define PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_BASE100FX_PMD_LOOPBACK                                                 (4)
#define PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_BASE100FX_PMD_LOOPBACK_WIDTH                                           (1)
#define PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_BASE100FX_LPI_RX_TW_TIMER_CNT                                          (5)
#define PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_BASE100FX_LPI_RX_TW_TIMER_CNT_WIDTH                                    (6)
typedef union PHG_SERDES_BASE100FX_CONFIG_2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 base100fx_tx_quiet:PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_BASE100FX_TX_QUIET_WIDTH;                       //[ 0: 0]
        jl_uint32 base100fx_rx_quiet:PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_BASE100FX_RX_QUIET_WIDTH;                       //[ 1: 1]
        jl_uint32 base100fx_rx_lpi:PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_BASE100FX_RX_LPI_WIDTH;                           //[ 2: 2]
        jl_uint32 base100fx_tx_lpi:PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_BASE100FX_TX_LPI_WIDTH;                           //[ 3: 3]
        jl_uint32 base100fx_pmd_loopback:PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_BASE100FX_PMD_LOOPBACK_WIDTH;               //[ 4: 4]
        jl_uint32 base100fx_lpi_rx_tw_timer_cnt:PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_BASE100FX_LPI_RX_TW_TIMER_CNT_WIDTH;  //[10: 5]
        jl_uint32 rsvd0:PHG_SERDES_BASE100FX_CONFIG_2_OFFSET_RSVD0_WIDTH;                                                 //[31:11]
    } BF;
    jl_uint32 val[PHG_SERDES_BASE100FX_CONFIG_2_ENTRY_SIZE];
} PHG_SERDES_BASE100FX_CONFIG_2_t;

#define PHG_SERDES_BASE100FX_CONFIG_3                                                          ((jl_uint32)0x00264850U)
#define PHG_SERDES_BASE100FX_CONFIG_3_NUM                                                      ((jl_uint32)0x00000001U)
#define PHG_SERDES_BASE100FX_CONFIG_3_ENTRY_SIZE                                                                    (1)
#define PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_RSVD0                                                                  (8)
#define PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_RSVD0_WIDTH                                                           (24)
#define PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCRAMBLER_LOCKED                                           (0)
#define PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCRAMBLER_LOCKED_WIDTH                                     (1)
#define PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_LOCK_TIMEOUT_EN                                        (1)
#define PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_LOCK_TIMEOUT_EN_WIDTH                                  (1)
#define PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_TESTMODE                                               (2)
#define PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_TESTMODE_WIDTH                                         (1)
#define PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_LOAD_CFG                                               (3)
#define PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_LOAD_CFG_WIDTH                                         (1)
#define PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_SDCD_CTRL                                              (4)
#define PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_SDCD_CTRL_WIDTH                                        (1)
#define PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_SDCD_RX_QUIET                                          (5)
#define PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_SDCD_RX_QUIET_WIDTH                                    (1)
#define PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_SDCD_FORCE                                             (6)
#define PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_SDCD_FORCE_WIDTH                                       (1)
#define PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_RSTN                                                   (7)
#define PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_RSTN_WIDTH                                             (1)
typedef union PHG_SERDES_BASE100FX_CONFIG_3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 base100fx_descrambler_locked:PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCRAMBLER_LOCKED_WIDTH;   //[ 0: 0]
        jl_uint32 base100fx_descr_lock_timeout_en:PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_LOCK_TIMEOUT_EN_WIDTH;  //[ 1: 1]
        jl_uint32 base100fx_descr_testmode:PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_TESTMODE_WIDTH;           //[ 2: 2]
        jl_uint32 base100fx_descr_load_cfg:PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_LOAD_CFG_WIDTH;           //[ 3: 3]
        jl_uint32 base100fx_descr_sdcd_ctrl:PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_SDCD_CTRL_WIDTH;         //[ 4: 4]
        jl_uint32 base100fx_descr_sdcd_rx_quiet:PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_SDCD_RX_QUIET_WIDTH;  //[ 5: 5]
        jl_uint32 base100fx_descr_sdcd_force:PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_SDCD_FORCE_WIDTH;       //[ 6: 6]
        jl_uint32 base100fx_descr_rstn:PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_BASE100FX_DESCR_RSTN_WIDTH;                   //[ 7: 7]
        jl_uint32 rsvd0:PHG_SERDES_BASE100FX_CONFIG_3_OFFSET_RSVD0_WIDTH;                                                 //[31: 8]
    } BF;
    jl_uint32 val[PHG_SERDES_BASE100FX_CONFIG_3_ENTRY_SIZE];
} PHG_SERDES_BASE100FX_CONFIG_3_t;

#define PHG_SERDES_BASE100FX_CONFIG_4                                                          ((jl_uint32)0x00264854U)
#define PHG_SERDES_BASE100FX_CONFIG_4_NUM                                                      ((jl_uint32)0x00000001U)
#define PHG_SERDES_BASE100FX_CONFIG_4_ENTRY_SIZE                                                                    (1)
#define PHG_SERDES_BASE100FX_CONFIG_4_OFFSET_RSVD0                                                                  (4)
#define PHG_SERDES_BASE100FX_CONFIG_4_OFFSET_RSVD0_WIDTH                                                           (28)
#define PHG_SERDES_BASE100FX_CONFIG_4_OFFSET_BASE100FX_DESCR_MAXLOCK_HI                                             (0)
#define PHG_SERDES_BASE100FX_CONFIG_4_OFFSET_BASE100FX_DESCR_MAXLOCK_HI_WIDTH                                       (4)
typedef union PHG_SERDES_BASE100FX_CONFIG_4_u {
    struct __attribute__ ((packed)) {
        jl_uint32 base100fx_descr_maxlock_hi:PHG_SERDES_BASE100FX_CONFIG_4_OFFSET_BASE100FX_DESCR_MAXLOCK_HI_WIDTH;       //[ 3: 0]
        jl_uint32 rsvd0:PHG_SERDES_BASE100FX_CONFIG_4_OFFSET_RSVD0_WIDTH;                                                 //[31: 4]
    } BF;
    jl_uint32 val[PHG_SERDES_BASE100FX_CONFIG_4_ENTRY_SIZE];
} PHG_SERDES_BASE100FX_CONFIG_4_t;

#define PHG_SERDES_BASE100FX_CONFIG_5                                                          ((jl_uint32)0x00264858U)
#define PHG_SERDES_BASE100FX_CONFIG_5_NUM                                                      ((jl_uint32)0x00000001U)
#define PHG_SERDES_BASE100FX_CONFIG_5_ENTRY_SIZE                                                                    (1)
#define PHG_SERDES_BASE100FX_CONFIG_5_OFFSET_RSVD0                                                                 (16)
#define PHG_SERDES_BASE100FX_CONFIG_5_OFFSET_RSVD0_WIDTH                                                           (16)
#define PHG_SERDES_BASE100FX_CONFIG_5_OFFSET_BASE100FX_DESCR_MAXLOCK_LO                                             (0)
#define PHG_SERDES_BASE100FX_CONFIG_5_OFFSET_BASE100FX_DESCR_MAXLOCK_LO_WIDTH                                      (16)
typedef union PHG_SERDES_BASE100FX_CONFIG_5_u {
    struct __attribute__ ((packed)) {
        jl_uint32 base100fx_descr_maxlock_lo:PHG_SERDES_BASE100FX_CONFIG_5_OFFSET_BASE100FX_DESCR_MAXLOCK_LO_WIDTH;       //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_BASE100FX_CONFIG_5_OFFSET_RSVD0_WIDTH;                                                 //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_BASE100FX_CONFIG_5_ENTRY_SIZE];
} PHG_SERDES_BASE100FX_CONFIG_5_t;

#define PHG_SERDES_SDS_STATUS_VECTOR                                                           ((jl_uint32)0x0026485CU)
#define PHG_SERDES_SDS_STATUS_VECTOR_NUM                                                       ((jl_uint32)0x00000001U)
#define PHG_SERDES_SDS_STATUS_VECTOR_ENTRY_SIZE                                                                     (1)
#define PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_RSVD0                                                                   (9)
#define PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_RSVD0_WIDTH                                                            (23)
#define PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_LINK_STATUS                                                             (0)
#define PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_LINK_STATUS_WIDTH                                                       (1)
#define PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_DUPLEX_MODE_REG                                                         (1)
#define PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_DUPLEX_MODE_REG_WIDTH                                                   (1)
#define PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_SPEED_MODE_REG                                                          (2)
#define PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_SPEED_MODE_REG_WIDTH                                                    (3)
#define PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_FC_RESULT_REG                                                           (5)
#define PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_FC_RESULT_REG_WIDTH                                                     (2)
#define PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_RESERVED_REG                                                            (7)
#define PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_RESERVED_REG_WIDTH                                                      (1)
#define PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_SDS_VECTOR_SEL                                                          (8)
#define PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_SDS_VECTOR_SEL_WIDTH                                                    (1)
typedef union PHG_SERDES_SDS_STATUS_VECTOR_u {
    struct __attribute__ ((packed)) {
        jl_uint32 link_status:PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_LINK_STATUS_WIDTH;                                      //[ 0: 0]
        jl_uint32 duplex_mode_reg:PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_DUPLEX_MODE_REG_WIDTH;                              //[ 1: 1]
        jl_uint32 speed_mode_reg:PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_SPEED_MODE_REG_WIDTH;                                //[ 4: 2]
        jl_uint32 fc_result_reg:PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_FC_RESULT_REG_WIDTH;                                  //[ 6: 5]
        jl_uint32 reserved_reg:PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_RESERVED_REG_WIDTH;                                    //[ 7: 7]
        jl_uint32 sds_vector_sel:PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_SDS_VECTOR_SEL_WIDTH;                                //[ 8: 8]
        jl_uint32 rsvd0:PHG_SERDES_SDS_STATUS_VECTOR_OFFSET_RSVD0_WIDTH;                                                  //[31: 9]
    } BF;
    jl_uint32 val[PHG_SERDES_SDS_STATUS_VECTOR_ENTRY_SIZE];
} PHG_SERDES_SDS_STATUS_VECTOR_t;

#define PHG_SERDES_ANALOG_CONFIG                                                               ((jl_uint32)0x00264860U)
#define PHG_SERDES_ANALOG_CONFIG_NUM                                                           ((jl_uint32)0x00000001U)
#define PHG_SERDES_ANALOG_CONFIG_ENTRY_SIZE                                                                         (1)
#define PHG_SERDES_ANALOG_CONFIG_OFFSET_RSVD0                                                                       (1)
#define PHG_SERDES_ANALOG_CONFIG_OFFSET_RSVD0_WIDTH                                                                (31)
#define PHG_SERDES_ANALOG_CONFIG_OFFSET_ANA_SQ_OUT2REG                                                              (0)
#define PHG_SERDES_ANALOG_CONFIG_OFFSET_ANA_SQ_OUT2REG_WIDTH                                                        (1)
typedef union PHG_SERDES_ANALOG_CONFIG_u {
    struct __attribute__ ((packed)) {
        jl_uint32 ana_sq_out2reg:PHG_SERDES_ANALOG_CONFIG_OFFSET_ANA_SQ_OUT2REG_WIDTH;                                    //[ 0: 0]
        jl_uint32 rsvd0:PHG_SERDES_ANALOG_CONFIG_OFFSET_RSVD0_WIDTH;                                                      //[31: 1]
    } BF;
    jl_uint32 val[PHG_SERDES_ANALOG_CONFIG_ENTRY_SIZE];
} PHG_SERDES_ANALOG_CONFIG_t;

#define PHG_SERDES_SDS_RSVD0                                                                   ((jl_uint32)0x00264880U)
#define PHG_SERDES_SDS_RSVD0_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_SERDES_SDS_RSVD0_ENTRY_SIZE                                                                             (1)
#define PHG_SERDES_SDS_RSVD0_OFFSET_RSVD0                                                                          (16)
#define PHG_SERDES_SDS_RSVD0_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_SERDES_SDS_RSVD0_OFFSET_SDS_RSVD0                                                                       (0)
#define PHG_SERDES_SDS_RSVD0_OFFSET_SDS_RSVD0_WIDTH                                                                (16)
typedef union PHG_SERDES_SDS_RSVD0_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sds_rsvd0:PHG_SERDES_SDS_RSVD0_OFFSET_SDS_RSVD0_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_SDS_RSVD0_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_SDS_RSVD0_ENTRY_SIZE];
} PHG_SERDES_SDS_RSVD0_t;

#define PHG_SERDES_SDS_RSVD1                                                                   ((jl_uint32)0x00264884U)
#define PHG_SERDES_SDS_RSVD1_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_SERDES_SDS_RSVD1_ENTRY_SIZE                                                                             (1)
#define PHG_SERDES_SDS_RSVD1_OFFSET_RSVD0                                                                          (16)
#define PHG_SERDES_SDS_RSVD1_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_SERDES_SDS_RSVD1_OFFSET_SDS_RSVD1                                                                       (0)
#define PHG_SERDES_SDS_RSVD1_OFFSET_SDS_RSVD1_WIDTH                                                                (16)
typedef union PHG_SERDES_SDS_RSVD1_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sds_rsvd1:PHG_SERDES_SDS_RSVD1_OFFSET_SDS_RSVD1_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_SDS_RSVD1_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_SDS_RSVD1_ENTRY_SIZE];
} PHG_SERDES_SDS_RSVD1_t;

#define PHG_SERDES_SDS_RSVD2                                                                   ((jl_uint32)0x00264888U)
#define PHG_SERDES_SDS_RSVD2_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_SERDES_SDS_RSVD2_ENTRY_SIZE                                                                             (1)
#define PHG_SERDES_SDS_RSVD2_OFFSET_RSVD0                                                                          (16)
#define PHG_SERDES_SDS_RSVD2_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_SERDES_SDS_RSVD2_OFFSET_SDS_RSVD2                                                                       (0)
#define PHG_SERDES_SDS_RSVD2_OFFSET_SDS_RSVD2_WIDTH                                                                (16)
typedef union PHG_SERDES_SDS_RSVD2_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sds_rsvd2:PHG_SERDES_SDS_RSVD2_OFFSET_SDS_RSVD2_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_SDS_RSVD2_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_SDS_RSVD2_ENTRY_SIZE];
} PHG_SERDES_SDS_RSVD2_t;

#define PHG_SERDES_SDS_RSVD3                                                                   ((jl_uint32)0x0026488CU)
#define PHG_SERDES_SDS_RSVD3_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_SERDES_SDS_RSVD3_ENTRY_SIZE                                                                             (1)
#define PHG_SERDES_SDS_RSVD3_OFFSET_RSVD0                                                                          (16)
#define PHG_SERDES_SDS_RSVD3_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_SERDES_SDS_RSVD3_OFFSET_SDS_RSVD3                                                                       (0)
#define PHG_SERDES_SDS_RSVD3_OFFSET_SDS_RSVD3_WIDTH                                                                (16)
typedef union PHG_SERDES_SDS_RSVD3_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sds_rsvd3:PHG_SERDES_SDS_RSVD3_OFFSET_SDS_RSVD3_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_SDS_RSVD3_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_SDS_RSVD3_ENTRY_SIZE];
} PHG_SERDES_SDS_RSVD3_t;

#define PHG_SERDES_SDS_RSVD4                                                                   ((jl_uint32)0x00264890U)
#define PHG_SERDES_SDS_RSVD4_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_SERDES_SDS_RSVD4_ENTRY_SIZE                                                                             (1)
#define PHG_SERDES_SDS_RSVD4_OFFSET_RSVD0                                                                          (16)
#define PHG_SERDES_SDS_RSVD4_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_SERDES_SDS_RSVD4_OFFSET_SDS_RSVD4                                                                       (0)
#define PHG_SERDES_SDS_RSVD4_OFFSET_SDS_RSVD4_WIDTH                                                                (16)
typedef union PHG_SERDES_SDS_RSVD4_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sds_rsvd4:PHG_SERDES_SDS_RSVD4_OFFSET_SDS_RSVD4_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_SDS_RSVD4_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_SDS_RSVD4_ENTRY_SIZE];
} PHG_SERDES_SDS_RSVD4_t;

#define PHG_SERDES_SDS_RSVD5                                                                   ((jl_uint32)0x00264894U)
#define PHG_SERDES_SDS_RSVD5_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_SERDES_SDS_RSVD5_ENTRY_SIZE                                                                             (1)
#define PHG_SERDES_SDS_RSVD5_OFFSET_RSVD0                                                                          (16)
#define PHG_SERDES_SDS_RSVD5_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_SERDES_SDS_RSVD5_OFFSET_SDS_RSVD5                                                                       (0)
#define PHG_SERDES_SDS_RSVD5_OFFSET_SDS_RSVD5_WIDTH                                                                (16)
typedef union PHG_SERDES_SDS_RSVD5_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sds_rsvd5:PHG_SERDES_SDS_RSVD5_OFFSET_SDS_RSVD5_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_SDS_RSVD5_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_SDS_RSVD5_ENTRY_SIZE];
} PHG_SERDES_SDS_RSVD5_t;

#define PHG_SERDES_SDS_RSVD6                                                                   ((jl_uint32)0x00264898U)
#define PHG_SERDES_SDS_RSVD6_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_SERDES_SDS_RSVD6_ENTRY_SIZE                                                                             (1)
#define PHG_SERDES_SDS_RSVD6_OFFSET_RSVD0                                                                          (16)
#define PHG_SERDES_SDS_RSVD6_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_SERDES_SDS_RSVD6_OFFSET_SDS_RSVD6                                                                       (0)
#define PHG_SERDES_SDS_RSVD6_OFFSET_SDS_RSVD6_WIDTH                                                                (16)
typedef union PHG_SERDES_SDS_RSVD6_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sds_rsvd6:PHG_SERDES_SDS_RSVD6_OFFSET_SDS_RSVD6_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_SDS_RSVD6_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_SDS_RSVD6_ENTRY_SIZE];
} PHG_SERDES_SDS_RSVD6_t;

#define PHG_SERDES_SDS_RSVD7                                                                   ((jl_uint32)0x0026489CU)
#define PHG_SERDES_SDS_RSVD7_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_SERDES_SDS_RSVD7_ENTRY_SIZE                                                                             (1)
#define PHG_SERDES_SDS_RSVD7_OFFSET_RSVD0                                                                          (16)
#define PHG_SERDES_SDS_RSVD7_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_SERDES_SDS_RSVD7_OFFSET_SDS_RSVD7                                                                       (0)
#define PHG_SERDES_SDS_RSVD7_OFFSET_SDS_RSVD7_WIDTH                                                                (16)
typedef union PHG_SERDES_SDS_RSVD7_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sds_rsvd7:PHG_SERDES_SDS_RSVD7_OFFSET_SDS_RSVD7_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_SDS_RSVD7_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_SDS_RSVD7_ENTRY_SIZE];
} PHG_SERDES_SDS_RSVD7_t;

#define PHG_SERDES_SDS_RSVD8                                                                   ((jl_uint32)0x002648A0U)
#define PHG_SERDES_SDS_RSVD8_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_SERDES_SDS_RSVD8_ENTRY_SIZE                                                                             (1)
#define PHG_SERDES_SDS_RSVD8_OFFSET_RSVD0                                                                          (16)
#define PHG_SERDES_SDS_RSVD8_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_SERDES_SDS_RSVD8_OFFSET_SDS_RSVD8                                                                       (0)
#define PHG_SERDES_SDS_RSVD8_OFFSET_SDS_RSVD8_WIDTH                                                                (16)
typedef union PHG_SERDES_SDS_RSVD8_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sds_rsvd8:PHG_SERDES_SDS_RSVD8_OFFSET_SDS_RSVD8_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_SDS_RSVD8_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_SDS_RSVD8_ENTRY_SIZE];
} PHG_SERDES_SDS_RSVD8_t;

#define PHG_SERDES_SDS_RSVD9                                                                   ((jl_uint32)0x002648A4U)
#define PHG_SERDES_SDS_RSVD9_NUM                                                               ((jl_uint32)0x00000001U)
#define PHG_SERDES_SDS_RSVD9_ENTRY_SIZE                                                                             (1)
#define PHG_SERDES_SDS_RSVD9_OFFSET_RSVD0                                                                          (16)
#define PHG_SERDES_SDS_RSVD9_OFFSET_RSVD0_WIDTH                                                                    (16)
#define PHG_SERDES_SDS_RSVD9_OFFSET_SDS_RSVD9                                                                       (0)
#define PHG_SERDES_SDS_RSVD9_OFFSET_SDS_RSVD9_WIDTH                                                                (16)
typedef union PHG_SERDES_SDS_RSVD9_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sds_rsvd9:PHG_SERDES_SDS_RSVD9_OFFSET_SDS_RSVD9_WIDTH;                                                  //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_SDS_RSVD9_OFFSET_RSVD0_WIDTH;                                                          //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_SDS_RSVD9_ENTRY_SIZE];
} PHG_SERDES_SDS_RSVD9_t;

#define PHG_SERDES_SDS_RSVD10                                                                  ((jl_uint32)0x002648A8U)
#define PHG_SERDES_SDS_RSVD10_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_SERDES_SDS_RSVD10_ENTRY_SIZE                                                                            (1)
#define PHG_SERDES_SDS_RSVD10_OFFSET_RSVD0                                                                         (16)
#define PHG_SERDES_SDS_RSVD10_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_SERDES_SDS_RSVD10_OFFSET_SDS_RSVD10                                                                     (0)
#define PHG_SERDES_SDS_RSVD10_OFFSET_SDS_RSVD10_WIDTH                                                              (16)
typedef union PHG_SERDES_SDS_RSVD10_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sds_rsvd10:PHG_SERDES_SDS_RSVD10_OFFSET_SDS_RSVD10_WIDTH;                                               //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_SDS_RSVD10_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_SDS_RSVD10_ENTRY_SIZE];
} PHG_SERDES_SDS_RSVD10_t;

#define PHG_SERDES_SDS_RSVD11                                                                  ((jl_uint32)0x002648ACU)
#define PHG_SERDES_SDS_RSVD11_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_SERDES_SDS_RSVD11_ENTRY_SIZE                                                                            (1)
#define PHG_SERDES_SDS_RSVD11_OFFSET_RSVD0                                                                         (16)
#define PHG_SERDES_SDS_RSVD11_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_SERDES_SDS_RSVD11_OFFSET_SDS_RSVD11                                                                     (0)
#define PHG_SERDES_SDS_RSVD11_OFFSET_SDS_RSVD11_WIDTH                                                              (16)
typedef union PHG_SERDES_SDS_RSVD11_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sds_rsvd11:PHG_SERDES_SDS_RSVD11_OFFSET_SDS_RSVD11_WIDTH;                                               //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_SDS_RSVD11_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_SDS_RSVD11_ENTRY_SIZE];
} PHG_SERDES_SDS_RSVD11_t;

#define PHG_SERDES_SDS_RSVD12                                                                  ((jl_uint32)0x002648B0U)
#define PHG_SERDES_SDS_RSVD12_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_SERDES_SDS_RSVD12_ENTRY_SIZE                                                                            (1)
#define PHG_SERDES_SDS_RSVD12_OFFSET_RSVD0                                                                         (16)
#define PHG_SERDES_SDS_RSVD12_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_SERDES_SDS_RSVD12_OFFSET_SDS_RSVD12                                                                     (0)
#define PHG_SERDES_SDS_RSVD12_OFFSET_SDS_RSVD12_WIDTH                                                              (16)
typedef union PHG_SERDES_SDS_RSVD12_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sds_rsvd12:PHG_SERDES_SDS_RSVD12_OFFSET_SDS_RSVD12_WIDTH;                                               //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_SDS_RSVD12_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_SDS_RSVD12_ENTRY_SIZE];
} PHG_SERDES_SDS_RSVD12_t;

#define PHG_SERDES_SDS_RSVD13                                                                  ((jl_uint32)0x002648B4U)
#define PHG_SERDES_SDS_RSVD13_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_SERDES_SDS_RSVD13_ENTRY_SIZE                                                                            (1)
#define PHG_SERDES_SDS_RSVD13_OFFSET_RSVD0                                                                         (16)
#define PHG_SERDES_SDS_RSVD13_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_SERDES_SDS_RSVD13_OFFSET_SDS_RSVD13                                                                     (0)
#define PHG_SERDES_SDS_RSVD13_OFFSET_SDS_RSVD13_WIDTH                                                              (16)
typedef union PHG_SERDES_SDS_RSVD13_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sds_rsvd13:PHG_SERDES_SDS_RSVD13_OFFSET_SDS_RSVD13_WIDTH;                                               //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_SDS_RSVD13_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_SDS_RSVD13_ENTRY_SIZE];
} PHG_SERDES_SDS_RSVD13_t;

#define PHG_SERDES_SDS_RSVD14                                                                  ((jl_uint32)0x002648B8U)
#define PHG_SERDES_SDS_RSVD14_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_SERDES_SDS_RSVD14_ENTRY_SIZE                                                                            (1)
#define PHG_SERDES_SDS_RSVD14_OFFSET_RSVD0                                                                         (16)
#define PHG_SERDES_SDS_RSVD14_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_SERDES_SDS_RSVD14_OFFSET_SDS_RSVD14                                                                     (0)
#define PHG_SERDES_SDS_RSVD14_OFFSET_SDS_RSVD14_WIDTH                                                              (16)
typedef union PHG_SERDES_SDS_RSVD14_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sds_rsvd14:PHG_SERDES_SDS_RSVD14_OFFSET_SDS_RSVD14_WIDTH;                                               //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_SDS_RSVD14_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_SDS_RSVD14_ENTRY_SIZE];
} PHG_SERDES_SDS_RSVD14_t;

#define PHG_SERDES_SDS_RSVD15                                                                  ((jl_uint32)0x002648BCU)
#define PHG_SERDES_SDS_RSVD15_NUM                                                              ((jl_uint32)0x00000001U)
#define PHG_SERDES_SDS_RSVD15_ENTRY_SIZE                                                                            (1)
#define PHG_SERDES_SDS_RSVD15_OFFSET_RSVD0                                                                         (16)
#define PHG_SERDES_SDS_RSVD15_OFFSET_RSVD0_WIDTH                                                                   (16)
#define PHG_SERDES_SDS_RSVD15_OFFSET_SDS_RSVD15                                                                     (0)
#define PHG_SERDES_SDS_RSVD15_OFFSET_SDS_RSVD15_WIDTH                                                              (16)
typedef union PHG_SERDES_SDS_RSVD15_u {
    struct __attribute__ ((packed)) {
        jl_uint32 sds_rsvd15:PHG_SERDES_SDS_RSVD15_OFFSET_SDS_RSVD15_WIDTH;                                               //[15: 0]
        jl_uint32 rsvd0:PHG_SERDES_SDS_RSVD15_OFFSET_RSVD0_WIDTH;                                                         //[31:16]
    } BF;
    jl_uint32 val[PHG_SERDES_SDS_RSVD15_ENTRY_SIZE];
} PHG_SERDES_SDS_RSVD15_t;

#endif /* __JL_REG_PHG_SERDES_H__ */

