#
#Chip ID config
#
ifeq ($(CONFIG_CHIP_JL61XX), y)
CFLAGS += -DCONFIG_JL_CHIP_JL61XX
endif
ifeq ($(CONFIG_HW_VER_JL6108), y)
CFLAGS += -DCONFIG_JL_CHIP_ID_6108
endif
ifeq ($(CONFIG_HW_VER_JL6110), y)
CFLAGS += -DCONFIG_JL_CHIP_ID_6110
endif
ifeq ($(CONFIG_HW_VER_JL6105), y)
CFLAGS += -DCONFIG_JL_CHIP_ID_6105
endif
ifeq ($(CONFIG_HW_VER_JL6107), y)
CFLAGS += -DCONFIG_JL_CHIP_ID_6107
endif
ifeq ($(CONFIG_HW_VER_JL6107S), y)
CFLAGS += -DCONFIG_JL_CHIP_ID_6107S
endif
ifeq ($(CONFIG_HW_VER_JL6107SC), y)
CFLAGS += -DCONFIG_JL_CHIP_ID_6107SC
endif

#
#Thread safe config
#
ifeq ($(CONFIG_API_MUTEX), y)
CFLAGS += -DCONFIG_JL_API_MUTEX
endif
ifeq ($(CONFIG_IO_MUTEX), y)
CFLAGS += -DCONFIG_JL_IO_MUTEX
endif

#
#Debug level config
#
ifneq ($(CONFIG_LIBSWITCH_DEBUG_LEVEL),)
CFLAGS += -DCONFIG_JL_DEBUG
CFLAGS += -DJL_DBG_LEVEL=${CONFIG_LIBSWITCH_DEBUG_LEVEL}
endif

#
#Load patch config
#
ifneq ($(CONFIG_LIBSWITCH_LOAD_PATCH),)
CFLAGS += -DCONFIG_JL_LOAD_PATCH
endif
ifneq ($(CONFIG_LIBSWITCH_PATCH_61XX_VER_R0P0),)
CFLAGS += -DCONFIG_JL_PATCH_61XX_VER_R0P0
endif
ifneq ($(CONFIG_LIBSWITCH_PATCH_6107X_VER_R0P0),)
CFLAGS += -DCONFIG_JL_PATCH_6107X_VER_R0P0
endif

#
#IO device types config
#
#
ifeq ($(CONFIG_IO_CPU), y)
CFLAGS += -DCONFIG_JL_IO_CPU
endif
ifeq ($(CONFIG_IO_SMI), y)
CFLAGS += -DCONFIG_JL_IO_SMI
endif
ifeq ($(CONFIG_IO_I2C), y)
CFLAGS += -DCONFIG_JL_IO_I2C
endif
ifeq ($(CONFIG_IO_SPI), y)
CFLAGS += -DCONFIG_JL_IO_SPI
endif
ifeq ($(CONFIG_SMI_OVER_MDIO), y)
CFLAGS += -DCONFIG_JL_SMI_OVER_MDIO
endif
ifeq ($(CONFIG_SMI_OVER_GPIO), y)
CFLAGS += -DCONFIG_JL_SMI_OVER_GPIO
endif
ifeq ($(CONFIG_SMI_OVER_SPI), y)
CFLAGS += -DCONFIG_JL_SMI_OVER_SPI
endif
ifeq ($(CONFIG_SMI_OVER_FTDI), y)
CFLAGS += -DCONFIG_JL_SMI_OVER_FTDI
endif
ifeq ($(CONFIG_SMI_OVER_HID), y)
CFLAGS += -DCONFIG_JL_SMI_OVER_HID
endif
ifeq ($(CONFIG_SMI_OVER_WINUSB), y)
CFLAGS += -DCONFIG_JL_SMI_OVER_WINUSB
endif

ifeq ($(CONFIG_I2C_OVER_GPIO), y)
CFLAGS += -DCONFIG_JL_I2C_OVER_GPIO
endif

ifeq ($(CONFIG_I2C_RAW), y)
CFLAGS += -DCONFIG_JL_I2C_RAW
endif

ifeq ($(CONFIG_SPI_RAW), y)
CFLAGS += -DCONFIG_JL_SPI_RAW
endif



#
#Debug dump register write config
#
ifeq ($(CONFIG_DUMP_REG_WRITE), y)
CFLAGS += -DCONFIG_JL_DUMP_REG_WRITE
endif

ifeq ($(CONFIG_TOOLCHAIN_EXTERNAL_CFLAGS), y)
CFLAGS += CONFIG_TOOLCHAIN_EXTERNAL_CFLAGS
endif


#
#Driver config
#
ifneq ($(CONFIG_HW_VER_JL6108)$(CONFIG_HW_VER_JL6110),)
DRV_DIRS += $(JL_SDK_DIR)/src/jl61xx
endif
ifneq ($(CONFIG_HW_VER_JL6105)$(CONFIG_HW_VER_JL6107)$(CONFIG_HW_VER_JL6107S)$(CONFIG_HW_VER_JL6107SC),)
DRV_DIRS += $(JL_SDK_DIR)/src/jl6107x
endif

# Function definition
# Upper code translation
UC = $(shell echo '$1' | tr '[:lower:]' '[:upper:]')
CFLAGS += $(addprefix -DCONFIG_, $(call UC, $(patsubst %.c, %, $(notdir $(foreach dir, $(DRV_DIRS), $(wildcard $(dir)/*.c))))))
CFLAGS += -fgnu89-inline


cflags:
	@echo $(CFLAGS)
